/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? 0 : 0;
        var yOffset = options.yaxis.mode === "time" ? 0 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 264.0, "minX": 0.0, "maxY": 13946.0, "series": [{"data": [[0.0, 1086.0], [0.1, 1086.0], [0.2, 1086.0], [0.3, 1086.0], [0.4, 1141.0], [0.5, 1141.0], [0.6, 1141.0], [0.7, 1304.0], [0.8, 1304.0], [0.9, 1304.0], [1.0, 1312.0], [1.1, 1312.0], [1.2, 1312.0], [1.3, 1312.0], [1.4, 1346.0], [1.5, 1346.0], [1.6, 1346.0], [1.7, 1347.0], [1.8, 1347.0], [1.9, 1347.0], [2.0, 1350.0], [2.1, 1350.0], [2.2, 1350.0], [2.3, 1350.0], [2.4, 1355.0], [2.5, 1355.0], [2.6, 1355.0], [2.7, 1357.0], [2.8, 1357.0], [2.9, 1357.0], [3.0, 1359.0], [3.1, 1359.0], [3.2, 1359.0], [3.3, 1359.0], [3.4, 1362.0], [3.5, 1362.0], [3.6, 1362.0], [3.7, 1370.0], [3.8, 1370.0], [3.9, 1370.0], [4.0, 1371.0], [4.1, 1371.0], [4.2, 1371.0], [4.3, 1371.0], [4.4, 1385.0], [4.5, 1385.0], [4.6, 1385.0], [4.7, 1391.0], [4.8, 1391.0], [4.9, 1391.0], [5.0, 1713.0], [5.1, 1713.0], [5.2, 1713.0], [5.3, 1713.0], [5.4, 2811.0], [5.5, 2811.0], [5.6, 2811.0], [5.7, 2886.0], [5.8, 2886.0], [5.9, 2886.0], [6.0, 2892.0], [6.1, 2892.0], [6.2, 2892.0], [6.3, 2892.0], [6.4, 2898.0], [6.5, 2898.0], [6.6, 2898.0], [6.7, 3001.0], [6.8, 3001.0], [6.9, 3001.0], [7.0, 3009.0], [7.1, 3009.0], [7.2, 3009.0], [7.3, 3009.0], [7.4, 3022.0], [7.5, 3022.0], [7.6, 3022.0], [7.7, 3056.0], [7.8, 3056.0], [7.9, 3056.0], [8.0, 3071.0], [8.1, 3071.0], [8.2, 3071.0], [8.3, 3071.0], [8.4, 3084.0], [8.5, 3084.0], [8.6, 3084.0], [8.7, 3087.0], [8.8, 3087.0], [8.9, 3087.0], [9.0, 3098.0], [9.1, 3098.0], [9.2, 3098.0], [9.3, 3098.0], [9.4, 3101.0], [9.5, 3101.0], [9.6, 3101.0], [9.7, 3102.0], [9.8, 3102.0], [9.9, 3102.0], [10.0, 3104.0], [10.1, 3104.0], [10.2, 3104.0], [10.3, 3104.0], [10.4, 3113.0], [10.5, 3113.0], [10.6, 3113.0], [10.7, 3133.0], [10.8, 3133.0], [10.9, 3133.0], [11.0, 3133.0], [11.1, 3205.0], [11.2, 3205.0], [11.3, 3205.0], [11.4, 3645.0], [11.5, 3645.0], [11.6, 3645.0], [11.7, 3677.0], [11.8, 3677.0], [11.9, 3677.0], [12.0, 3677.0], [12.1, 3683.0], [12.2, 3683.0], [12.3, 3683.0], [12.4, 3774.0], [12.5, 3774.0], [12.6, 3774.0], [12.7, 3805.0], [12.8, 3805.0], [12.9, 3805.0], [13.0, 3805.0], [13.1, 3876.0], [13.2, 3876.0], [13.3, 3876.0], [13.4, 3884.0], [13.5, 3884.0], [13.6, 3884.0], [13.7, 3911.0], [13.8, 3911.0], [13.9, 3911.0], [14.0, 3911.0], [14.1, 3915.0], [14.2, 3915.0], [14.3, 3915.0], [14.4, 3915.0], [14.5, 3915.0], [14.6, 3915.0], [14.7, 3919.0], [14.8, 3919.0], [14.9, 3919.0], [15.0, 3919.0], [15.1, 3922.0], [15.2, 3922.0], [15.3, 3922.0], [15.4, 3923.0], [15.5, 3923.0], [15.6, 3923.0], [15.7, 3925.0], [15.8, 3925.0], [15.9, 3925.0], [16.0, 3925.0], [16.1, 3927.0], [16.2, 3927.0], [16.3, 3927.0], [16.4, 3928.0], [16.5, 3928.0], [16.6, 3928.0], [16.7, 3929.0], [16.8, 3929.0], [16.9, 3929.0], [17.0, 3929.0], [17.1, 3931.0], [17.2, 3931.0], [17.3, 3931.0], [17.4, 3938.0], [17.5, 3938.0], [17.6, 3938.0], [17.7, 3978.0], [17.8, 3978.0], [17.9, 3978.0], [18.0, 4067.0], [18.1, 4067.0], [18.2, 4067.0], [18.3, 4067.0], [18.4, 4087.0], [18.5, 4087.0], [18.6, 4087.0], [18.7, 4248.0], [18.8, 4248.0], [18.9, 4248.0], [19.0, 4417.0], [19.1, 4417.0], [19.2, 4417.0], [19.3, 4417.0], [19.4, 4428.0], [19.5, 4428.0], [19.6, 4428.0], [19.7, 4431.0], [19.8, 4431.0], [19.9, 4431.0], [20.0, 4443.0], [20.1, 4443.0], [20.2, 4443.0], [20.3, 4443.0], [20.4, 4462.0], [20.5, 4462.0], [20.6, 4462.0], [20.7, 4487.0], [20.8, 4487.0], [20.9, 4487.0], [21.0, 4533.0], [21.1, 4533.0], [21.2, 4533.0], [21.3, 4533.0], [21.4, 4534.0], [21.5, 4534.0], [21.6, 4534.0], [21.7, 4536.0], [21.8, 4536.0], [21.9, 4536.0], [22.0, 4548.0], [22.1, 4548.0], [22.2, 4548.0], [22.3, 4548.0], [22.4, 4549.0], [22.5, 4549.0], [22.6, 4549.0], [22.7, 4555.0], [22.8, 4555.0], [22.9, 4555.0], [23.0, 4556.0], [23.1, 4556.0], [23.2, 4556.0], [23.3, 4556.0], [23.4, 4561.0], [23.5, 4561.0], [23.6, 4561.0], [23.7, 4562.0], [23.8, 4562.0], [23.9, 4562.0], [24.0, 4566.0], [24.1, 4566.0], [24.2, 4566.0], [24.3, 4566.0], [24.4, 4574.0], [24.5, 4574.0], [24.6, 4574.0], [24.7, 4577.0], [24.8, 4577.0], [24.9, 4577.0], [25.0, 4584.0], [25.1, 4584.0], [25.2, 4584.0], [25.3, 4584.0], [25.4, 4586.0], [25.5, 4586.0], [25.6, 4586.0], [25.7, 4610.0], [25.8, 4610.0], [25.9, 4610.0], [26.0, 4631.0], [26.1, 4631.0], [26.2, 4631.0], [26.3, 4631.0], [26.4, 4642.0], [26.5, 4642.0], [26.6, 4642.0], [26.7, 4653.0], [26.8, 4653.0], [26.9, 4653.0], [27.0, 4686.0], [27.1, 4686.0], [27.2, 4686.0], [27.3, 4686.0], [27.4, 4696.0], [27.5, 4696.0], [27.6, 4696.0], [27.7, 4720.0], [27.8, 4720.0], [27.9, 4720.0], [28.0, 4729.0], [28.1, 4729.0], [28.2, 4729.0], [28.3, 4729.0], [28.4, 4730.0], [28.5, 4730.0], [28.6, 4730.0], [28.7, 4859.0], [28.8, 4859.0], [28.9, 4859.0], [29.0, 4864.0], [29.1, 4864.0], [29.2, 4864.0], [29.3, 4864.0], [29.4, 5045.0], [29.5, 5045.0], [29.6, 5045.0], [29.7, 5051.0], [29.8, 5051.0], [29.9, 5051.0], [30.0, 5060.0], [30.1, 5060.0], [30.2, 5060.0], [30.3, 5060.0], [30.4, 5061.0], [30.5, 5061.0], [30.6, 5061.0], [30.7, 5063.0], [30.8, 5063.0], [30.9, 5063.0], [31.0, 5067.0], [31.1, 5067.0], [31.2, 5067.0], [31.3, 5067.0], [31.4, 5068.0], [31.5, 5068.0], [31.6, 5068.0], [31.7, 5073.0], [31.8, 5073.0], [31.9, 5073.0], [32.0, 5073.0], [32.1, 5073.0], [32.2, 5073.0], [32.3, 5073.0], [32.4, 5075.0], [32.5, 5075.0], [32.6, 5075.0], [32.7, 5076.0], [32.8, 5076.0], [32.9, 5076.0], [33.0, 5077.0], [33.1, 5077.0], [33.2, 5077.0], [33.3, 5077.0], [33.4, 5120.0], [33.5, 5120.0], [33.6, 5120.0], [33.7, 5125.0], [33.8, 5125.0], [33.9, 5125.0], [34.0, 5125.0], [34.1, 5125.0], [34.2, 5125.0], [34.3, 5125.0], [34.4, 5134.0], [34.5, 5134.0], [34.6, 5134.0], [34.7, 5136.0], [34.8, 5136.0], [34.9, 5136.0], [35.0, 5141.0], [35.1, 5141.0], [35.2, 5141.0], [35.3, 5141.0], [35.4, 5153.0], [35.5, 5153.0], [35.6, 5153.0], [35.7, 5162.0], [35.8, 5162.0], [35.9, 5162.0], [36.0, 5164.0], [36.1, 5164.0], [36.2, 5164.0], [36.3, 5164.0], [36.4, 5168.0], [36.5, 5168.0], [36.6, 5168.0], [36.7, 5170.0], [36.8, 5170.0], [36.9, 5170.0], [37.0, 5176.0], [37.1, 5176.0], [37.2, 5176.0], [37.3, 5176.0], [37.4, 5179.0], [37.5, 5179.0], [37.6, 5179.0], [37.7, 5224.0], [37.8, 5224.0], [37.9, 5224.0], [38.0, 5230.0], [38.1, 5230.0], [38.2, 5230.0], [38.3, 5230.0], [38.4, 5235.0], [38.5, 5235.0], [38.6, 5235.0], [38.7, 5255.0], [38.8, 5255.0], [38.9, 5255.0], [39.0, 5260.0], [39.1, 5260.0], [39.2, 5260.0], [39.3, 5260.0], [39.4, 5271.0], [39.5, 5271.0], [39.6, 5271.0], [39.7, 5275.0], [39.8, 5275.0], [39.9, 5275.0], [40.0, 5276.0], [40.1, 5276.0], [40.2, 5276.0], [40.3, 5276.0], [40.4, 5283.0], [40.5, 5283.0], [40.6, 5283.0], [40.7, 5283.0], [40.8, 5283.0], [40.9, 5283.0], [41.0, 5284.0], [41.1, 5284.0], [41.2, 5284.0], [41.3, 5284.0], [41.4, 5293.0], [41.5, 5293.0], [41.6, 5293.0], [41.7, 5296.0], [41.8, 5296.0], [41.9, 5296.0], [42.0, 5296.0], [42.1, 5324.0], [42.2, 5324.0], [42.3, 5324.0], [42.4, 5345.0], [42.5, 5345.0], [42.6, 5345.0], [42.7, 5352.0], [42.8, 5352.0], [42.9, 5352.0], [43.0, 5352.0], [43.1, 5360.0], [43.2, 5360.0], [43.3, 5360.0], [43.4, 5362.0], [43.5, 5362.0], [43.6, 5362.0], [43.7, 5363.0], [43.8, 5363.0], [43.9, 5363.0], [44.0, 5363.0], [44.1, 5368.0], [44.2, 5368.0], [44.3, 5368.0], [44.4, 5370.0], [44.5, 5370.0], [44.6, 5370.0], [44.7, 5373.0], [44.8, 5373.0], [44.9, 5373.0], [45.0, 5373.0], [45.1, 5377.0], [45.2, 5377.0], [45.3, 5377.0], [45.4, 5378.0], [45.5, 5378.0], [45.6, 5378.0], [45.7, 5379.0], [45.8, 5379.0], [45.9, 5379.0], [46.0, 5379.0], [46.1, 5385.0], [46.2, 5385.0], [46.3, 5385.0], [46.4, 5385.0], [46.5, 5385.0], [46.6, 5385.0], [46.7, 5387.0], [46.8, 5387.0], [46.9, 5387.0], [47.0, 5387.0], [47.1, 5393.0], [47.2, 5393.0], [47.3, 5393.0], [47.4, 5401.0], [47.5, 5401.0], [47.6, 5401.0], [47.7, 5402.0], [47.8, 5402.0], [47.9, 5402.0], [48.0, 5402.0], [48.1, 5440.0], [48.2, 5440.0], [48.3, 5440.0], [48.4, 5470.0], [48.5, 5470.0], [48.6, 5470.0], [48.7, 5510.0], [48.8, 5510.0], [48.9, 5510.0], [49.0, 5510.0], [49.1, 5567.0], [49.2, 5567.0], [49.3, 5567.0], [49.4, 5567.0], [49.5, 5567.0], [49.6, 5567.0], [49.7, 5570.0], [49.8, 5570.0], [49.9, 5570.0], [50.0, 5570.0], [50.1, 5576.0], [50.2, 5576.0], [50.3, 5576.0], [50.4, 5577.0], [50.5, 5577.0], [50.6, 5577.0], [50.7, 5578.0], [50.8, 5578.0], [50.9, 5578.0], [51.0, 5578.0], [51.1, 5593.0], [51.2, 5593.0], [51.3, 5593.0], [51.4, 5624.0], [51.5, 5624.0], [51.6, 5624.0], [51.7, 5627.0], [51.8, 5627.0], [51.9, 5627.0], [52.0, 5627.0], [52.1, 5629.0], [52.2, 5629.0], [52.3, 5629.0], [52.4, 5633.0], [52.5, 5633.0], [52.6, 5633.0], [52.7, 5638.0], [52.8, 5638.0], [52.9, 5638.0], [53.0, 5638.0], [53.1, 5638.0], [53.2, 5638.0], [53.3, 5638.0], [53.4, 5644.0], [53.5, 5644.0], [53.6, 5644.0], [53.7, 5649.0], [53.8, 5649.0], [53.9, 5649.0], [54.0, 5649.0], [54.1, 5649.0], [54.2, 5649.0], [54.3, 5649.0], [54.4, 5650.0], [54.5, 5650.0], [54.6, 5650.0], [54.7, 5654.0], [54.8, 5654.0], [54.9, 5654.0], [55.0, 5654.0], [55.1, 5656.0], [55.2, 5656.0], [55.3, 5656.0], [55.4, 5663.0], [55.5, 5663.0], [55.6, 5663.0], [55.7, 5666.0], [55.8, 5666.0], [55.9, 5666.0], [56.0, 5666.0], [56.1, 5670.0], [56.2, 5670.0], [56.3, 5670.0], [56.4, 5673.0], [56.5, 5673.0], [56.6, 5673.0], [56.7, 5676.0], [56.8, 5676.0], [56.9, 5676.0], [57.0, 5676.0], [57.1, 5678.0], [57.2, 5678.0], [57.3, 5678.0], [57.4, 5679.0], [57.5, 5679.0], [57.6, 5679.0], [57.7, 5680.0], [57.8, 5680.0], [57.9, 5680.0], [58.0, 5680.0], [58.1, 5682.0], [58.2, 5682.0], [58.3, 5682.0], [58.4, 5683.0], [58.5, 5683.0], [58.6, 5683.0], [58.7, 5686.0], [58.8, 5686.0], [58.9, 5686.0], [59.0, 5686.0], [59.1, 5688.0], [59.2, 5688.0], [59.3, 5688.0], [59.4, 5689.0], [59.5, 5689.0], [59.6, 5689.0], [59.7, 5690.0], [59.8, 5690.0], [59.9, 5690.0], [60.0, 5690.0], [60.1, 5691.0], [60.2, 5691.0], [60.3, 5691.0], [60.4, 5691.0], [60.5, 5691.0], [60.6, 5691.0], [60.7, 5698.0], [60.8, 5698.0], [60.9, 5698.0], [61.0, 5698.0], [61.1, 5703.0], [61.2, 5703.0], [61.3, 5703.0], [61.4, 5703.0], [61.5, 5703.0], [61.6, 5703.0], [61.7, 5712.0], [61.8, 5712.0], [61.9, 5712.0], [62.0, 5712.0], [62.1, 5714.0], [62.2, 5714.0], [62.3, 5714.0], [62.4, 5717.0], [62.5, 5717.0], [62.6, 5717.0], [62.7, 5727.0], [62.8, 5727.0], [62.9, 5727.0], [63.0, 5727.0], [63.1, 5728.0], [63.2, 5728.0], [63.3, 5728.0], [63.4, 5732.0], [63.5, 5732.0], [63.6, 5732.0], [63.7, 5732.0], [63.8, 5732.0], [63.9, 5732.0], [64.0, 5732.0], [64.1, 5735.0], [64.2, 5735.0], [64.3, 5735.0], [64.4, 5747.0], [64.5, 5747.0], [64.6, 5747.0], [64.7, 5750.0], [64.8, 5750.0], [64.9, 5750.0], [65.0, 5750.0], [65.1, 5750.0], [65.2, 5750.0], [65.3, 5750.0], [65.4, 5757.0], [65.5, 5757.0], [65.6, 5757.0], [65.7, 5770.0], [65.8, 5770.0], [65.9, 5770.0], [66.0, 5770.0], [66.1, 5771.0], [66.2, 5771.0], [66.3, 5771.0], [66.4, 5773.0], [66.5, 5773.0], [66.6, 5773.0], [66.7, 5777.0], [66.8, 5777.0], [66.9, 5777.0], [67.0, 5777.0], [67.1, 5778.0], [67.2, 5778.0], [67.3, 5778.0], [67.4, 5781.0], [67.5, 5781.0], [67.6, 5781.0], [67.7, 5783.0], [67.8, 5783.0], [67.9, 5783.0], [68.0, 5783.0], [68.1, 5785.0], [68.2, 5785.0], [68.3, 5785.0], [68.4, 5818.0], [68.5, 5818.0], [68.6, 5818.0], [68.7, 5824.0], [68.8, 5824.0], [68.9, 5824.0], [69.0, 5824.0], [69.1, 5836.0], [69.2, 5836.0], [69.3, 5836.0], [69.4, 5879.0], [69.5, 5879.0], [69.6, 5879.0], [69.7, 5898.0], [69.8, 5898.0], [69.9, 5898.0], [70.0, 5898.0], [70.1, 6048.0], [70.2, 6048.0], [70.3, 6048.0], [70.4, 6050.0], [70.5, 6050.0], [70.6, 6050.0], [70.7, 6118.0], [70.8, 6118.0], [70.9, 6118.0], [71.0, 6118.0], [71.1, 6125.0], [71.2, 6125.0], [71.3, 6125.0], [71.4, 6145.0], [71.5, 6145.0], [71.6, 6145.0], [71.7, 6149.0], [71.8, 6149.0], [71.9, 6149.0], [72.0, 6149.0], [72.1, 6150.0], [72.2, 6150.0], [72.3, 6150.0], [72.4, 6157.0], [72.5, 6157.0], [72.6, 6157.0], [72.7, 6186.0], [72.8, 6186.0], [72.9, 6186.0], [73.0, 6186.0], [73.1, 6186.0], [73.2, 6186.0], [73.3, 6186.0], [73.4, 6187.0], [73.5, 6187.0], [73.6, 6187.0], [73.7, 6187.0], [73.8, 6187.0], [73.9, 6187.0], [74.0, 6187.0], [74.1, 6202.0], [74.2, 6202.0], [74.3, 6202.0], [74.4, 6224.0], [74.5, 6224.0], [74.6, 6224.0], [74.7, 6327.0], [74.8, 6327.0], [74.9, 6327.0], [75.0, 6365.0], [75.1, 6365.0], [75.2, 6365.0], [75.3, 6365.0], [75.4, 6390.0], [75.5, 6390.0], [75.6, 6390.0], [75.7, 6556.0], [75.8, 6556.0], [75.9, 6556.0], [76.0, 6564.0], [76.1, 6564.0], [76.2, 6564.0], [76.3, 6564.0], [76.4, 7849.0], [76.5, 7849.0], [76.6, 7849.0], [76.7, 7935.0], [76.8, 7935.0], [76.9, 7935.0], [77.0, 7951.0], [77.1, 7951.0], [77.2, 7951.0], [77.3, 7951.0], [77.4, 7951.0], [77.5, 7951.0], [77.6, 7951.0], [77.7, 7965.0], [77.8, 7965.0], [77.9, 7965.0], [78.0, 8018.0], [78.1, 8018.0], [78.2, 8018.0], [78.3, 8018.0], [78.4, 8026.0], [78.5, 8026.0], [78.6, 8026.0], [78.7, 8030.0], [78.8, 8030.0], [78.9, 8030.0], [79.0, 8038.0], [79.1, 8038.0], [79.2, 8038.0], [79.3, 8038.0], [79.4, 8045.0], [79.5, 8045.0], [79.6, 8045.0], [79.7, 8067.0], [79.8, 8067.0], [79.9, 8067.0], [80.0, 8187.0], [80.1, 8187.0], [80.2, 8187.0], [80.3, 8187.0], [80.4, 8196.0], [80.5, 8196.0], [80.6, 8196.0], [80.7, 8215.0], [80.8, 8215.0], [80.9, 8215.0], [81.0, 8265.0], [81.1, 8265.0], [81.2, 8265.0], [81.3, 8265.0], [81.4, 8266.0], [81.5, 8266.0], [81.6, 8266.0], [81.7, 8276.0], [81.8, 8276.0], [81.9, 8276.0], [82.0, 8284.0], [82.1, 8284.0], [82.2, 8284.0], [82.3, 8284.0], [82.4, 8286.0], [82.5, 8286.0], [82.6, 8286.0], [82.7, 8299.0], [82.8, 8299.0], [82.9, 8299.0], [83.0, 8319.0], [83.1, 8319.0], [83.2, 8319.0], [83.3, 8319.0], [83.4, 8342.0], [83.5, 8342.0], [83.6, 8342.0], [83.7, 8348.0], [83.8, 8348.0], [83.9, 8348.0], [84.0, 8349.0], [84.1, 8349.0], [84.2, 8349.0], [84.3, 8349.0], [84.4, 8351.0], [84.5, 8351.0], [84.6, 8351.0], [84.7, 8364.0], [84.8, 8364.0], [84.9, 8364.0], [85.0, 8369.0], [85.1, 8369.0], [85.2, 8369.0], [85.3, 8369.0], [85.4, 8383.0], [85.5, 8383.0], [85.6, 8383.0], [85.7, 8398.0], [85.8, 8398.0], [85.9, 8398.0], [86.0, 8402.0], [86.1, 8402.0], [86.2, 8402.0], [86.3, 8402.0], [86.4, 8429.0], [86.5, 8429.0], [86.6, 8429.0], [86.7, 8475.0], [86.8, 8475.0], [86.9, 8475.0], [87.0, 8565.0], [87.1, 8565.0], [87.2, 8565.0], [87.3, 8565.0], [87.4, 8590.0], [87.5, 8590.0], [87.6, 8590.0], [87.7, 8601.0], [87.8, 8601.0], [87.9, 8601.0], [88.0, 8701.0], [88.1, 8701.0], [88.2, 8701.0], [88.3, 8701.0], [88.4, 8731.0], [88.5, 8731.0], [88.6, 8731.0], [88.7, 8822.0], [88.8, 8822.0], [88.9, 8822.0], [89.0, 9041.0], [89.1, 9041.0], [89.2, 9041.0], [89.3, 9041.0], [89.4, 9045.0], [89.5, 9045.0], [89.6, 9045.0], [89.7, 9063.0], [89.8, 9063.0], [89.9, 9063.0], [90.0, 9064.0], [90.1, 9064.0], [90.2, 9064.0], [90.3, 9064.0], [90.4, 9069.0], [90.5, 9069.0], [90.6, 9069.0], [90.7, 9082.0], [90.8, 9082.0], [90.9, 9082.0], [91.0, 9089.0], [91.1, 9089.0], [91.2, 9089.0], [91.3, 9089.0], [91.4, 9102.0], [91.5, 9102.0], [91.6, 9102.0], [91.7, 9106.0], [91.8, 9106.0], [91.9, 9106.0], [92.0, 9149.0], [92.1, 9149.0], [92.2, 9149.0], [92.3, 9149.0], [92.4, 9180.0], [92.5, 9180.0], [92.6, 9180.0], [92.7, 9183.0], [92.8, 9183.0], [92.9, 9183.0], [93.0, 9194.0], [93.1, 9194.0], [93.2, 9194.0], [93.3, 9194.0], [93.4, 9223.0], [93.5, 9223.0], [93.6, 9223.0], [93.7, 9234.0], [93.8, 9234.0], [93.9, 9234.0], [94.0, 9241.0], [94.1, 9241.0], [94.2, 9241.0], [94.3, 9241.0], [94.4, 9250.0], [94.5, 9250.0], [94.6, 9250.0], [94.7, 9840.0], [94.8, 9840.0], [94.9, 9840.0], [95.0, 9857.0], [95.1, 9857.0], [95.2, 9857.0], [95.3, 9857.0], [95.4, 9885.0], [95.5, 9885.0], [95.6, 9885.0], [95.7, 13698.0], [95.8, 13698.0], [95.9, 13698.0], [96.0, 13745.0], [96.1, 13745.0], [96.2, 13745.0], [96.3, 13745.0], [96.4, 13771.0], [96.5, 13771.0], [96.6, 13771.0], [96.7, 13788.0], [96.8, 13788.0], [96.9, 13788.0], [97.0, 13826.0], [97.1, 13826.0], [97.2, 13826.0], [97.3, 13826.0], [97.4, 13848.0], [97.5, 13848.0], [97.6, 13848.0], [97.7, 13855.0], [97.8, 13855.0], [97.9, 13855.0], [98.0, 13882.0], [98.1, 13882.0], [98.2, 13882.0], [98.3, 13882.0], [98.4, 13891.0], [98.5, 13891.0], [98.6, 13891.0], [98.7, 13917.0], [98.8, 13917.0], [98.9, 13917.0], [99.0, 13929.0], [99.1, 13929.0], [99.2, 13929.0], [99.3, 13929.0], [99.4, 13932.0], [99.5, 13932.0], [99.6, 13932.0], [99.7, 13946.0], [99.8, 13946.0], [99.9, 13946.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 264.0], [0.1, 264.0], [0.2, 264.0], [0.3, 264.0], [0.4, 265.0], [0.5, 265.0], [0.6, 265.0], [0.7, 265.0], [0.8, 265.0], [0.9, 265.0], [1.0, 265.0], [1.1, 265.0], [1.2, 265.0], [1.3, 265.0], [1.4, 265.0], [1.5, 265.0], [1.6, 265.0], [1.7, 265.0], [1.8, 265.0], [1.9, 265.0], [2.0, 266.0], [2.1, 266.0], [2.2, 266.0], [2.3, 266.0], [2.4, 266.0], [2.5, 266.0], [2.6, 266.0], [2.7, 266.0], [2.8, 266.0], [2.9, 266.0], [3.0, 266.0], [3.1, 266.0], [3.2, 266.0], [3.3, 266.0], [3.4, 266.0], [3.5, 266.0], [3.6, 266.0], [3.7, 267.0], [3.8, 267.0], [3.9, 267.0], [4.0, 267.0], [4.1, 267.0], [4.2, 267.0], [4.3, 267.0], [4.4, 267.0], [4.5, 267.0], [4.6, 267.0], [4.7, 267.0], [4.8, 267.0], [4.9, 267.0], [5.0, 267.0], [5.1, 267.0], [5.2, 267.0], [5.3, 267.0], [5.4, 267.0], [5.5, 267.0], [5.6, 267.0], [5.7, 268.0], [5.8, 268.0], [5.9, 268.0], [6.0, 268.0], [6.1, 268.0], [6.2, 268.0], [6.3, 268.0], [6.4, 268.0], [6.5, 268.0], [6.6, 268.0], [6.7, 268.0], [6.8, 268.0], [6.9, 268.0], [7.0, 268.0], [7.1, 268.0], [7.2, 268.0], [7.3, 268.0], [7.4, 268.0], [7.5, 268.0], [7.6, 268.0], [7.7, 269.0], [7.8, 269.0], [7.9, 269.0], [8.0, 269.0], [8.1, 269.0], [8.2, 269.0], [8.3, 269.0], [8.4, 269.0], [8.5, 269.0], [8.6, 269.0], [8.7, 269.0], [8.8, 269.0], [8.9, 269.0], [9.0, 269.0], [9.1, 269.0], [9.2, 269.0], [9.3, 269.0], [9.4, 269.0], [9.5, 269.0], [9.6, 269.0], [9.7, 269.0], [9.8, 269.0], [9.9, 269.0], [10.0, 269.0], [10.1, 269.0], [10.2, 269.0], [10.3, 269.0], [10.4, 269.0], [10.5, 269.0], [10.6, 269.0], [10.7, 269.0], [10.8, 269.0], [10.9, 269.0], [11.0, 269.0], [11.1, 269.0], [11.2, 269.0], [11.3, 269.0], [11.4, 269.0], [11.5, 269.0], [11.6, 269.0], [11.7, 269.0], [11.8, 269.0], [11.9, 269.0], [12.0, 270.0], [12.1, 270.0], [12.2, 270.0], [12.3, 270.0], [12.4, 270.0], [12.5, 270.0], [12.6, 270.0], [12.7, 270.0], [12.8, 270.0], [12.9, 270.0], [13.0, 270.0], [13.1, 270.0], [13.2, 270.0], [13.3, 270.0], [13.4, 270.0], [13.5, 270.0], [13.6, 270.0], [13.7, 270.0], [13.8, 270.0], [13.9, 270.0], [14.0, 270.0], [14.1, 270.0], [14.2, 270.0], [14.3, 270.0], [14.4, 270.0], [14.5, 270.0], [14.6, 270.0], [14.7, 270.0], [14.8, 270.0], [14.9, 270.0], [15.0, 270.0], [15.1, 270.0], [15.2, 270.0], [15.3, 270.0], [15.4, 270.0], [15.5, 270.0], [15.6, 270.0], [15.7, 270.0], [15.8, 270.0], [15.9, 270.0], [16.0, 271.0], [16.1, 271.0], [16.2, 271.0], [16.3, 271.0], [16.4, 271.0], [16.5, 271.0], [16.6, 271.0], [16.7, 271.0], [16.8, 271.0], [16.9, 271.0], [17.0, 271.0], [17.1, 271.0], [17.2, 271.0], [17.3, 271.0], [17.4, 271.0], [17.5, 271.0], [17.6, 271.0], [17.7, 271.0], [17.8, 271.0], [17.9, 271.0], [18.0, 271.0], [18.1, 271.0], [18.2, 271.0], [18.3, 271.0], [18.4, 271.0], [18.5, 271.0], [18.6, 271.0], [18.7, 271.0], [18.8, 271.0], [18.9, 271.0], [19.0, 271.0], [19.1, 271.0], [19.2, 271.0], [19.3, 271.0], [19.4, 271.0], [19.5, 271.0], [19.6, 271.0], [19.7, 272.0], [19.8, 272.0], [19.9, 272.0], [20.0, 272.0], [20.1, 272.0], [20.2, 272.0], [20.3, 272.0], [20.4, 272.0], [20.5, 272.0], [20.6, 272.0], [20.7, 272.0], [20.8, 272.0], [20.9, 272.0], [21.0, 272.0], [21.1, 272.0], [21.2, 272.0], [21.3, 272.0], [21.4, 273.0], [21.5, 273.0], [21.6, 273.0], [21.7, 273.0], [21.8, 273.0], [21.9, 273.0], [22.0, 273.0], [22.1, 273.0], [22.2, 273.0], [22.3, 273.0], [22.4, 273.0], [22.5, 273.0], [22.6, 273.0], [22.7, 273.0], [22.8, 273.0], [22.9, 273.0], [23.0, 273.0], [23.1, 274.0], [23.2, 274.0], [23.3, 274.0], [23.4, 274.0], [23.5, 274.0], [23.6, 274.0], [23.7, 274.0], [23.8, 274.0], [23.9, 274.0], [24.0, 274.0], [24.1, 274.0], [24.2, 274.0], [24.3, 274.0], [24.4, 274.0], [24.5, 274.0], [24.6, 274.0], [24.7, 274.0], [24.8, 274.0], [24.9, 274.0], [25.0, 274.0], [25.1, 274.0], [25.2, 274.0], [25.3, 274.0], [25.4, 275.0], [25.5, 275.0], [25.6, 275.0], [25.7, 275.0], [25.8, 275.0], [25.9, 275.0], [26.0, 275.0], [26.1, 275.0], [26.2, 275.0], [26.3, 275.0], [26.4, 275.0], [26.5, 275.0], [26.6, 275.0], [26.7, 276.0], [26.8, 276.0], [26.9, 276.0], [27.0, 276.0], [27.1, 276.0], [27.2, 276.0], [27.3, 276.0], [27.4, 276.0], [27.5, 276.0], [27.6, 276.0], [27.7, 277.0], [27.8, 277.0], [27.9, 277.0], [28.0, 277.0], [28.1, 277.0], [28.2, 277.0], [28.3, 277.0], [28.4, 277.0], [28.5, 277.0], [28.6, 277.0], [28.7, 277.0], [28.8, 277.0], [28.9, 277.0], [29.0, 277.0], [29.1, 277.0], [29.2, 277.0], [29.3, 277.0], [29.4, 278.0], [29.5, 278.0], [29.6, 278.0], [29.7, 278.0], [29.8, 278.0], [29.9, 278.0], [30.0, 278.0], [30.1, 279.0], [30.2, 279.0], [30.3, 279.0], [30.4, 279.0], [30.5, 279.0], [30.6, 279.0], [30.7, 279.0], [30.8, 279.0], [30.9, 279.0], [31.0, 279.0], [31.1, 279.0], [31.2, 279.0], [31.3, 279.0], [31.4, 281.0], [31.5, 281.0], [31.6, 281.0], [31.7, 281.0], [31.8, 281.0], [31.9, 281.0], [32.0, 282.0], [32.1, 282.0], [32.2, 282.0], [32.3, 282.0], [32.4, 282.0], [32.5, 282.0], [32.6, 282.0], [32.7, 283.0], [32.8, 283.0], [32.9, 283.0], [33.0, 284.0], [33.1, 284.0], [33.2, 284.0], [33.3, 284.0], [33.4, 284.0], [33.5, 284.0], [33.6, 284.0], [33.7, 284.0], [33.8, 284.0], [33.9, 284.0], [34.0, 284.0], [34.1, 284.0], [34.2, 284.0], [34.3, 284.0], [34.4, 284.0], [34.5, 284.0], [34.6, 284.0], [34.7, 285.0], [34.8, 285.0], [34.9, 285.0], [35.0, 286.0], [35.1, 286.0], [35.2, 286.0], [35.3, 286.0], [35.4, 287.0], [35.5, 287.0], [35.6, 287.0], [35.7, 287.0], [35.8, 287.0], [35.9, 287.0], [36.0, 287.0], [36.1, 287.0], [36.2, 287.0], [36.3, 287.0], [36.4, 287.0], [36.5, 287.0], [36.6, 287.0], [36.7, 287.0], [36.8, 287.0], [36.9, 287.0], [37.0, 288.0], [37.1, 288.0], [37.2, 288.0], [37.3, 288.0], [37.4, 288.0], [37.5, 288.0], [37.6, 288.0], [37.7, 288.0], [37.8, 288.0], [37.9, 288.0], [38.0, 290.0], [38.1, 290.0], [38.2, 290.0], [38.3, 290.0], [38.4, 290.0], [38.5, 290.0], [38.6, 290.0], [38.7, 291.0], [38.8, 291.0], [38.9, 291.0], [39.0, 292.0], [39.1, 292.0], [39.2, 292.0], [39.3, 292.0], [39.4, 293.0], [39.5, 293.0], [39.6, 293.0], [39.7, 293.0], [39.8, 293.0], [39.9, 293.0], [40.0, 294.0], [40.1, 294.0], [40.2, 294.0], [40.3, 294.0], [40.4, 296.0], [40.5, 296.0], [40.6, 296.0], [40.7, 296.0], [40.8, 296.0], [40.9, 296.0], [41.0, 297.0], [41.1, 297.0], [41.2, 297.0], [41.3, 297.0], [41.4, 298.0], [41.5, 298.0], [41.6, 298.0], [41.7, 298.0], [41.8, 298.0], [41.9, 298.0], [42.0, 299.0], [42.1, 299.0], [42.2, 299.0], [42.3, 299.0], [42.4, 299.0], [42.5, 299.0], [42.6, 299.0], [42.7, 299.0], [42.8, 299.0], [42.9, 299.0], [43.0, 300.0], [43.1, 300.0], [43.2, 300.0], [43.3, 300.0], [43.4, 300.0], [43.5, 300.0], [43.6, 300.0], [43.7, 301.0], [43.8, 301.0], [43.9, 301.0], [44.0, 301.0], [44.1, 301.0], [44.2, 301.0], [44.3, 301.0], [44.4, 301.0], [44.5, 301.0], [44.6, 301.0], [44.7, 301.0], [44.8, 301.0], [44.9, 301.0], [45.0, 304.0], [45.1, 304.0], [45.2, 304.0], [45.3, 304.0], [45.4, 305.0], [45.5, 305.0], [45.6, 305.0], [45.7, 307.0], [45.8, 307.0], [45.9, 307.0], [46.0, 307.0], [46.1, 307.0], [46.2, 307.0], [46.3, 307.0], [46.4, 309.0], [46.5, 309.0], [46.6, 309.0], [46.7, 310.0], [46.8, 310.0], [46.9, 310.0], [47.0, 310.0], [47.1, 311.0], [47.2, 311.0], [47.3, 311.0], [47.4, 315.0], [47.5, 315.0], [47.6, 315.0], [47.7, 316.0], [47.8, 316.0], [47.9, 316.0], [48.0, 316.0], [48.1, 321.0], [48.2, 321.0], [48.3, 321.0], [48.4, 325.0], [48.5, 325.0], [48.6, 325.0], [48.7, 325.0], [48.8, 325.0], [48.9, 325.0], [49.0, 325.0], [49.1, 325.0], [49.2, 325.0], [49.3, 325.0], [49.4, 326.0], [49.5, 326.0], [49.6, 326.0], [49.7, 326.0], [49.8, 326.0], [49.9, 326.0], [50.0, 326.0], [50.1, 327.0], [50.2, 327.0], [50.3, 327.0], [50.4, 327.0], [50.5, 327.0], [50.6, 327.0], [50.7, 329.0], [50.8, 329.0], [50.9, 329.0], [51.0, 329.0], [51.1, 331.0], [51.2, 331.0], [51.3, 331.0], [51.4, 332.0], [51.5, 332.0], [51.6, 332.0], [51.7, 334.0], [51.8, 334.0], [51.9, 334.0], [52.0, 334.0], [52.1, 334.0], [52.2, 334.0], [52.3, 334.0], [52.4, 338.0], [52.5, 338.0], [52.6, 338.0], [52.7, 341.0], [52.8, 341.0], [52.9, 341.0], [53.0, 341.0], [53.1, 342.0], [53.2, 342.0], [53.3, 342.0], [53.4, 345.0], [53.5, 345.0], [53.6, 345.0], [53.7, 352.0], [53.8, 352.0], [53.9, 352.0], [54.0, 352.0], [54.1, 356.0], [54.2, 356.0], [54.3, 356.0], [54.4, 356.0], [54.5, 356.0], [54.6, 356.0], [54.7, 356.0], [54.8, 356.0], [54.9, 356.0], [55.0, 356.0], [55.1, 358.0], [55.2, 358.0], [55.3, 358.0], [55.4, 365.0], [55.5, 365.0], [55.6, 365.0], [55.7, 366.0], [55.8, 366.0], [55.9, 366.0], [56.0, 366.0], [56.1, 366.0], [56.2, 366.0], [56.3, 366.0], [56.4, 366.0], [56.5, 366.0], [56.6, 366.0], [56.7, 369.0], [56.8, 369.0], [56.9, 369.0], [57.0, 369.0], [57.1, 370.0], [57.2, 370.0], [57.3, 370.0], [57.4, 371.0], [57.5, 371.0], [57.6, 371.0], [57.7, 371.0], [57.8, 371.0], [57.9, 371.0], [58.0, 371.0], [58.1, 373.0], [58.2, 373.0], [58.3, 373.0], [58.4, 374.0], [58.5, 374.0], [58.6, 374.0], [58.7, 377.0], [58.8, 377.0], [58.9, 377.0], [59.0, 377.0], [59.1, 384.0], [59.2, 384.0], [59.3, 384.0], [59.4, 386.0], [59.5, 386.0], [59.6, 386.0], [59.7, 387.0], [59.8, 387.0], [59.9, 387.0], [60.0, 387.0], [60.1, 390.0], [60.2, 390.0], [60.3, 390.0], [60.4, 390.0], [60.5, 390.0], [60.6, 390.0], [60.7, 397.0], [60.8, 397.0], [60.9, 397.0], [61.0, 397.0], [61.1, 403.0], [61.2, 403.0], [61.3, 403.0], [61.4, 406.0], [61.5, 406.0], [61.6, 406.0], [61.7, 410.0], [61.8, 410.0], [61.9, 410.0], [62.0, 410.0], [62.1, 411.0], [62.2, 411.0], [62.3, 411.0], [62.4, 416.0], [62.5, 416.0], [62.6, 416.0], [62.7, 417.0], [62.8, 417.0], [62.9, 417.0], [63.0, 417.0], [63.1, 425.0], [63.2, 425.0], [63.3, 425.0], [63.4, 428.0], [63.5, 428.0], [63.6, 428.0], [63.7, 428.0], [63.8, 428.0], [63.9, 428.0], [64.0, 428.0], [64.1, 430.0], [64.2, 430.0], [64.3, 430.0], [64.4, 432.0], [64.5, 432.0], [64.6, 432.0], [64.7, 439.0], [64.8, 439.0], [64.9, 439.0], [65.0, 439.0], [65.1, 443.0], [65.2, 443.0], [65.3, 443.0], [65.4, 448.0], [65.5, 448.0], [65.6, 448.0], [65.7, 457.0], [65.8, 457.0], [65.9, 457.0], [66.0, 457.0], [66.1, 457.0], [66.2, 457.0], [66.3, 457.0], [66.4, 464.0], [66.5, 464.0], [66.6, 464.0], [66.7, 474.0], [66.8, 474.0], [66.9, 474.0], [67.0, 474.0], [67.1, 491.0], [67.2, 491.0], [67.3, 491.0], [67.4, 522.0], [67.5, 522.0], [67.6, 522.0], [67.7, 534.0], [67.8, 534.0], [67.9, 534.0], [68.0, 534.0], [68.1, 544.0], [68.2, 544.0], [68.3, 544.0], [68.4, 554.0], [68.5, 554.0], [68.6, 554.0], [68.7, 563.0], [68.8, 563.0], [68.9, 563.0], [69.0, 563.0], [69.1, 568.0], [69.2, 568.0], [69.3, 568.0], [69.4, 572.0], [69.5, 572.0], [69.6, 572.0], [69.7, 573.0], [69.8, 573.0], [69.9, 573.0], [70.0, 573.0], [70.1, 573.0], [70.2, 573.0], [70.3, 573.0], [70.4, 586.0], [70.5, 586.0], [70.6, 586.0], [70.7, 1033.0], [70.8, 1033.0], [70.9, 1033.0], [71.0, 1035.0], [71.1, 1035.0], [71.2, 1035.0], [71.3, 1035.0], [71.4, 1041.0], [71.5, 1041.0], [71.6, 1041.0], [71.7, 1043.0], [71.8, 1043.0], [71.9, 1043.0], [72.0, 1044.0], [72.1, 1044.0], [72.2, 1044.0], [72.3, 1044.0], [72.4, 1044.0], [72.5, 1044.0], [72.6, 1044.0], [72.7, 1051.0], [72.8, 1051.0], [72.9, 1051.0], [73.0, 1052.0], [73.1, 1052.0], [73.2, 1052.0], [73.3, 1052.0], [73.4, 1162.0], [73.5, 1162.0], [73.6, 1162.0], [73.7, 1199.0], [73.8, 1199.0], [73.9, 1199.0], [74.0, 1247.0], [74.1, 1247.0], [74.2, 1247.0], [74.3, 1247.0], [74.4, 1252.0], [74.5, 1252.0], [74.6, 1252.0], [74.7, 1277.0], [74.8, 1277.0], [74.9, 1277.0], [75.0, 1320.0], [75.1, 1320.0], [75.2, 1320.0], [75.3, 1320.0], [75.4, 1324.0], [75.5, 1324.0], [75.6, 1324.0], [75.7, 1324.0], [75.8, 1324.0], [75.9, 1324.0], [76.0, 1346.0], [76.1, 1346.0], [76.2, 1346.0], [76.3, 1346.0], [76.4, 1355.0], [76.5, 1355.0], [76.6, 1355.0], [76.7, 1391.0], [76.8, 1391.0], [76.9, 1391.0], [77.0, 1394.0], [77.1, 1394.0], [77.2, 1394.0], [77.3, 1394.0], [77.4, 1406.0], [77.5, 1406.0], [77.6, 1406.0], [77.7, 1416.0], [77.8, 1416.0], [77.9, 1416.0], [78.0, 1426.0], [78.1, 1426.0], [78.2, 1426.0], [78.3, 1426.0], [78.4, 1502.0], [78.5, 1502.0], [78.6, 1502.0], [78.7, 1526.0], [78.8, 1526.0], [78.9, 1526.0], [79.0, 1532.0], [79.1, 1532.0], [79.2, 1532.0], [79.3, 1532.0], [79.4, 1534.0], [79.5, 1534.0], [79.6, 1534.0], [79.7, 1546.0], [79.8, 1546.0], [79.9, 1546.0], [80.0, 1608.0], [80.1, 1608.0], [80.2, 1608.0], [80.3, 1608.0], [80.4, 1615.0], [80.5, 1615.0], [80.6, 1615.0], [80.7, 1623.0], [80.8, 1623.0], [80.9, 1623.0], [81.0, 1626.0], [81.1, 1626.0], [81.2, 1626.0], [81.3, 1626.0], [81.4, 1628.0], [81.5, 1628.0], [81.6, 1628.0], [81.7, 1650.0], [81.8, 1650.0], [81.9, 1650.0], [82.0, 1658.0], [82.1, 1658.0], [82.2, 1658.0], [82.3, 1658.0], [82.4, 1676.0], [82.5, 1676.0], [82.6, 1676.0], [82.7, 1679.0], [82.8, 1679.0], [82.9, 1679.0], [83.0, 1689.0], [83.1, 1689.0], [83.2, 1689.0], [83.3, 1689.0], [83.4, 1704.0], [83.5, 1704.0], [83.6, 1704.0], [83.7, 1722.0], [83.8, 1722.0], [83.9, 1722.0], [84.0, 1726.0], [84.1, 1726.0], [84.2, 1726.0], [84.3, 1726.0], [84.4, 1729.0], [84.5, 1729.0], [84.6, 1729.0], [84.7, 1729.0], [84.8, 1729.0], [84.9, 1729.0], [85.0, 1731.0], [85.1, 1731.0], [85.2, 1731.0], [85.3, 1731.0], [85.4, 1733.0], [85.5, 1733.0], [85.6, 1733.0], [85.7, 1734.0], [85.8, 1734.0], [85.9, 1734.0], [86.0, 1748.0], [86.1, 1748.0], [86.2, 1748.0], [86.3, 1748.0], [86.4, 1750.0], [86.5, 1750.0], [86.6, 1750.0], [86.7, 1752.0], [86.8, 1752.0], [86.9, 1752.0], [87.0, 1758.0], [87.1, 1758.0], [87.2, 1758.0], [87.3, 1758.0], [87.4, 1758.0], [87.5, 1758.0], [87.6, 1758.0], [87.7, 1763.0], [87.8, 1763.0], [87.9, 1763.0], [88.0, 1766.0], [88.1, 1766.0], [88.2, 1766.0], [88.3, 1766.0], [88.4, 1769.0], [88.5, 1769.0], [88.6, 1769.0], [88.7, 1780.0], [88.8, 1780.0], [88.9, 1780.0], [89.0, 1781.0], [89.1, 1781.0], [89.2, 1781.0], [89.3, 1781.0], [89.4, 1788.0], [89.5, 1788.0], [89.6, 1788.0], [89.7, 1827.0], [89.8, 1827.0], [89.9, 1827.0], [90.0, 1834.0], [90.1, 1834.0], [90.2, 1834.0], [90.3, 1834.0], [90.4, 1838.0], [90.5, 1838.0], [90.6, 1838.0], [90.7, 1842.0], [90.8, 1842.0], [90.9, 1842.0], [91.0, 1847.0], [91.1, 1847.0], [91.2, 1847.0], [91.3, 1847.0], [91.4, 1855.0], [91.5, 1855.0], [91.6, 1855.0], [91.7, 1856.0], [91.8, 1856.0], [91.9, 1856.0], [92.0, 1858.0], [92.1, 1858.0], [92.2, 1858.0], [92.3, 1858.0], [92.4, 1871.0], [92.5, 1871.0], [92.6, 1871.0], [92.7, 1888.0], [92.8, 1888.0], [92.9, 1888.0], [93.0, 1905.0], [93.1, 1905.0], [93.2, 1905.0], [93.3, 1905.0], [93.4, 1918.0], [93.5, 1918.0], [93.6, 1918.0], [93.7, 1933.0], [93.8, 1933.0], [93.9, 1933.0], [94.0, 1935.0], [94.1, 1935.0], [94.2, 1935.0], [94.3, 1935.0], [94.4, 1939.0], [94.5, 1939.0], [94.6, 1939.0], [94.7, 1958.0], [94.8, 1958.0], [94.9, 1958.0], [95.0, 2048.0], [95.1, 2048.0], [95.2, 2048.0], [95.3, 2048.0], [95.4, 2255.0], [95.5, 2255.0], [95.6, 2255.0], [95.7, 4280.0], [95.8, 4280.0], [95.9, 4280.0], [96.0, 4291.0], [96.1, 4291.0], [96.2, 4291.0], [96.3, 4291.0], [96.4, 4299.0], [96.5, 4299.0], [96.6, 4299.0], [96.7, 4309.0], [96.8, 4309.0], [96.9, 4309.0], [97.0, 4334.0], [97.1, 4334.0], [97.2, 4334.0], [97.3, 4334.0], [97.4, 4537.0], [97.5, 4537.0], [97.6, 4537.0], [97.7, 4550.0], [97.8, 4550.0], [97.9, 4550.0], [98.0, 4566.0], [98.1, 4566.0], [98.2, 4566.0], [98.3, 4566.0], [98.4, 4577.0], [98.5, 4577.0], [98.6, 4577.0], [98.7, 4590.0], [98.8, 4590.0], [98.9, 4590.0], [99.0, 4597.0], [99.1, 4597.0], [99.2, 4597.0], [99.3, 4597.0], [99.4, 4600.0], [99.5, 4600.0], [99.6, 4600.0], [99.7, 4603.0], [99.8, 4603.0], [99.9, 4603.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[0.0, 264.0], [0.1, 264.0], [0.2, 264.0], [0.3, 264.0], [0.4, 265.0], [0.5, 265.0], [0.6, 265.0], [0.7, 265.0], [0.8, 265.0], [0.9, 265.0], [1.0, 266.0], [1.1, 266.0], [1.2, 266.0], [1.3, 266.0], [1.4, 266.0], [1.5, 266.0], [1.6, 266.0], [1.7, 267.0], [1.8, 267.0], [1.9, 267.0], [2.0, 267.0], [2.1, 267.0], [2.2, 267.0], [2.3, 267.0], [2.4, 267.0], [2.5, 267.0], [2.6, 267.0], [2.7, 267.0], [2.8, 267.0], [2.9, 267.0], [3.0, 267.0], [3.1, 267.0], [3.2, 267.0], [3.3, 267.0], [3.4, 267.0], [3.5, 267.0], [3.6, 267.0], [3.7, 267.0], [3.8, 267.0], [3.9, 267.0], [4.0, 267.0], [4.1, 267.0], [4.2, 267.0], [4.3, 267.0], [4.4, 267.0], [4.5, 267.0], [4.6, 267.0], [4.7, 268.0], [4.8, 268.0], [4.9, 268.0], [5.0, 268.0], [5.1, 268.0], [5.2, 268.0], [5.3, 268.0], [5.4, 268.0], [5.5, 268.0], [5.6, 268.0], [5.7, 268.0], [5.8, 268.0], [5.9, 268.0], [6.0, 268.0], [6.1, 268.0], [6.2, 268.0], [6.3, 268.0], [6.4, 268.0], [6.5, 268.0], [6.6, 268.0], [6.7, 268.0], [6.8, 268.0], [6.9, 268.0], [7.0, 269.0], [7.1, 269.0], [7.2, 269.0], [7.3, 269.0], [7.4, 269.0], [7.5, 269.0], [7.6, 269.0], [7.7, 269.0], [7.8, 269.0], [7.9, 269.0], [8.0, 269.0], [8.1, 269.0], [8.2, 269.0], [8.3, 269.0], [8.4, 269.0], [8.5, 269.0], [8.6, 269.0], [8.7, 269.0], [8.8, 269.0], [8.9, 269.0], [9.0, 269.0], [9.1, 269.0], [9.2, 269.0], [9.3, 269.0], [9.4, 269.0], [9.5, 269.0], [9.6, 269.0], [9.7, 269.0], [9.8, 269.0], [9.9, 269.0], [10.0, 270.0], [10.1, 270.0], [10.2, 270.0], [10.3, 270.0], [10.4, 270.0], [10.5, 270.0], [10.6, 270.0], [10.7, 270.0], [10.8, 270.0], [10.9, 270.0], [11.0, 270.0], [11.1, 270.0], [11.2, 270.0], [11.3, 270.0], [11.4, 270.0], [11.5, 270.0], [11.6, 270.0], [11.7, 270.0], [11.8, 270.0], [11.9, 270.0], [12.0, 270.0], [12.1, 270.0], [12.2, 270.0], [12.3, 270.0], [12.4, 270.0], [12.5, 270.0], [12.6, 270.0], [12.7, 270.0], [12.8, 270.0], [12.9, 270.0], [13.0, 271.0], [13.1, 271.0], [13.2, 271.0], [13.3, 271.0], [13.4, 271.0], [13.5, 271.0], [13.6, 271.0], [13.7, 271.0], [13.8, 271.0], [13.9, 271.0], [14.0, 271.0], [14.1, 271.0], [14.2, 271.0], [14.3, 271.0], [14.4, 272.0], [14.5, 272.0], [14.6, 272.0], [14.7, 272.0], [14.8, 272.0], [14.9, 272.0], [15.0, 273.0], [15.1, 273.0], [15.2, 273.0], [15.3, 273.0], [15.4, 273.0], [15.5, 273.0], [15.6, 273.0], [15.7, 273.0], [15.8, 273.0], [15.9, 273.0], [16.0, 273.0], [16.1, 273.0], [16.2, 273.0], [16.3, 273.0], [16.4, 273.0], [16.5, 273.0], [16.6, 273.0], [16.7, 273.0], [16.8, 273.0], [16.9, 273.0], [17.0, 273.0], [17.1, 273.0], [17.2, 273.0], [17.3, 273.0], [17.4, 274.0], [17.5, 274.0], [17.6, 274.0], [17.7, 274.0], [17.8, 274.0], [17.9, 274.0], [18.0, 274.0], [18.1, 274.0], [18.2, 274.0], [18.3, 274.0], [18.4, 274.0], [18.5, 274.0], [18.6, 274.0], [18.7, 275.0], [18.8, 275.0], [18.9, 275.0], [19.0, 276.0], [19.1, 276.0], [19.2, 276.0], [19.3, 276.0], [19.4, 276.0], [19.5, 276.0], [19.6, 276.0], [19.7, 277.0], [19.8, 277.0], [19.9, 277.0], [20.0, 277.0], [20.1, 277.0], [20.2, 277.0], [20.3, 277.0], [20.4, 278.0], [20.5, 278.0], [20.6, 278.0], [20.7, 278.0], [20.8, 278.0], [20.9, 278.0], [21.0, 278.0], [21.1, 278.0], [21.2, 278.0], [21.3, 278.0], [21.4, 278.0], [21.5, 278.0], [21.6, 278.0], [21.7, 278.0], [21.8, 278.0], [21.9, 278.0], [22.0, 278.0], [22.1, 278.0], [22.2, 278.0], [22.3, 278.0], [22.4, 278.0], [22.5, 278.0], [22.6, 278.0], [22.7, 278.0], [22.8, 278.0], [22.9, 278.0], [23.0, 278.0], [23.1, 278.0], [23.2, 278.0], [23.3, 278.0], [23.4, 279.0], [23.5, 279.0], [23.6, 279.0], [23.7, 279.0], [23.8, 279.0], [23.9, 279.0], [24.0, 279.0], [24.1, 279.0], [24.2, 279.0], [24.3, 279.0], [24.4, 280.0], [24.5, 280.0], [24.6, 280.0], [24.7, 280.0], [24.8, 280.0], [24.9, 280.0], [25.0, 280.0], [25.1, 280.0], [25.2, 280.0], [25.3, 280.0], [25.4, 281.0], [25.5, 281.0], [25.6, 281.0], [25.7, 281.0], [25.8, 281.0], [25.9, 281.0], [26.0, 282.0], [26.1, 282.0], [26.2, 282.0], [26.3, 282.0], [26.4, 282.0], [26.5, 282.0], [26.6, 282.0], [26.7, 282.0], [26.8, 282.0], [26.9, 282.0], [27.0, 282.0], [27.1, 282.0], [27.2, 282.0], [27.3, 282.0], [27.4, 283.0], [27.5, 283.0], [27.6, 283.0], [27.7, 283.0], [27.8, 283.0], [27.9, 283.0], [28.0, 283.0], [28.1, 283.0], [28.2, 283.0], [28.3, 283.0], [28.4, 283.0], [28.5, 283.0], [28.6, 283.0], [28.7, 284.0], [28.8, 284.0], [28.9, 284.0], [29.0, 284.0], [29.1, 284.0], [29.2, 284.0], [29.3, 284.0], [29.4, 284.0], [29.5, 284.0], [29.6, 284.0], [29.7, 284.0], [29.8, 284.0], [29.9, 284.0], [30.0, 285.0], [30.1, 285.0], [30.2, 285.0], [30.3, 285.0], [30.4, 285.0], [30.5, 285.0], [30.6, 285.0], [30.7, 285.0], [30.8, 285.0], [30.9, 285.0], [31.0, 286.0], [31.1, 286.0], [31.2, 286.0], [31.3, 286.0], [31.4, 286.0], [31.5, 286.0], [31.6, 286.0], [31.7, 286.0], [31.8, 286.0], [31.9, 286.0], [32.0, 286.0], [32.1, 286.0], [32.2, 286.0], [32.3, 286.0], [32.4, 286.0], [32.5, 286.0], [32.6, 286.0], [32.7, 287.0], [32.8, 287.0], [32.9, 287.0], [33.0, 287.0], [33.1, 287.0], [33.2, 287.0], [33.3, 287.0], [33.4, 287.0], [33.5, 287.0], [33.6, 287.0], [33.7, 287.0], [33.8, 287.0], [33.9, 287.0], [34.0, 288.0], [34.1, 288.0], [34.2, 288.0], [34.3, 288.0], [34.4, 289.0], [34.5, 289.0], [34.6, 289.0], [34.7, 289.0], [34.8, 289.0], [34.9, 289.0], [35.0, 289.0], [35.1, 289.0], [35.2, 289.0], [35.3, 289.0], [35.4, 290.0], [35.5, 290.0], [35.6, 290.0], [35.7, 291.0], [35.8, 291.0], [35.9, 291.0], [36.0, 291.0], [36.1, 292.0], [36.2, 292.0], [36.3, 292.0], [36.4, 293.0], [36.5, 293.0], [36.6, 293.0], [36.7, 293.0], [36.8, 293.0], [36.9, 293.0], [37.0, 293.0], [37.1, 293.0], [37.2, 293.0], [37.3, 293.0], [37.4, 294.0], [37.5, 294.0], [37.6, 294.0], [37.7, 294.0], [37.8, 294.0], [37.9, 294.0], [38.0, 294.0], [38.1, 294.0], [38.2, 294.0], [38.3, 294.0], [38.4, 294.0], [38.5, 294.0], [38.6, 294.0], [38.7, 295.0], [38.8, 295.0], [38.9, 295.0], [39.0, 295.0], [39.1, 295.0], [39.2, 295.0], [39.3, 295.0], [39.4, 296.0], [39.5, 296.0], [39.6, 296.0], [39.7, 296.0], [39.8, 296.0], [39.9, 296.0], [40.0, 296.0], [40.1, 296.0], [40.2, 296.0], [40.3, 296.0], [40.4, 297.0], [40.5, 297.0], [40.6, 297.0], [40.7, 298.0], [40.8, 298.0], [40.9, 298.0], [41.0, 298.0], [41.1, 298.0], [41.2, 298.0], [41.3, 298.0], [41.4, 298.0], [41.5, 298.0], [41.6, 298.0], [41.7, 298.0], [41.8, 298.0], [41.9, 298.0], [42.0, 298.0], [42.1, 299.0], [42.2, 299.0], [42.3, 299.0], [42.4, 299.0], [42.5, 299.0], [42.6, 299.0], [42.7, 299.0], [42.8, 299.0], [42.9, 299.0], [43.0, 299.0], [43.1, 299.0], [43.2, 299.0], [43.3, 299.0], [43.4, 301.0], [43.5, 301.0], [43.6, 301.0], [43.7, 301.0], [43.8, 301.0], [43.9, 301.0], [44.0, 301.0], [44.1, 301.0], [44.2, 301.0], [44.3, 301.0], [44.4, 302.0], [44.5, 302.0], [44.6, 302.0], [44.7, 302.0], [44.8, 302.0], [44.9, 302.0], [45.0, 302.0], [45.1, 302.0], [45.2, 302.0], [45.3, 302.0], [45.4, 303.0], [45.5, 303.0], [45.6, 303.0], [45.7, 304.0], [45.8, 304.0], [45.9, 304.0], [46.0, 304.0], [46.1, 304.0], [46.2, 304.0], [46.3, 304.0], [46.4, 306.0], [46.5, 306.0], [46.6, 306.0], [46.7, 306.0], [46.8, 306.0], [46.9, 306.0], [47.0, 306.0], [47.1, 306.0], [47.2, 306.0], [47.3, 306.0], [47.4, 308.0], [47.5, 308.0], [47.6, 308.0], [47.7, 309.0], [47.8, 309.0], [47.9, 309.0], [48.0, 309.0], [48.1, 310.0], [48.2, 310.0], [48.3, 310.0], [48.4, 313.0], [48.5, 313.0], [48.6, 313.0], [48.7, 313.0], [48.8, 313.0], [48.9, 313.0], [49.0, 313.0], [49.1, 321.0], [49.2, 321.0], [49.3, 321.0], [49.4, 322.0], [49.5, 322.0], [49.6, 322.0], [49.7, 323.0], [49.8, 323.0], [49.9, 323.0], [50.0, 323.0], [50.1, 326.0], [50.2, 326.0], [50.3, 326.0], [50.4, 332.0], [50.5, 332.0], [50.6, 332.0], [50.7, 339.0], [50.8, 339.0], [50.9, 339.0], [51.0, 339.0], [51.1, 364.0], [51.2, 364.0], [51.3, 364.0], [51.4, 1031.0], [51.5, 1031.0], [51.6, 1031.0], [51.7, 1040.0], [51.8, 1040.0], [51.9, 1040.0], [52.0, 1040.0], [52.1, 1045.0], [52.2, 1045.0], [52.3, 1045.0], [52.4, 1053.0], [52.5, 1053.0], [52.6, 1053.0], [52.7, 1055.0], [52.8, 1055.0], [52.9, 1055.0], [53.0, 1055.0], [53.1, 1352.0], [53.2, 1352.0], [53.3, 1352.0], [53.4, 1387.0], [53.5, 1387.0], [53.6, 1387.0], [53.7, 1402.0], [53.8, 1402.0], [53.9, 1402.0], [54.0, 1402.0], [54.1, 1428.0], [54.2, 1428.0], [54.3, 1428.0], [54.4, 1502.0], [54.5, 1502.0], [54.6, 1502.0], [54.7, 1517.0], [54.8, 1517.0], [54.9, 1517.0], [55.0, 1517.0], [55.1, 1523.0], [55.2, 1523.0], [55.3, 1523.0], [55.4, 1606.0], [55.5, 1606.0], [55.6, 1606.0], [55.7, 1632.0], [55.8, 1632.0], [55.9, 1632.0], [56.0, 1632.0], [56.1, 1632.0], [56.2, 1632.0], [56.3, 1632.0], [56.4, 1635.0], [56.5, 1635.0], [56.6, 1635.0], [56.7, 1643.0], [56.8, 1643.0], [56.9, 1643.0], [57.0, 1643.0], [57.1, 1651.0], [57.2, 1651.0], [57.3, 1651.0], [57.4, 1653.0], [57.5, 1653.0], [57.6, 1653.0], [57.7, 1653.0], [57.8, 1653.0], [57.9, 1653.0], [58.0, 1653.0], [58.1, 1655.0], [58.2, 1655.0], [58.3, 1655.0], [58.4, 1661.0], [58.5, 1661.0], [58.6, 1661.0], [58.7, 1663.0], [58.8, 1663.0], [58.9, 1663.0], [59.0, 1663.0], [59.1, 1671.0], [59.2, 1671.0], [59.3, 1671.0], [59.4, 1674.0], [59.5, 1674.0], [59.6, 1674.0], [59.7, 1677.0], [59.8, 1677.0], [59.9, 1677.0], [60.0, 1677.0], [60.1, 1681.0], [60.2, 1681.0], [60.3, 1681.0], [60.4, 1692.0], [60.5, 1692.0], [60.6, 1692.0], [60.7, 1703.0], [60.8, 1703.0], [60.9, 1703.0], [61.0, 1703.0], [61.1, 1713.0], [61.2, 1713.0], [61.3, 1713.0], [61.4, 1715.0], [61.5, 1715.0], [61.6, 1715.0], [61.7, 1717.0], [61.8, 1717.0], [61.9, 1717.0], [62.0, 1717.0], [62.1, 1723.0], [62.2, 1723.0], [62.3, 1723.0], [62.4, 1725.0], [62.5, 1725.0], [62.6, 1725.0], [62.7, 1725.0], [62.8, 1725.0], [62.9, 1725.0], [63.0, 1725.0], [63.1, 1725.0], [63.2, 1725.0], [63.3, 1725.0], [63.4, 1730.0], [63.5, 1730.0], [63.6, 1730.0], [63.7, 1731.0], [63.8, 1731.0], [63.9, 1731.0], [64.0, 1731.0], [64.1, 1731.0], [64.2, 1731.0], [64.3, 1731.0], [64.4, 1740.0], [64.5, 1740.0], [64.6, 1740.0], [64.7, 1742.0], [64.8, 1742.0], [64.9, 1742.0], [65.0, 1742.0], [65.1, 1745.0], [65.2, 1745.0], [65.3, 1745.0], [65.4, 1746.0], [65.5, 1746.0], [65.6, 1746.0], [65.7, 1747.0], [65.8, 1747.0], [65.9, 1747.0], [66.0, 1747.0], [66.1, 1748.0], [66.2, 1748.0], [66.3, 1748.0], [66.4, 1748.0], [66.5, 1748.0], [66.6, 1748.0], [66.7, 1748.0], [66.8, 1748.0], [66.9, 1748.0], [67.0, 1748.0], [67.1, 1751.0], [67.2, 1751.0], [67.3, 1751.0], [67.4, 1754.0], [67.5, 1754.0], [67.6, 1754.0], [67.7, 1755.0], [67.8, 1755.0], [67.9, 1755.0], [68.0, 1755.0], [68.1, 1755.0], [68.2, 1755.0], [68.3, 1755.0], [68.4, 1757.0], [68.5, 1757.0], [68.6, 1757.0], [68.7, 1758.0], [68.8, 1758.0], [68.9, 1758.0], [69.0, 1758.0], [69.1, 1761.0], [69.2, 1761.0], [69.3, 1761.0], [69.4, 1763.0], [69.5, 1763.0], [69.6, 1763.0], [69.7, 1765.0], [69.8, 1765.0], [69.9, 1765.0], [70.0, 1765.0], [70.1, 1766.0], [70.2, 1766.0], [70.3, 1766.0], [70.4, 1766.0], [70.5, 1766.0], [70.6, 1766.0], [70.7, 1767.0], [70.8, 1767.0], [70.9, 1767.0], [71.0, 1767.0], [71.1, 1768.0], [71.2, 1768.0], [71.3, 1768.0], [71.4, 1772.0], [71.5, 1772.0], [71.6, 1772.0], [71.7, 1773.0], [71.8, 1773.0], [71.9, 1773.0], [72.0, 1773.0], [72.1, 1774.0], [72.2, 1774.0], [72.3, 1774.0], [72.4, 1774.0], [72.5, 1774.0], [72.6, 1774.0], [72.7, 1776.0], [72.8, 1776.0], [72.9, 1776.0], [73.0, 1776.0], [73.1, 1778.0], [73.2, 1778.0], [73.3, 1778.0], [73.4, 1779.0], [73.5, 1779.0], [73.6, 1779.0], [73.7, 1780.0], [73.8, 1780.0], [73.9, 1780.0], [74.0, 1780.0], [74.1, 1781.0], [74.2, 1781.0], [74.3, 1781.0], [74.4, 1783.0], [74.5, 1783.0], [74.6, 1783.0], [74.7, 1784.0], [74.8, 1784.0], [74.9, 1784.0], [75.0, 1784.0], [75.1, 1786.0], [75.2, 1786.0], [75.3, 1786.0], [75.4, 1788.0], [75.5, 1788.0], [75.6, 1788.0], [75.7, 1790.0], [75.8, 1790.0], [75.9, 1790.0], [76.0, 1794.0], [76.1, 1794.0], [76.2, 1794.0], [76.3, 1794.0], [76.4, 1795.0], [76.5, 1795.0], [76.6, 1795.0], [76.7, 1800.0], [76.8, 1800.0], [76.9, 1800.0], [77.0, 1803.0], [77.1, 1803.0], [77.2, 1803.0], [77.3, 1803.0], [77.4, 1815.0], [77.5, 1815.0], [77.6, 1815.0], [77.7, 1816.0], [77.8, 1816.0], [77.9, 1816.0], [78.0, 1825.0], [78.1, 1825.0], [78.2, 1825.0], [78.3, 1825.0], [78.4, 1825.0], [78.5, 1825.0], [78.6, 1825.0], [78.7, 1825.0], [78.8, 1825.0], [78.9, 1825.0], [79.0, 1827.0], [79.1, 1827.0], [79.2, 1827.0], [79.3, 1827.0], [79.4, 1835.0], [79.5, 1835.0], [79.6, 1835.0], [79.7, 1837.0], [79.8, 1837.0], [79.9, 1837.0], [80.0, 1838.0], [80.1, 1838.0], [80.2, 1838.0], [80.3, 1838.0], [80.4, 1839.0], [80.5, 1839.0], [80.6, 1839.0], [80.7, 1842.0], [80.8, 1842.0], [80.9, 1842.0], [81.0, 1848.0], [81.1, 1848.0], [81.2, 1848.0], [81.3, 1848.0], [81.4, 1856.0], [81.5, 1856.0], [81.6, 1856.0], [81.7, 1856.0], [81.8, 1856.0], [81.9, 1856.0], [82.0, 1859.0], [82.1, 1859.0], [82.2, 1859.0], [82.3, 1859.0], [82.4, 1861.0], [82.5, 1861.0], [82.6, 1861.0], [82.7, 1867.0], [82.8, 1867.0], [82.9, 1867.0], [83.0, 1870.0], [83.1, 1870.0], [83.2, 1870.0], [83.3, 1870.0], [83.4, 1876.0], [83.5, 1876.0], [83.6, 1876.0], [83.7, 1876.0], [83.8, 1876.0], [83.9, 1876.0], [84.0, 1877.0], [84.1, 1877.0], [84.2, 1877.0], [84.3, 1877.0], [84.4, 1881.0], [84.5, 1881.0], [84.6, 1881.0], [84.7, 1881.0], [84.8, 1881.0], [84.9, 1881.0], [85.0, 1883.0], [85.1, 1883.0], [85.2, 1883.0], [85.3, 1883.0], [85.4, 1884.0], [85.5, 1884.0], [85.6, 1884.0], [85.7, 1886.0], [85.8, 1886.0], [85.9, 1886.0], [86.0, 1887.0], [86.1, 1887.0], [86.2, 1887.0], [86.3, 1887.0], [86.4, 1888.0], [86.5, 1888.0], [86.6, 1888.0], [86.7, 1889.0], [86.8, 1889.0], [86.9, 1889.0], [87.0, 1889.0], [87.1, 1889.0], [87.2, 1889.0], [87.3, 1889.0], [87.4, 1890.0], [87.5, 1890.0], [87.6, 1890.0], [87.7, 1894.0], [87.8, 1894.0], [87.9, 1894.0], [88.0, 1897.0], [88.1, 1897.0], [88.2, 1897.0], [88.3, 1897.0], [88.4, 1901.0], [88.5, 1901.0], [88.6, 1901.0], [88.7, 1903.0], [88.8, 1903.0], [88.9, 1903.0], [89.0, 1906.0], [89.1, 1906.0], [89.2, 1906.0], [89.3, 1906.0], [89.4, 1907.0], [89.5, 1907.0], [89.6, 1907.0], [89.7, 1910.0], [89.8, 1910.0], [89.9, 1910.0], [90.0, 1912.0], [90.1, 1912.0], [90.2, 1912.0], [90.3, 1912.0], [90.4, 1914.0], [90.5, 1914.0], [90.6, 1914.0], [90.7, 1914.0], [90.8, 1914.0], [90.9, 1914.0], [91.0, 1923.0], [91.1, 1923.0], [91.2, 1923.0], [91.3, 1923.0], [91.4, 1924.0], [91.5, 1924.0], [91.6, 1924.0], [91.7, 1928.0], [91.8, 1928.0], [91.9, 1928.0], [92.0, 1932.0], [92.1, 1932.0], [92.2, 1932.0], [92.3, 1932.0], [92.4, 1933.0], [92.5, 1933.0], [92.6, 1933.0], [92.7, 1939.0], [92.8, 1939.0], [92.9, 1939.0], [93.0, 1940.0], [93.1, 1940.0], [93.2, 1940.0], [93.3, 1940.0], [93.4, 1943.0], [93.5, 1943.0], [93.6, 1943.0], [93.7, 1946.0], [93.8, 1946.0], [93.9, 1946.0], [94.0, 1947.0], [94.1, 1947.0], [94.2, 1947.0], [94.3, 1947.0], [94.4, 1949.0], [94.5, 1949.0], [94.6, 1949.0], [94.7, 1964.0], [94.8, 1964.0], [94.9, 1964.0], [95.0, 1985.0], [95.1, 1985.0], [95.2, 1985.0], [95.3, 1985.0], [95.4, 1986.0], [95.5, 1986.0], [95.6, 1986.0], [95.7, 1987.0], [95.8, 1987.0], [95.9, 1987.0], [96.0, 1988.0], [96.1, 1988.0], [96.2, 1988.0], [96.3, 1988.0], [96.4, 1993.0], [96.5, 1993.0], [96.6, 1993.0], [96.7, 2004.0], [96.8, 2004.0], [96.9, 2004.0], [97.0, 2011.0], [97.1, 2011.0], [97.2, 2011.0], [97.3, 2011.0], [97.4, 2013.0], [97.5, 2013.0], [97.6, 2013.0], [97.7, 2023.0], [97.8, 2023.0], [97.9, 2023.0], [98.0, 2025.0], [98.1, 2025.0], [98.2, 2025.0], [98.3, 2025.0], [98.4, 2034.0], [98.5, 2034.0], [98.6, 2034.0], [98.7, 2069.0], [98.8, 2069.0], [98.9, 2069.0], [99.0, 2070.0], [99.1, 2070.0], [99.2, 2070.0], [99.3, 2070.0], [99.4, 3033.0], [99.5, 3033.0], [99.6, 3033.0], [99.7, 8035.0], [99.8, 8035.0], [99.9, 8035.0]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[0.0, 522.0], [0.1, 522.0], [0.2, 522.0], [0.3, 522.0], [0.4, 530.0], [0.5, 530.0], [0.6, 530.0], [0.7, 536.0], [0.8, 536.0], [0.9, 536.0], [1.0, 536.0], [1.1, 536.0], [1.2, 536.0], [1.3, 536.0], [1.4, 537.0], [1.5, 537.0], [1.6, 537.0], [1.7, 537.0], [1.8, 537.0], [1.9, 537.0], [2.0, 538.0], [2.1, 538.0], [2.2, 538.0], [2.3, 538.0], [2.4, 543.0], [2.5, 543.0], [2.6, 543.0], [2.7, 547.0], [2.8, 547.0], [2.9, 547.0], [3.0, 547.0], [3.1, 548.0], [3.2, 548.0], [3.3, 548.0], [3.4, 551.0], [3.5, 551.0], [3.6, 551.0], [3.7, 553.0], [3.8, 553.0], [3.9, 553.0], [4.0, 553.0], [4.1, 554.0], [4.2, 554.0], [4.3, 554.0], [4.4, 556.0], [4.5, 556.0], [4.6, 556.0], [4.7, 558.0], [4.8, 558.0], [4.9, 558.0], [5.0, 558.0], [5.1, 558.0], [5.2, 558.0], [5.3, 558.0], [5.4, 1029.0], [5.5, 1029.0], [5.6, 1029.0], [5.7, 1038.0], [5.8, 1038.0], [5.9, 1038.0], [6.0, 1042.0], [6.1, 1042.0], [6.2, 1042.0], [6.3, 1042.0], [6.4, 1042.0], [6.5, 1042.0], [6.6, 1042.0], [6.7, 1044.0], [6.8, 1044.0], [6.9, 1044.0], [7.0, 1045.0], [7.1, 1045.0], [7.2, 1045.0], [7.3, 1045.0], [7.4, 1045.0], [7.5, 1045.0], [7.6, 1045.0], [7.7, 1048.0], [7.8, 1048.0], [7.9, 1048.0], [8.0, 1049.0], [8.1, 1049.0], [8.2, 1049.0], [8.3, 1049.0], [8.4, 1049.0], [8.5, 1049.0], [8.6, 1049.0], [8.7, 1050.0], [8.8, 1050.0], [8.9, 1050.0], [9.0, 1050.0], [9.1, 1050.0], [9.2, 1050.0], [9.3, 1050.0], [9.4, 1053.0], [9.5, 1053.0], [9.6, 1053.0], [9.7, 1053.0], [9.8, 1053.0], [9.9, 1053.0], [10.0, 1056.0], [10.1, 1056.0], [10.2, 1056.0], [10.3, 1056.0], [10.4, 1057.0], [10.5, 1057.0], [10.6, 1057.0], [10.7, 1057.0], [10.8, 1057.0], [10.9, 1057.0], [11.0, 1061.0], [11.1, 1061.0], [11.2, 1061.0], [11.3, 1061.0], [11.4, 1064.0], [11.5, 1064.0], [11.6, 1064.0], [11.7, 1066.0], [11.8, 1066.0], [11.9, 1066.0], [12.0, 1067.0], [12.1, 1067.0], [12.2, 1067.0], [12.3, 1067.0], [12.4, 1067.0], [12.5, 1067.0], [12.6, 1067.0], [12.7, 1068.0], [12.8, 1068.0], [12.9, 1068.0], [13.0, 1068.0], [13.1, 1068.0], [13.2, 1068.0], [13.3, 1068.0], [13.4, 1068.0], [13.5, 1068.0], [13.6, 1068.0], [13.7, 1070.0], [13.8, 1070.0], [13.9, 1070.0], [14.0, 1073.0], [14.1, 1073.0], [14.2, 1073.0], [14.3, 1073.0], [14.4, 1075.0], [14.5, 1075.0], [14.6, 1075.0], [14.7, 1079.0], [14.8, 1079.0], [14.9, 1079.0], [15.0, 1079.0], [15.1, 1082.0], [15.2, 1082.0], [15.3, 1082.0], [15.4, 1088.0], [15.5, 1088.0], [15.6, 1088.0], [15.7, 1088.0], [15.8, 1088.0], [15.9, 1088.0], [16.0, 1088.0], [16.1, 1100.0], [16.2, 1100.0], [16.3, 1100.0], [16.4, 1405.0], [16.5, 1405.0], [16.6, 1405.0], [16.7, 1491.0], [16.8, 1491.0], [16.9, 1491.0], [17.0, 1493.0], [17.1, 1493.0], [17.2, 1493.0], [17.3, 1493.0], [17.4, 1592.0], [17.5, 1592.0], [17.6, 1592.0], [17.7, 1601.0], [17.8, 1601.0], [17.9, 1601.0], [18.0, 1621.0], [18.1, 1621.0], [18.2, 1621.0], [18.3, 1621.0], [18.4, 1635.0], [18.5, 1635.0], [18.6, 1635.0], [18.7, 1637.0], [18.8, 1637.0], [18.9, 1637.0], [19.0, 1638.0], [19.1, 1638.0], [19.2, 1638.0], [19.3, 1638.0], [19.4, 1639.0], [19.5, 1639.0], [19.6, 1639.0], [19.7, 1641.0], [19.8, 1641.0], [19.9, 1641.0], [20.0, 1641.0], [20.1, 1641.0], [20.2, 1641.0], [20.3, 1641.0], [20.4, 1642.0], [20.5, 1642.0], [20.6, 1642.0], [20.7, 1651.0], [20.8, 1651.0], [20.9, 1651.0], [21.0, 1651.0], [21.1, 1651.0], [21.2, 1651.0], [21.3, 1651.0], [21.4, 1653.0], [21.5, 1653.0], [21.6, 1653.0], [21.7, 1654.0], [21.8, 1654.0], [21.9, 1654.0], [22.0, 1655.0], [22.1, 1655.0], [22.2, 1655.0], [22.3, 1655.0], [22.4, 1657.0], [22.5, 1657.0], [22.6, 1657.0], [22.7, 1660.0], [22.8, 1660.0], [22.9, 1660.0], [23.0, 1661.0], [23.1, 1661.0], [23.2, 1661.0], [23.3, 1661.0], [23.4, 1662.0], [23.5, 1662.0], [23.6, 1662.0], [23.7, 1664.0], [23.8, 1664.0], [23.9, 1664.0], [24.0, 1665.0], [24.1, 1665.0], [24.2, 1665.0], [24.3, 1665.0], [24.4, 1667.0], [24.5, 1667.0], [24.6, 1667.0], [24.7, 1670.0], [24.8, 1670.0], [24.9, 1670.0], [25.0, 1671.0], [25.1, 1671.0], [25.2, 1671.0], [25.3, 1671.0], [25.4, 1671.0], [25.5, 1671.0], [25.6, 1671.0], [25.7, 1676.0], [25.8, 1676.0], [25.9, 1676.0], [26.0, 1677.0], [26.1, 1677.0], [26.2, 1677.0], [26.3, 1677.0], [26.4, 1680.0], [26.5, 1680.0], [26.6, 1680.0], [26.7, 1681.0], [26.8, 1681.0], [26.9, 1681.0], [27.0, 1682.0], [27.1, 1682.0], [27.2, 1682.0], [27.3, 1682.0], [27.4, 1685.0], [27.5, 1685.0], [27.6, 1685.0], [27.7, 1686.0], [27.8, 1686.0], [27.9, 1686.0], [28.0, 1691.0], [28.1, 1691.0], [28.2, 1691.0], [28.3, 1691.0], [28.4, 1692.0], [28.5, 1692.0], [28.6, 1692.0], [28.7, 1696.0], [28.8, 1696.0], [28.9, 1696.0], [29.0, 1704.0], [29.1, 1704.0], [29.2, 1704.0], [29.3, 1704.0], [29.4, 1708.0], [29.5, 1708.0], [29.6, 1708.0], [29.7, 1717.0], [29.8, 1717.0], [29.9, 1717.0], [30.0, 1720.0], [30.1, 1720.0], [30.2, 1720.0], [30.3, 1720.0], [30.4, 1721.0], [30.5, 1721.0], [30.6, 1721.0], [30.7, 1734.0], [30.8, 1734.0], [30.9, 1734.0], [31.0, 1741.0], [31.1, 1741.0], [31.2, 1741.0], [31.3, 1741.0], [31.4, 1745.0], [31.5, 1745.0], [31.6, 1745.0], [31.7, 1754.0], [31.8, 1754.0], [31.9, 1754.0], [32.0, 1760.0], [32.1, 1760.0], [32.2, 1760.0], [32.3, 1760.0], [32.4, 1760.0], [32.5, 1760.0], [32.6, 1760.0], [32.7, 1772.0], [32.8, 1772.0], [32.9, 1772.0], [33.0, 1775.0], [33.1, 1775.0], [33.2, 1775.0], [33.3, 1775.0], [33.4, 1780.0], [33.5, 1780.0], [33.6, 1780.0], [33.7, 1783.0], [33.8, 1783.0], [33.9, 1783.0], [34.0, 1786.0], [34.1, 1786.0], [34.2, 1786.0], [34.3, 1786.0], [34.4, 1791.0], [34.5, 1791.0], [34.6, 1791.0], [34.7, 1796.0], [34.8, 1796.0], [34.9, 1796.0], [35.0, 1800.0], [35.1, 1800.0], [35.2, 1800.0], [35.3, 1800.0], [35.4, 1805.0], [35.5, 1805.0], [35.6, 1805.0], [35.7, 1805.0], [35.8, 1805.0], [35.9, 1805.0], [36.0, 1807.0], [36.1, 1807.0], [36.2, 1807.0], [36.3, 1807.0], [36.4, 1811.0], [36.5, 1811.0], [36.6, 1811.0], [36.7, 1815.0], [36.8, 1815.0], [36.9, 1815.0], [37.0, 1818.0], [37.1, 1818.0], [37.2, 1818.0], [37.3, 1818.0], [37.4, 1831.0], [37.5, 1831.0], [37.6, 1831.0], [37.7, 1833.0], [37.8, 1833.0], [37.9, 1833.0], [38.0, 1834.0], [38.1, 1834.0], [38.2, 1834.0], [38.3, 1834.0], [38.4, 1836.0], [38.5, 1836.0], [38.6, 1836.0], [38.7, 1838.0], [38.8, 1838.0], [38.9, 1838.0], [39.0, 1840.0], [39.1, 1840.0], [39.2, 1840.0], [39.3, 1840.0], [39.4, 1842.0], [39.5, 1842.0], [39.6, 1842.0], [39.7, 1842.0], [39.8, 1842.0], [39.9, 1842.0], [40.0, 1846.0], [40.1, 1846.0], [40.2, 1846.0], [40.3, 1846.0], [40.4, 1854.0], [40.5, 1854.0], [40.6, 1854.0], [40.7, 1856.0], [40.8, 1856.0], [40.9, 1856.0], [41.0, 1867.0], [41.1, 1867.0], [41.2, 1867.0], [41.3, 1867.0], [41.4, 1870.0], [41.5, 1870.0], [41.6, 1870.0], [41.7, 1883.0], [41.8, 1883.0], [41.9, 1883.0], [42.0, 1883.0], [42.1, 1884.0], [42.2, 1884.0], [42.3, 1884.0], [42.4, 1897.0], [42.5, 1897.0], [42.6, 1897.0], [42.7, 1900.0], [42.8, 1900.0], [42.9, 1900.0], [43.0, 1900.0], [43.1, 1903.0], [43.2, 1903.0], [43.3, 1903.0], [43.4, 1906.0], [43.5, 1906.0], [43.6, 1906.0], [43.7, 1912.0], [43.8, 1912.0], [43.9, 1912.0], [44.0, 1912.0], [44.1, 1914.0], [44.2, 1914.0], [44.3, 1914.0], [44.4, 1926.0], [44.5, 1926.0], [44.6, 1926.0], [44.7, 1934.0], [44.8, 1934.0], [44.9, 1934.0], [45.0, 1934.0], [45.1, 1935.0], [45.2, 1935.0], [45.3, 1935.0], [45.4, 1950.0], [45.5, 1950.0], [45.6, 1950.0], [45.7, 1956.0], [45.8, 1956.0], [45.9, 1956.0], [46.0, 1956.0], [46.1, 1959.0], [46.2, 1959.0], [46.3, 1959.0], [46.4, 1963.0], [46.5, 1963.0], [46.6, 1963.0], [46.7, 1969.0], [46.8, 1969.0], [46.9, 1969.0], [47.0, 1969.0], [47.1, 1978.0], [47.2, 1978.0], [47.3, 1978.0], [47.4, 1979.0], [47.5, 1979.0], [47.6, 1979.0], [47.7, 1986.0], [47.8, 1986.0], [47.9, 1986.0], [48.0, 1986.0], [48.1, 1988.0], [48.2, 1988.0], [48.3, 1988.0], [48.4, 1988.0], [48.5, 1988.0], [48.6, 1988.0], [48.7, 1989.0], [48.8, 1989.0], [48.9, 1989.0], [49.0, 1989.0], [49.1, 1991.0], [49.2, 1991.0], [49.3, 1991.0], [49.4, 1993.0], [49.5, 1993.0], [49.6, 1993.0], [49.7, 1993.0], [49.8, 1993.0], [49.9, 1993.0], [50.0, 1993.0], [50.1, 1994.0], [50.2, 1994.0], [50.3, 1994.0], [50.4, 1996.0], [50.5, 1996.0], [50.6, 1996.0], [50.7, 1997.0], [50.8, 1997.0], [50.9, 1997.0], [51.0, 1997.0], [51.1, 1998.0], [51.2, 1998.0], [51.3, 1998.0], [51.4, 1999.0], [51.5, 1999.0], [51.6, 1999.0], [51.7, 2000.0], [51.8, 2000.0], [51.9, 2000.0], [52.0, 2000.0], [52.1, 2001.0], [52.2, 2001.0], [52.3, 2001.0], [52.4, 2001.0], [52.5, 2001.0], [52.6, 2001.0], [52.7, 2002.0], [52.8, 2002.0], [52.9, 2002.0], [53.0, 2002.0], [53.1, 2004.0], [53.2, 2004.0], [53.3, 2004.0], [53.4, 2007.0], [53.5, 2007.0], [53.6, 2007.0], [53.7, 2007.0], [53.8, 2007.0], [53.9, 2007.0], [54.0, 2007.0], [54.1, 2007.0], [54.2, 2007.0], [54.3, 2007.0], [54.4, 2008.0], [54.5, 2008.0], [54.6, 2008.0], [54.7, 2009.0], [54.8, 2009.0], [54.9, 2009.0], [55.0, 2009.0], [55.1, 2010.0], [55.2, 2010.0], [55.3, 2010.0], [55.4, 2011.0], [55.5, 2011.0], [55.6, 2011.0], [55.7, 2014.0], [55.8, 2014.0], [55.9, 2014.0], [56.0, 2014.0], [56.1, 2018.0], [56.2, 2018.0], [56.3, 2018.0], [56.4, 2018.0], [56.5, 2018.0], [56.6, 2018.0], [56.7, 2020.0], [56.8, 2020.0], [56.9, 2020.0], [57.0, 2020.0], [57.1, 2023.0], [57.2, 2023.0], [57.3, 2023.0], [57.4, 2023.0], [57.5, 2023.0], [57.6, 2023.0], [57.7, 2023.0], [57.8, 2023.0], [57.9, 2023.0], [58.0, 2023.0], [58.1, 2026.0], [58.2, 2026.0], [58.3, 2026.0], [58.4, 2027.0], [58.5, 2027.0], [58.6, 2027.0], [58.7, 2033.0], [58.8, 2033.0], [58.9, 2033.0], [59.0, 2033.0], [59.1, 2042.0], [59.2, 2042.0], [59.3, 2042.0], [59.4, 2044.0], [59.5, 2044.0], [59.6, 2044.0], [59.7, 2047.0], [59.8, 2047.0], [59.9, 2047.0], [60.0, 2047.0], [60.1, 2049.0], [60.2, 2049.0], [60.3, 2049.0], [60.4, 2050.0], [60.5, 2050.0], [60.6, 2050.0], [60.7, 2052.0], [60.8, 2052.0], [60.9, 2052.0], [61.0, 2052.0], [61.1, 2060.0], [61.2, 2060.0], [61.3, 2060.0], [61.4, 2061.0], [61.5, 2061.0], [61.6, 2061.0], [61.7, 2068.0], [61.8, 2068.0], [61.9, 2068.0], [62.0, 2068.0], [62.1, 2069.0], [62.2, 2069.0], [62.3, 2069.0], [62.4, 2076.0], [62.5, 2076.0], [62.6, 2076.0], [62.7, 2080.0], [62.8, 2080.0], [62.9, 2080.0], [63.0, 2080.0], [63.1, 2093.0], [63.2, 2093.0], [63.3, 2093.0], [63.4, 2172.0], [63.5, 2172.0], [63.6, 2172.0], [63.7, 2213.0], [63.8, 2213.0], [63.9, 2213.0], [64.0, 2213.0], [64.1, 2216.0], [64.2, 2216.0], [64.3, 2216.0], [64.4, 2218.0], [64.5, 2218.0], [64.6, 2218.0], [64.7, 2221.0], [64.8, 2221.0], [64.9, 2221.0], [65.0, 2221.0], [65.1, 2234.0], [65.2, 2234.0], [65.3, 2234.0], [65.4, 2246.0], [65.5, 2246.0], [65.6, 2246.0], [65.7, 2268.0], [65.8, 2268.0], [65.9, 2268.0], [66.0, 2268.0], [66.1, 2291.0], [66.2, 2291.0], [66.3, 2291.0], [66.4, 2296.0], [66.5, 2296.0], [66.6, 2296.0], [66.7, 2346.0], [66.8, 2346.0], [66.9, 2346.0], [67.0, 2346.0], [67.1, 2358.0], [67.2, 2358.0], [67.3, 2358.0], [67.4, 2361.0], [67.5, 2361.0], [67.6, 2361.0], [67.7, 2370.0], [67.8, 2370.0], [67.9, 2370.0], [68.0, 2370.0], [68.1, 2534.0], [68.2, 2534.0], [68.3, 2534.0], [68.4, 2612.0], [68.5, 2612.0], [68.6, 2612.0], [68.7, 2621.0], [68.8, 2621.0], [68.9, 2621.0], [69.0, 2621.0], [69.1, 2627.0], [69.2, 2627.0], [69.3, 2627.0], [69.4, 2631.0], [69.5, 2631.0], [69.6, 2631.0], [69.7, 2640.0], [69.8, 2640.0], [69.9, 2640.0], [70.0, 2640.0], [70.1, 2648.0], [70.2, 2648.0], [70.3, 2648.0], [70.4, 2652.0], [70.5, 2652.0], [70.6, 2652.0], [70.7, 2652.0], [70.8, 2652.0], [70.9, 2652.0], [71.0, 2652.0], [71.1, 2657.0], [71.2, 2657.0], [71.3, 2657.0], [71.4, 2658.0], [71.5, 2658.0], [71.6, 2658.0], [71.7, 2674.0], [71.8, 2674.0], [71.9, 2674.0], [72.0, 2674.0], [72.1, 2676.0], [72.2, 2676.0], [72.3, 2676.0], [72.4, 2678.0], [72.5, 2678.0], [72.6, 2678.0], [72.7, 2692.0], [72.8, 2692.0], [72.9, 2692.0], [73.0, 2694.0], [73.1, 2694.0], [73.2, 2694.0], [73.3, 2694.0], [73.4, 2695.0], [73.5, 2695.0], [73.6, 2695.0], [73.7, 2696.0], [73.8, 2696.0], [73.9, 2696.0], [74.0, 2700.0], [74.1, 2700.0], [74.2, 2700.0], [74.3, 2700.0], [74.4, 2704.0], [74.5, 2704.0], [74.6, 2704.0], [74.7, 2707.0], [74.8, 2707.0], [74.9, 2707.0], [75.0, 2710.0], [75.1, 2710.0], [75.2, 2710.0], [75.3, 2710.0], [75.4, 2712.0], [75.5, 2712.0], [75.6, 2712.0], [75.7, 2716.0], [75.8, 2716.0], [75.9, 2716.0], [76.0, 2733.0], [76.1, 2733.0], [76.2, 2733.0], [76.3, 2733.0], [76.4, 2751.0], [76.5, 2751.0], [76.6, 2751.0], [76.7, 2773.0], [76.8, 2773.0], [76.9, 2773.0], [77.0, 2777.0], [77.1, 2777.0], [77.2, 2777.0], [77.3, 2777.0], [77.4, 2785.0], [77.5, 2785.0], [77.6, 2785.0], [77.7, 2795.0], [77.8, 2795.0], [77.9, 2795.0], [78.0, 2795.0], [78.1, 2795.0], [78.2, 2795.0], [78.3, 2795.0], [78.4, 2805.0], [78.5, 2805.0], [78.6, 2805.0], [78.7, 2806.0], [78.8, 2806.0], [78.9, 2806.0], [79.0, 2815.0], [79.1, 2815.0], [79.2, 2815.0], [79.3, 2815.0], [79.4, 2824.0], [79.5, 2824.0], [79.6, 2824.0], [79.7, 3070.0], [79.8, 3070.0], [79.9, 3070.0], [80.0, 3074.0], [80.1, 3074.0], [80.2, 3074.0], [80.3, 3074.0], [80.4, 3077.0], [80.5, 3077.0], [80.6, 3077.0], [80.7, 3100.0], [80.8, 3100.0], [80.9, 3100.0], [81.0, 3146.0], [81.1, 3146.0], [81.2, 3146.0], [81.3, 3146.0], [81.4, 3156.0], [81.5, 3156.0], [81.6, 3156.0], [81.7, 3174.0], [81.8, 3174.0], [81.9, 3174.0], [82.0, 3192.0], [82.1, 3192.0], [82.2, 3192.0], [82.3, 3192.0], [82.4, 3302.0], [82.5, 3302.0], [82.6, 3302.0], [82.7, 3384.0], [82.8, 3384.0], [82.9, 3384.0], [83.0, 3422.0], [83.1, 3422.0], [83.2, 3422.0], [83.3, 3422.0], [83.4, 3424.0], [83.5, 3424.0], [83.6, 3424.0], [83.7, 3452.0], [83.8, 3452.0], [83.9, 3452.0], [84.0, 3478.0], [84.1, 3478.0], [84.2, 3478.0], [84.3, 3478.0], [84.4, 3505.0], [84.5, 3505.0], [84.6, 3505.0], [84.7, 3537.0], [84.8, 3537.0], [84.9, 3537.0], [85.0, 3538.0], [85.1, 3538.0], [85.2, 3538.0], [85.3, 3538.0], [85.4, 3562.0], [85.5, 3562.0], [85.6, 3562.0], [85.7, 3565.0], [85.8, 3565.0], [85.9, 3565.0], [86.0, 3565.0], [86.1, 3565.0], [86.2, 3565.0], [86.3, 3565.0], [86.4, 3577.0], [86.5, 3577.0], [86.6, 3577.0], [86.7, 3617.0], [86.8, 3617.0], [86.9, 3617.0], [87.0, 3640.0], [87.1, 3640.0], [87.2, 3640.0], [87.3, 3640.0], [87.4, 3853.0], [87.5, 3853.0], [87.6, 3853.0], [87.7, 3866.0], [87.8, 3866.0], [87.9, 3866.0], [88.0, 3866.0], [88.1, 3866.0], [88.2, 3866.0], [88.3, 3866.0], [88.4, 3870.0], [88.5, 3870.0], [88.6, 3870.0], [88.7, 3874.0], [88.8, 3874.0], [88.9, 3874.0], [89.0, 3877.0], [89.1, 3877.0], [89.2, 3877.0], [89.3, 3877.0], [89.4, 3891.0], [89.5, 3891.0], [89.6, 3891.0], [89.7, 3898.0], [89.8, 3898.0], [89.9, 3898.0], [90.0, 3906.0], [90.1, 3906.0], [90.2, 3906.0], [90.3, 3906.0], [90.4, 3916.0], [90.5, 3916.0], [90.6, 3916.0], [90.7, 3920.0], [90.8, 3920.0], [90.9, 3920.0], [91.0, 3925.0], [91.1, 3925.0], [91.2, 3925.0], [91.3, 3925.0], [91.4, 3929.0], [91.5, 3929.0], [91.6, 3929.0], [91.7, 3937.0], [91.8, 3937.0], [91.9, 3937.0], [92.0, 3940.0], [92.1, 3940.0], [92.2, 3940.0], [92.3, 3940.0], [92.4, 3944.0], [92.5, 3944.0], [92.6, 3944.0], [92.7, 3946.0], [92.8, 3946.0], [92.9, 3946.0], [93.0, 3946.0], [93.1, 3946.0], [93.2, 3946.0], [93.3, 3946.0], [93.4, 3967.0], [93.5, 3967.0], [93.6, 3967.0], [93.7, 3976.0], [93.8, 3976.0], [93.9, 3976.0], [94.0, 3996.0], [94.1, 3996.0], [94.2, 3996.0], [94.3, 3996.0], [94.4, 4003.0], [94.5, 4003.0], [94.6, 4003.0], [94.7, 4018.0], [94.8, 4018.0], [94.9, 4018.0], [95.0, 4064.0], [95.1, 4064.0], [95.2, 4064.0], [95.3, 4064.0], [95.4, 4080.0], [95.5, 4080.0], [95.6, 4080.0], [95.7, 4761.0], [95.8, 4761.0], [95.9, 4761.0], [96.0, 4766.0], [96.1, 4766.0], [96.2, 4766.0], [96.3, 4766.0], [96.4, 4769.0], [96.5, 4769.0], [96.6, 4769.0], [96.7, 4867.0], [96.8, 4867.0], [96.9, 4867.0], [97.0, 4873.0], [97.1, 4873.0], [97.2, 4873.0], [97.3, 4873.0], [97.4, 4893.0], [97.5, 4893.0], [97.6, 4893.0], [97.7, 4932.0], [97.8, 4932.0], [97.9, 4932.0], [98.0, 4953.0], [98.1, 4953.0], [98.2, 4953.0], [98.3, 4953.0], [98.4, 4973.0], [98.5, 4973.0], [98.6, 4973.0], [98.7, 5000.0], [98.8, 5000.0], [98.9, 5000.0], [99.0, 5014.0], [99.1, 5014.0], [99.2, 5014.0], [99.3, 5014.0], [99.4, 5116.0], [99.5, 5116.0], [99.6, 5116.0], [99.7, 5125.0], [99.8, 5125.0], [99.9, 5125.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 202.0, "series": [{"data": [[8500.0, 6.0], [9000.0, 17.0], [9500.0, 3.0], [2500.0, 4.0], [3000.0, 14.0], [13500.0, 13.0], [3500.0, 20.0], [1000.0, 15.0], [4000.0, 9.0], [4500.0, 25.0], [5000.0, 58.0], [5500.0, 64.0], [1500.0, 1.0], [6000.0, 17.0], [6500.0, 2.0], [7500.0, 5.0], [8000.0, 27.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 202.0], [4500.0, 8.0], [1500.0, 50.0], [4000.0, 5.0], [500.0, 10.0], [1000.0, 23.0], [2000.0, 2.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[0.0, 154.0], [1500.0, 127.0], [3000.0, 1.0], [2000.0, 8.0], [8000.0, 1.0], [1000.0, 9.0]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[4500.0, 9.0], [2500.0, 35.0], [5000.0, 4.0], [3000.0, 14.0], [1500.0, 103.0], [3500.0, 30.0], [500.0, 16.0], [4000.0, 4.0], [2000.0, 49.0], [1000.0, 36.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 500, "maxX": 13500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 109.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 735.0, "series": [{"data": [[1.0, 109.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[0.0, 356.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 735.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 205.2354031510659, "minX": 1.60814352E12, "maxY": 292.9917355371901, "series": [{"data": [[1.60814352E12, 292.9917355371901], [1.60814358E12, 205.2354031510659]], "isOverall": false, "label": "Slypee", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814358E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 264.0, "minX": 1.0, "maxY": 13848.307692307691, "series": [{"data": [[78.0, 9885.0], [88.0, 9857.0], [94.0, 9840.0], [140.0, 9223.0], [163.0, 9241.0], [161.0, 9242.0], [171.0, 9183.0], [195.0, 9071.5], [194.0, 9119.0], [192.0, 9187.0], [13.0, 13848.307692307691], [250.0, 1348.5], [251.0, 1350.5], [252.0, 3846.0], [253.0, 1373.5], [254.0, 1351.5], [255.0, 5368.777777777777], [257.0, 1141.0], [265.0, 8413.5], [285.0, 5894.5223880597005], [281.0, 7950.5], [279.0, 8026.0], [278.0, 8030.0], [277.0, 8031.5], [276.0, 8052.5], [274.0, 8305.874999999998], [273.0, 8265.0], [272.0, 8408.5], [300.0, 1713.0], [298.0, 4622.535714285712], [293.0, 5647.0], [291.0, 5567.0], [290.0, 5570.0], [289.0, 5582.666666666667]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[268.4933333333334, 5915.266666666667]], "isOverall": false, "label": "HomePage-Aggregated", "isController": false}, {"data": [[2.0, 290.0], [3.0, 288.0], [4.0, 287.0], [5.0, 284.0], [6.0, 285.0], [7.0, 279.0], [8.0, 281.0], [9.0, 278.0], [10.0, 274.0], [11.0, 279.0], [12.0, 277.0], [13.0, 265.0], [14.0, 268.0], [15.0, 269.0], [16.0, 264.0], [17.0, 1051.0], [18.0, 270.0], [19.0, 271.0], [20.0, 271.0], [21.0, 267.0], [22.0, 1035.0], [23.0, 265.0], [24.0, 1052.0], [25.0, 1043.0], [26.0, 1041.0], [27.0, 268.0], [28.0, 275.0], [29.0, 273.0], [30.0, 272.0], [31.0, 266.0], [33.0, 268.0], [32.0, 271.0], [35.0, 266.0], [34.0, 270.0], [37.0, 270.0], [36.0, 270.0], [39.0, 270.0], [38.0, 270.0], [41.0, 268.0], [40.0, 1044.0], [43.0, 269.0], [42.0, 271.0], [45.0, 1033.0], [44.0, 265.0], [47.0, 282.0], [46.0, 269.0], [49.0, 267.0], [48.0, 273.0], [51.0, 269.0], [50.0, 275.0], [53.0, 265.0], [52.0, 267.0], [55.0, 272.0], [54.0, 265.0], [57.0, 1044.0], [56.0, 270.0], [59.0, 307.0], [58.0, 266.0], [61.0, 309.0], [60.0, 269.0], [63.0, 296.0], [62.0, 301.0], [67.0, 282.0], [66.0, 288.0], [65.0, 299.0], [64.0, 297.0], [71.0, 272.0], [70.0, 272.0], [69.0, 284.0], [68.0, 287.0], [75.0, 2255.0], [74.0, 270.0], [73.0, 274.0], [72.0, 276.0], [78.0, 1416.0], [77.0, 1162.0], [76.0, 1394.0], [83.0, 1608.0], [82.0, 1004.0], [87.0, 269.0], [86.0, 1905.0], [85.0, 271.0], [84.0, 273.0], [91.0, 1871.0], [90.0, 269.0], [89.0, 1650.0], [88.0, 1406.0], [95.0, 1199.0], [94.0, 267.0], [93.0, 1252.0], [92.0, 1888.0], [99.0, 271.0], [98.0, 271.0], [97.0, 269.0], [96.0, 271.0], [103.0, 1324.0], [102.0, 274.0], [101.0, 1247.0], [100.0, 1277.0], [107.0, 270.0], [106.0, 267.0], [105.0, 1324.0], [104.0, 270.0], [111.0, 1346.0], [110.0, 1320.0], [109.0, 1958.0], [108.0, 1933.0], [115.0, 1628.0], [114.0, 1391.0], [113.0, 2048.0], [112.0, 1355.0], [119.0, 1533.0], [118.0, 1526.0], [116.0, 1426.0], [123.0, 1689.0], [122.0, 1939.0], [121.0, 1623.0], [120.0, 1502.0], [127.0, 1769.0], [126.0, 1935.0], [125.0, 1781.0], [124.0, 1788.0], [135.0, 1615.0], [134.0, 278.0], [133.0, 277.0], [132.0, 1752.0], [131.0, 1726.0], [130.0, 1729.0], [129.0, 1729.0], [128.0, 1733.0], [143.0, 1758.0], [142.0, 491.0], [141.0, 1763.0], [140.0, 1758.0], [139.0, 1780.0], [138.0, 270.0], [137.0, 271.0], [136.0, 1679.0], [151.0, 428.0], [150.0, 568.0], [149.0, 586.0], [148.0, 1766.0], [147.0, 274.0], [146.0, 279.0], [145.0, 1731.0], [144.0, 1750.0], [159.0, 1704.0], [158.0, 448.0], [157.0, 1748.0], [156.0, 573.0], [155.0, 474.0], [154.0, 443.0], [153.0, 366.0], [152.0, 457.0], [167.0, 390.0], [166.0, 572.0], [165.0, 276.0], [164.0, 457.0], [163.0, 273.0], [162.0, 563.0], [161.0, 573.0], [160.0, 373.0], [175.0, 534.0], [174.0, 428.0], [173.0, 374.0], [172.0, 417.0], [171.0, 544.0], [170.0, 334.0], [169.0, 439.0], [168.0, 432.0], [183.0, 425.0], [182.0, 338.0], [181.0, 397.0], [180.0, 384.0], [179.0, 410.0], [178.0, 403.0], [177.0, 430.0], [176.0, 554.0], [191.0, 522.0], [190.0, 387.0], [189.0, 390.0], [188.0, 377.0], [187.0, 416.0], [186.0, 406.0], [185.0, 411.0], [184.0, 332.0], [199.0, 1658.0], [198.0, 1676.0], [197.0, 366.0], [196.0, 276.0], [195.0, 464.0], [194.0, 371.0], [193.0, 366.0], [192.0, 311.0], [207.0, 301.0], [206.0, 325.0], [205.0, 331.0], [204.0, 327.0], [203.0, 326.0], [202.0, 325.0], [201.0, 334.0], [200.0, 341.0], [215.0, 298.0], [214.0, 284.0], [213.0, 300.0], [212.0, 369.0], [211.0, 356.0], [210.0, 356.0], [209.0, 371.0], [208.0, 365.0], [223.0, 1855.0], [222.0, 1858.0], [221.0, 301.0], [220.0, 301.0], [219.0, 294.0], [218.0, 1626.0], [217.0, 292.0], [216.0, 316.0], [231.0, 266.0], [230.0, 269.0], [229.0, 1827.0], [228.0, 1838.0], [227.0, 1834.0], [226.0, 1842.0], [225.0, 1847.0], [224.0, 1856.0], [239.0, 1734.0], [238.0, 274.0], [237.0, 277.0], [236.0, 277.0], [235.0, 286.0], [234.0, 288.5], [232.0, 284.0], [247.0, 269.0], [246.0, 271.0], [245.0, 273.0], [244.0, 268.0], [243.0, 272.0], [242.0, 266.0], [241.0, 1722.0], [240.0, 269.0], [255.0, 281.0], [254.0, 267.0], [253.0, 270.0], [252.0, 269.0], [251.0, 269.0], [250.0, 274.0], [249.0, 271.0], [248.0, 299.0], [270.0, 327.0], [271.0, 329.0], [269.0, 358.0], [268.0, 352.0], [267.0, 370.0], [266.0, 386.0], [265.0, 296.0], [264.0, 298.0], [263.0, 304.0], [257.0, 325.0], [256.0, 345.0], [259.0, 342.0], [258.0, 326.0], [262.0, 310.0], [261.0, 307.0], [260.0, 268.0], [286.0, 4600.0], [287.0, 4597.0], [285.0, 315.0], [284.0, 283.0], [283.0, 274.0], [282.0, 321.0], [281.0, 305.0], [280.0, 288.0], [279.0, 287.0], [273.0, 291.0], [272.0, 356.0], [275.0, 290.0], [274.0, 299.0], [278.0, 275.0], [277.0, 279.0], [276.0, 287.0], [296.0, 4299.0], [300.0, 300.0], [299.0, 293.0], [298.0, 4280.0], [297.0, 4291.0], [295.0, 4309.0], [294.0, 4334.0], [293.0, 4537.0], [292.0, 4550.0], [291.0, 4566.0], [290.0, 4577.0], [289.0, 4590.0], [288.0, 4603.0], [1.0, 287.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[150.5300000000001, 819.6600000000005]], "isOverall": false, "label": "Detail Category Page-Aggregated", "isController": false}, {"data": [[13.0, 283.30769230769226], [17.0, 269.0], [18.0, 266.5], [25.0, 1045.0], [26.0, 1055.0], [27.0, 1041.3333333333333], [44.0, 271.2], [46.0, 269.54545454545456], [48.0, 271.0], [50.0, 267.5], [60.0, 278.0], [62.0, 269.0], [65.0, 285.0], [69.0, 267.0], [75.0, 268.5], [78.0, 267.0], [89.0, 1671.0], [88.0, 1731.0], [96.0, 1502.0], [100.0, 267.0], [110.0, 1387.0], [108.0, 1352.0], [119.0, 293.4], [117.0, 912.0], [116.0, 1449.0], [121.0, 267.0], [120.0, 279.66666666666663], [134.0, 810.125], [133.0, 279.0], [132.0, 1007.5], [129.0, 1328.75], [128.0, 1703.0], [138.0, 1653.0], [137.0, 269.0], [149.0, 1784.0], [158.0, 1778.0], [195.0, 8035.0], [207.0, 1754.0], [206.0, 1637.5], [214.0, 1677.0], [213.0, 1632.0], [211.0, 1606.0], [223.0, 1731.0], [221.0, 1618.2], [220.0, 1779.0], [229.0, 1607.111111111111], [227.0, 1779.3333333333333], [225.0, 1775.1666666666667], [224.0, 1759.0], [239.0, 1788.5], [238.0, 1722.2], [237.0, 1876.0], [236.0, 272.0], [247.0, 1678.076923076923], [242.0, 1776.0], [241.0, 1266.0], [240.0, 1809.0], [255.0, 1780.3157894736844], [254.0, 1748.1818181818182], [253.0, 1881.0], [252.0, 3033.0], [250.0, 1284.4], [248.0, 1094.3333333333333], [265.0, 292.0], [270.0, 310.5], [267.0, 364.0], [263.0, 298.0], [262.0, 303.0], [261.0, 295.0], [260.0, 280.0], [259.0, 302.75], [257.0, 339.0], [275.0, 298.0], [285.0, 736.5714285714287], [284.0, 286.5], [283.0, 296.5], [282.0, 286.0], [280.0, 593.2], [279.0, 273.5], [278.0, 1089.5], [276.0, 1361.0], [274.0, 288.5], [272.0, 332.0], [300.0, 293.66666666666663]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[202.4466666666665, 1035.7599999999998]], "isOverall": false, "label": "Category Page-Aggregated", "isController": false}, {"data": [[50.0, 1066.8], [53.0, 1076.6666666666667], [52.0, 1057.0], [55.0, 1076.0], [54.0, 1062.6666666666667], [57.0, 1057.0], [56.0, 1068.0], [61.0, 1038.0], [75.0, 1667.0], [82.0, 2346.0], [80.0, 1775.0], [109.0, 2050.0], [116.0, 1806.625], [123.0, 1883.5], [126.0, 1772.0], [135.0, 1687.5], [134.0, 1721.0], [138.0, 1660.1000000000001], [137.0, 1660.142857142857], [150.0, 1745.0], [13.0, 1057.3076923076922], [255.0, 1973.9999999999998], [254.0, 2670.5], [251.0, 2172.0], [250.0, 1985.3333333333333], [248.0, 2301.0], [267.0, 3565.0], [265.0, 2404.5], [260.0, 2042.0], [259.0, 2072.3333333333335], [285.0, 2744.838509316771], [284.0, 1786.0], [283.0, 1838.0], [281.0, 1807.6666666666667], [280.0, 1833.3333333333333], [279.0, 1863.0], [277.0, 3453.0], [276.0, 2699.25], [274.0, 1956.0], [300.0, 544.0000000000001], [293.0, 3859.5], [25.0, 1045.0], [26.0, 1038.5]], "isOverall": false, "label": "Detail Game Page", "isController": false}, {"data": [[234.8666666666667, 2235.1033333333316]], "isOverall": false, "label": "Detail Game Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 300.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 275.48333333333335, "minX": 1.60814352E12, "maxY": 1023195.9833333333, "series": [{"data": [[1.60814352E12, 109589.01666666666], [1.60814358E12, 1023195.9833333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.60814352E12, 275.48333333333335], [1.60814358E12, 3119.516666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814358E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 293.66666666666663, "minX": 1.60814352E12, "maxY": 6916.235849056604, "series": [{"data": [[1.60814352E12, 3503.8409090909086], [1.60814358E12, 6916.235849056604]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60814352E12, 296.5], [1.60814358E12, 823.1711409395967]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60814352E12, 293.66666666666663], [1.60814358E12, 1074.8175438596488]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60814352E12, 544.0000000000001], [1.60814358E12, 2330.3767605633807]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814358E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 284.3125, "minX": 1.60814352E12, "maxY": 6397.287735849057, "series": [{"data": [[1.60814352E12, 2974.204545454546], [1.60814358E12, 6397.287735849057]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60814352E12, 292.0], [1.60814358E12, 666.8926174496644]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60814352E12, 288.1333333333333], [1.60814358E12, 809.0736842105267]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60814352E12, 284.3125], [1.60814358E12, 1812.1619718309867]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814358E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.60814352E12, "maxY": 1267.1462264150932, "series": [{"data": [[1.60814352E12, 452.0909090909092], [1.60814358E12, 1267.1462264150932]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60814352E12, 0.0], [1.60814358E12, 76.67449664429535]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60814352E12, 0.0], [1.60814358E12, 137.11578947368415]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60814352E12, 0.0], [1.60814358E12, 277.7112676056339]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814358E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 264.0, "minX": 1.60814352E12, "maxY": 13946.0, "series": [{"data": [[1.60814352E12, 4864.0], [1.60814358E12, 13946.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.60814352E12, 282.0], [1.60814358E12, 264.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.60814352E12, 4585.6], [1.60814358E12, 5691.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.60814352E12, 4862.9], [1.60814358E12, 13744.53]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.60814352E12, 4695.0], [1.60814358E12, 8181.0000000000055]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814358E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1766.0, "minX": 2.0, "maxY": 3098.0, "series": [{"data": [[2.0, 3098.0], [17.0, 1766.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 17.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1248.0, "minX": 2.0, "maxY": 2491.0, "series": [{"data": [[2.0, 2491.0], [17.0, 1248.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 17.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.983333333333333, "minX": 1.60814352E12, "maxY": 13.016666666666667, "series": [{"data": [[1.60814352E12, 6.983333333333333], [1.60814358E12, 13.016666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814358E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 2.0166666666666666, "minX": 1.60814352E12, "maxY": 17.983333333333334, "series": [{"data": [[1.60814352E12, 2.0166666666666666], [1.60814358E12, 17.983333333333334]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814358E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.60814352E12, "maxY": 4.966666666666667, "series": [{"data": [[1.60814352E12, 0.25], [1.60814358E12, 4.75]], "isOverall": false, "label": "Category Page-success", "isController": false}, {"data": [[1.60814352E12, 0.03333333333333333], [1.60814358E12, 4.966666666666667]], "isOverall": false, "label": "Detail Category Page-success", "isController": false}, {"data": [[1.60814352E12, 0.26666666666666666], [1.60814358E12, 4.733333333333333]], "isOverall": false, "label": "Detail Game Page-success", "isController": false}, {"data": [[1.60814352E12, 1.4666666666666666], [1.60814358E12, 3.533333333333333]], "isOverall": false, "label": "HomePage-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814358E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
