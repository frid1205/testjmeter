/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? 0 : 0;
        var yOffset = options.yaxis.mode === "time" ? 0 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 263.0, "minX": 0.0, "maxY": 16783.0, "series": [{"data": [[0.0, 1073.0], [0.1, 1073.0], [0.2, 1085.0], [0.3, 1121.0], [0.4, 1121.0], [0.5, 1139.0], [0.6, 1143.0], [0.7, 1143.0], [0.8, 1157.0], [0.9, 1174.0], [1.0, 1224.0], [1.1, 1224.0], [1.2, 1242.0], [1.3, 1256.0], [1.4, 1256.0], [1.5, 1258.0], [1.6, 1438.0], [1.7, 1438.0], [1.8, 1452.0], [1.9, 1453.0], [2.0, 1454.0], [2.1, 1454.0], [2.2, 1896.0], [2.3, 2703.0], [2.4, 2703.0], [2.5, 2814.0], [2.6, 2816.0], [2.7, 2816.0], [2.8, 2825.0], [2.9, 2843.0], [3.0, 2893.0], [3.1, 2893.0], [3.2, 2906.0], [3.3, 2919.0], [3.4, 2919.0], [3.5, 2960.0], [3.6, 2983.0], [3.7, 2983.0], [3.8, 3048.0], [3.9, 3066.0], [4.0, 3123.0], [4.1, 3123.0], [4.2, 3142.0], [4.3, 3145.0], [4.4, 3145.0], [4.5, 3380.0], [4.6, 3389.0], [4.7, 3389.0], [4.8, 3411.0], [4.9, 3415.0], [5.0, 3415.0], [5.1, 3558.0], [5.2, 3587.0], [5.3, 3633.0], [5.4, 3633.0], [5.5, 3668.0], [5.6, 3697.0], [5.7, 3697.0], [5.8, 3698.0], [5.9, 3723.0], [6.0, 3723.0], [6.1, 3736.0], [6.2, 3740.0], [6.3, 3742.0], [6.4, 3742.0], [6.5, 3762.0], [6.6, 3789.0], [6.7, 3789.0], [6.8, 3877.0], [6.9, 3891.0], [7.0, 3891.0], [7.1, 3917.0], [7.2, 3929.0], [7.3, 3929.0], [7.4, 3929.0], [7.5, 3958.0], [7.6, 3985.0], [7.7, 3985.0], [7.8, 4095.0], [7.9, 4169.0], [8.0, 4169.0], [8.1, 4179.0], [8.2, 4203.0], [8.3, 4325.0], [8.4, 4325.0], [8.5, 4329.0], [8.6, 4332.0], [8.7, 4332.0], [8.8, 4343.0], [8.9, 4343.0], [9.0, 4343.0], [9.1, 4347.0], [9.2, 4351.0], [9.3, 4354.0], [9.4, 4354.0], [9.5, 4364.0], [9.6, 4373.0], [9.7, 4373.0], [9.8, 4373.0], [9.9, 4375.0], [10.0, 4375.0], [10.1, 4389.0], [10.2, 4395.0], [10.3, 4397.0], [10.4, 4397.0], [10.5, 4398.0], [10.6, 4399.0], [10.7, 4399.0], [10.8, 4411.0], [10.9, 4442.0], [11.0, 4454.0], [11.1, 4454.0], [11.2, 4465.0], [11.3, 4477.0], [11.4, 4477.0], [11.5, 4480.0], [11.6, 4492.0], [11.7, 4492.0], [11.8, 4492.0], [11.9, 4510.0], [12.0, 4586.0], [12.1, 4586.0], [12.2, 4601.0], [12.3, 4621.0], [12.4, 4621.0], [12.5, 4625.0], [12.6, 4629.0], [12.7, 4629.0], [12.8, 4630.0], [12.9, 4632.0], [13.0, 4650.0], [13.1, 4650.0], [13.2, 4660.0], [13.3, 4667.0], [13.4, 4667.0], [13.5, 4667.0], [13.6, 4680.0], [13.7, 4680.0], [13.8, 4680.0], [13.9, 4708.0], [14.0, 4712.0], [14.1, 4712.0], [14.2, 4713.0], [14.3, 4713.0], [14.4, 4713.0], [14.5, 4741.0], [14.6, 4751.0], [14.7, 4751.0], [14.8, 4784.0], [14.9, 4904.0], [15.0, 4908.0], [15.1, 4908.0], [15.2, 4909.0], [15.3, 4919.0], [15.4, 4919.0], [15.5, 4930.0], [15.6, 4932.0], [15.7, 4932.0], [15.8, 4943.0], [15.9, 4945.0], [16.0, 4949.0], [16.1, 4949.0], [16.2, 4954.0], [16.3, 4962.0], [16.4, 4962.0], [16.5, 4983.0], [16.6, 4994.0], [16.7, 4994.0], [16.8, 5021.0], [16.9, 5095.0], [17.0, 5118.0], [17.1, 5118.0], [17.2, 5120.0], [17.3, 5126.0], [17.4, 5126.0], [17.5, 5139.0], [17.6, 5141.0], [17.7, 5141.0], [17.8, 5143.0], [17.9, 5158.0], [18.0, 5161.0], [18.1, 5161.0], [18.2, 5178.0], [18.3, 5188.0], [18.4, 5188.0], [18.5, 5191.0], [18.6, 5204.0], [18.7, 5204.0], [18.8, 5215.0], [18.9, 5215.0], [19.0, 5223.0], [19.1, 5223.0], [19.2, 5245.0], [19.3, 5252.0], [19.4, 5252.0], [19.5, 5274.0], [19.6, 5294.0], [19.7, 5294.0], [19.8, 5333.0], [19.9, 5333.0], [20.0, 5337.0], [20.1, 5337.0], [20.2, 5337.0], [20.3, 5341.0], [20.4, 5341.0], [20.5, 5345.0], [20.6, 5352.0], [20.7, 5352.0], [20.8, 5367.0], [20.9, 5368.0], [21.0, 5371.0], [21.1, 5371.0], [21.2, 5378.0], [21.3, 5389.0], [21.4, 5389.0], [21.5, 5395.0], [21.6, 5404.0], [21.7, 5404.0], [21.8, 5411.0], [21.9, 5432.0], [22.0, 5433.0], [22.1, 5433.0], [22.2, 5475.0], [22.3, 5478.0], [22.4, 5478.0], [22.5, 5480.0], [22.6, 5497.0], [22.7, 5497.0], [22.8, 5501.0], [22.9, 5506.0], [23.0, 5510.0], [23.1, 5510.0], [23.2, 5513.0], [23.3, 5514.0], [23.4, 5514.0], [23.5, 5514.0], [23.6, 5521.0], [23.7, 5521.0], [23.8, 5524.0], [23.9, 5525.0], [24.0, 5529.0], [24.1, 5529.0], [24.2, 5569.0], [24.3, 5570.0], [24.4, 5570.0], [24.5, 5573.0], [24.6, 5575.0], [24.7, 5575.0], [24.8, 5583.0], [24.9, 5587.0], [25.0, 5593.0], [25.1, 5593.0], [25.2, 5593.0], [25.3, 5598.0], [25.4, 5598.0], [25.5, 5600.0], [25.6, 5603.0], [25.7, 5603.0], [25.8, 5604.0], [25.9, 5605.0], [26.0, 5608.0], [26.1, 5608.0], [26.2, 5611.0], [26.3, 5618.0], [26.4, 5618.0], [26.5, 5630.0], [26.6, 5635.0], [26.7, 5635.0], [26.8, 5638.0], [26.9, 5639.0], [27.0, 5661.0], [27.1, 5661.0], [27.2, 5663.0], [27.3, 5665.0], [27.4, 5665.0], [27.5, 5666.0], [27.6, 5678.0], [27.7, 5678.0], [27.8, 5699.0], [27.9, 5700.0], [28.0, 5700.0], [28.1, 5700.0], [28.2, 5715.0], [28.3, 5730.0], [28.4, 5730.0], [28.5, 5735.0], [28.6, 5739.0], [28.7, 5739.0], [28.8, 5748.0], [28.9, 5751.0], [29.0, 5752.0], [29.1, 5752.0], [29.2, 5756.0], [29.3, 5756.0], [29.4, 5756.0], [29.5, 5783.0], [29.6, 5785.0], [29.7, 5785.0], [29.8, 5832.0], [29.9, 5835.0], [30.0, 5842.0], [30.1, 5842.0], [30.2, 5850.0], [30.3, 5851.0], [30.4, 5851.0], [30.5, 5851.0], [30.6, 5855.0], [30.7, 5855.0], [30.8, 5863.0], [30.9, 5867.0], [31.0, 5870.0], [31.1, 5870.0], [31.2, 5873.0], [31.3, 5874.0], [31.4, 5874.0], [31.5, 5880.0], [31.6, 5881.0], [31.7, 5881.0], [31.8, 5888.0], [31.9, 5888.0], [32.0, 5889.0], [32.1, 5889.0], [32.2, 5902.0], [32.3, 5904.0], [32.4, 5904.0], [32.5, 5917.0], [32.6, 5927.0], [32.7, 5927.0], [32.8, 5930.0], [32.9, 5931.0], [33.0, 5932.0], [33.1, 5932.0], [33.2, 5933.0], [33.3, 5939.0], [33.4, 5939.0], [33.5, 5940.0], [33.6, 5944.0], [33.7, 5944.0], [33.8, 5951.0], [33.9, 5953.0], [34.0, 5955.0], [34.1, 5955.0], [34.2, 5959.0], [34.3, 5960.0], [34.4, 5960.0], [34.5, 5961.0], [34.6, 5961.0], [34.7, 5961.0], [34.8, 5964.0], [34.9, 5968.0], [35.0, 5968.0], [35.1, 5968.0], [35.2, 5969.0], [35.3, 5970.0], [35.4, 5970.0], [35.5, 5975.0], [35.6, 5979.0], [35.7, 5979.0], [35.8, 5983.0], [35.9, 5990.0], [36.0, 5990.0], [36.1, 5990.0], [36.2, 5991.0], [36.3, 5994.0], [36.4, 5994.0], [36.5, 5994.0], [36.6, 6008.0], [36.7, 6008.0], [36.8, 6009.0], [36.9, 6017.0], [37.0, 6017.0], [37.1, 6046.0], [37.2, 6072.0], [37.3, 6079.0], [37.4, 6079.0], [37.5, 6083.0], [37.6, 6084.0], [37.7, 6084.0], [37.8, 6084.0], [37.9, 6088.0], [38.0, 6088.0], [38.1, 6108.0], [38.2, 6176.0], [38.3, 6198.0], [38.4, 6198.0], [38.5, 6211.0], [38.6, 6212.0], [38.7, 6212.0], [38.8, 6226.0], [38.9, 6229.0], [39.0, 6229.0], [39.1, 6232.0], [39.2, 6244.0], [39.3, 6246.0], [39.4, 6246.0], [39.5, 6248.0], [39.6, 6249.0], [39.7, 6249.0], [39.8, 6284.0], [39.9, 6368.0], [40.0, 6368.0], [40.1, 6370.0], [40.2, 6376.0], [40.3, 6380.0], [40.4, 6380.0], [40.5, 6381.0], [40.6, 6384.0], [40.7, 6384.0], [40.8, 6385.0], [40.9, 6390.0], [41.0, 6390.0], [41.1, 6394.0], [41.2, 6397.0], [41.3, 6412.0], [41.4, 6412.0], [41.5, 6463.0], [41.6, 6480.0], [41.7, 6480.0], [41.8, 6503.0], [41.9, 6505.0], [42.0, 6505.0], [42.1, 6525.0], [42.2, 6542.0], [42.3, 6563.0], [42.4, 6563.0], [42.5, 6564.0], [42.6, 6608.0], [42.7, 6608.0], [42.8, 6681.0], [42.9, 6845.0], [43.0, 6845.0], [43.1, 7893.0], [43.2, 7927.0], [43.3, 7930.0], [43.4, 7930.0], [43.5, 7983.0], [43.6, 8022.0], [43.7, 8022.0], [43.8, 8034.0], [43.9, 8037.0], [44.0, 8037.0], [44.1, 8043.0], [44.2, 8060.0], [44.3, 8083.0], [44.4, 8083.0], [44.5, 8086.0], [44.6, 8166.0], [44.7, 8166.0], [44.8, 8202.0], [44.9, 8219.0], [45.0, 8219.0], [45.1, 8219.0], [45.2, 8223.0], [45.3, 8227.0], [45.4, 8227.0], [45.5, 8244.0], [45.6, 8254.0], [45.7, 8254.0], [45.8, 8256.0], [45.9, 8261.0], [46.0, 8261.0], [46.1, 8264.0], [46.2, 8279.0], [46.3, 8279.0], [46.4, 8279.0], [46.5, 8291.0], [46.6, 8297.0], [46.7, 8297.0], [46.8, 8301.0], [46.9, 8306.0], [47.0, 8306.0], [47.1, 8307.0], [47.2, 8315.0], [47.3, 8322.0], [47.4, 8322.0], [47.5, 8323.0], [47.6, 8326.0], [47.7, 8326.0], [47.8, 8333.0], [47.9, 8339.0], [48.0, 8339.0], [48.1, 8339.0], [48.2, 8353.0], [48.3, 8354.0], [48.4, 8354.0], [48.5, 8369.0], [48.6, 8373.0], [48.7, 8373.0], [48.8, 8378.0], [48.9, 8381.0], [49.0, 8381.0], [49.1, 8391.0], [49.2, 8403.0], [49.3, 8412.0], [49.4, 8412.0], [49.5, 8422.0], [49.6, 8427.0], [49.7, 8427.0], [49.8, 8428.0], [49.9, 8432.0], [50.0, 8432.0], [50.1, 8436.0], [50.2, 8443.0], [50.3, 8451.0], [50.4, 8451.0], [50.5, 8455.0], [50.6, 8460.0], [50.7, 8460.0], [50.8, 8477.0], [50.9, 8481.0], [51.0, 8481.0], [51.1, 8487.0], [51.2, 8489.0], [51.3, 8496.0], [51.4, 8496.0], [51.5, 8499.0], [51.6, 8506.0], [51.7, 8506.0], [51.8, 8508.0], [51.9, 8516.0], [52.0, 8516.0], [52.1, 8517.0], [52.2, 8521.0], [52.3, 8527.0], [52.4, 8527.0], [52.5, 8529.0], [52.6, 8535.0], [52.7, 8535.0], [52.8, 8535.0], [52.9, 8583.0], [53.0, 8583.0], [53.1, 8586.0], [53.2, 8639.0], [53.3, 8659.0], [53.4, 8659.0], [53.5, 8809.0], [53.6, 8810.0], [53.7, 8810.0], [53.8, 8832.0], [53.9, 8839.0], [54.0, 8839.0], [54.1, 8844.0], [54.2, 8849.0], [54.3, 8853.0], [54.4, 8853.0], [54.5, 8860.0], [54.6, 8874.0], [54.7, 8874.0], [54.8, 8887.0], [54.9, 8891.0], [55.0, 8891.0], [55.1, 8893.0], [55.2, 8902.0], [55.3, 8922.0], [55.4, 8922.0], [55.5, 8923.0], [55.6, 8923.0], [55.7, 8923.0], [55.8, 8924.0], [55.9, 8935.0], [56.0, 8935.0], [56.1, 8943.0], [56.2, 8949.0], [56.3, 8956.0], [56.4, 8956.0], [56.5, 8963.0], [56.6, 8985.0], [56.7, 8985.0], [56.8, 9004.0], [56.9, 9014.0], [57.0, 9014.0], [57.1, 9015.0], [57.2, 9020.0], [57.3, 9029.0], [57.4, 9029.0], [57.5, 9055.0], [57.6, 9072.0], [57.7, 9072.0], [57.8, 9109.0], [57.9, 9147.0], [58.0, 9147.0], [58.1, 9148.0], [58.2, 9354.0], [58.3, 9394.0], [58.4, 9394.0], [58.5, 9464.0], [58.6, 9475.0], [58.7, 9475.0], [58.8, 9514.0], [58.9, 9526.0], [59.0, 9526.0], [59.1, 9528.0], [59.2, 9531.0], [59.3, 9539.0], [59.4, 9539.0], [59.5, 9576.0], [59.6, 9614.0], [59.7, 9614.0], [59.8, 9617.0], [59.9, 9633.0], [60.0, 9633.0], [60.1, 9646.0], [60.2, 9656.0], [60.3, 9659.0], [60.4, 9659.0], [60.5, 9662.0], [60.6, 9672.0], [60.7, 9672.0], [60.8, 9684.0], [60.9, 9689.0], [61.0, 9689.0], [61.1, 9718.0], [61.2, 9720.0], [61.3, 9727.0], [61.4, 9727.0], [61.5, 9741.0], [61.6, 9752.0], [61.7, 9752.0], [61.8, 9754.0], [61.9, 9755.0], [62.0, 9755.0], [62.1, 9755.0], [62.2, 9757.0], [62.3, 9760.0], [62.4, 9760.0], [62.5, 10198.0], [62.6, 10266.0], [62.7, 10266.0], [62.8, 10266.0], [62.9, 10332.0], [63.0, 10332.0], [63.1, 10356.0], [63.2, 10369.0], [63.3, 10378.0], [63.4, 10378.0], [63.5, 10385.0], [63.6, 10389.0], [63.7, 10389.0], [63.8, 10402.0], [63.9, 10405.0], [64.0, 10405.0], [64.1, 10423.0], [64.2, 10423.0], [64.3, 10433.0], [64.4, 10433.0], [64.5, 10433.0], [64.6, 10442.0], [64.7, 10442.0], [64.8, 10444.0], [64.9, 10448.0], [65.0, 10448.0], [65.1, 10468.0], [65.2, 10488.0], [65.3, 10498.0], [65.4, 10498.0], [65.5, 10523.0], [65.6, 10544.0], [65.7, 10544.0], [65.8, 10570.0], [65.9, 10580.0], [66.0, 10580.0], [66.1, 10600.0], [66.2, 10627.0], [66.3, 10661.0], [66.4, 10661.0], [66.5, 10662.0], [66.6, 10678.0], [66.7, 10678.0], [66.8, 10713.0], [66.9, 10715.0], [67.0, 10715.0], [67.1, 10727.0], [67.2, 10765.0], [67.3, 10782.0], [67.4, 10782.0], [67.5, 10811.0], [67.6, 10856.0], [67.7, 10856.0], [67.8, 10860.0], [67.9, 10863.0], [68.0, 10863.0], [68.1, 10868.0], [68.2, 10875.0], [68.3, 10880.0], [68.4, 10880.0], [68.5, 10900.0], [68.6, 10908.0], [68.7, 10908.0], [68.8, 10913.0], [68.9, 10918.0], [69.0, 10918.0], [69.1, 10924.0], [69.2, 10945.0], [69.3, 10948.0], [69.4, 10948.0], [69.5, 10968.0], [69.6, 10981.0], [69.7, 10981.0], [69.8, 11000.0], [69.9, 11005.0], [70.0, 11005.0], [70.1, 11011.0], [70.2, 11019.0], [70.3, 11029.0], [70.4, 11029.0], [70.5, 11044.0], [70.6, 11046.0], [70.7, 11046.0], [70.8, 11048.0], [70.9, 11060.0], [71.0, 11060.0], [71.1, 11130.0], [71.2, 11133.0], [71.3, 11137.0], [71.4, 11137.0], [71.5, 11155.0], [71.6, 11375.0], [71.7, 11375.0], [71.8, 11550.0], [71.9, 11701.0], [72.0, 11701.0], [72.1, 11738.0], [72.2, 11782.0], [72.3, 11788.0], [72.4, 11788.0], [72.5, 11807.0], [72.6, 11810.0], [72.7, 11810.0], [72.8, 11826.0], [72.9, 11837.0], [73.0, 11837.0], [73.1, 11852.0], [73.2, 11868.0], [73.3, 11885.0], [73.4, 11885.0], [73.5, 11886.0], [73.6, 11908.0], [73.7, 11908.0], [73.8, 11926.0], [73.9, 11974.0], [74.0, 11974.0], [74.1, 11992.0], [74.2, 12009.0], [74.3, 14175.0], [74.4, 14175.0], [74.5, 14179.0], [74.6, 14280.0], [74.7, 14280.0], [74.8, 14321.0], [74.9, 14331.0], [75.0, 14331.0], [75.1, 14373.0], [75.2, 14392.0], [75.3, 14410.0], [75.4, 14410.0], [75.5, 14417.0], [75.6, 14418.0], [75.7, 14418.0], [75.8, 14420.0], [75.9, 14422.0], [76.0, 14422.0], [76.1, 14423.0], [76.2, 14427.0], [76.3, 14431.0], [76.4, 14431.0], [76.5, 14443.0], [76.6, 14455.0], [76.7, 14455.0], [76.8, 14460.0], [76.9, 14474.0], [77.0, 14474.0], [77.1, 14474.0], [77.2, 14475.0], [77.3, 14483.0], [77.4, 14483.0], [77.5, 14483.0], [77.6, 14483.0], [77.7, 14483.0], [77.8, 14484.0], [77.9, 14485.0], [78.0, 14485.0], [78.1, 14486.0], [78.2, 14491.0], [78.3, 14492.0], [78.4, 14492.0], [78.5, 14500.0], [78.6, 14500.0], [78.7, 14500.0], [78.8, 14502.0], [78.9, 14503.0], [79.0, 14503.0], [79.1, 14506.0], [79.2, 14510.0], [79.3, 14510.0], [79.4, 14510.0], [79.5, 14512.0], [79.6, 14512.0], [79.7, 14512.0], [79.8, 14514.0], [79.9, 14521.0], [80.0, 14521.0], [80.1, 14526.0], [80.2, 14526.0], [80.3, 14529.0], [80.4, 14529.0], [80.5, 14533.0], [80.6, 14535.0], [80.7, 14535.0], [80.8, 14537.0], [80.9, 14540.0], [81.0, 14540.0], [81.1, 14551.0], [81.2, 14557.0], [81.3, 14578.0], [81.4, 14578.0], [81.5, 14578.0], [81.6, 14580.0], [81.7, 14580.0], [81.8, 14581.0], [81.9, 14581.0], [82.0, 14581.0], [82.1, 14583.0], [82.2, 14585.0], [82.3, 14590.0], [82.4, 14590.0], [82.5, 14594.0], [82.6, 14595.0], [82.7, 14595.0], [82.8, 14611.0], [82.9, 14621.0], [83.0, 14621.0], [83.1, 14624.0], [83.2, 14864.0], [83.3, 14872.0], [83.4, 14872.0], [83.5, 14876.0], [83.6, 14885.0], [83.7, 14885.0], [83.8, 14895.0], [83.9, 14897.0], [84.0, 14897.0], [84.1, 14901.0], [84.2, 14920.0], [84.3, 14921.0], [84.4, 14921.0], [84.5, 14922.0], [84.6, 14924.0], [84.7, 14924.0], [84.8, 14926.0], [84.9, 14928.0], [85.0, 14928.0], [85.1, 14932.0], [85.2, 14935.0], [85.3, 14937.0], [85.4, 14937.0], [85.5, 14943.0], [85.6, 14952.0], [85.7, 14952.0], [85.8, 14966.0], [85.9, 14980.0], [86.0, 14980.0], [86.1, 14988.0], [86.2, 14992.0], [86.3, 15002.0], [86.4, 15002.0], [86.5, 15010.0], [86.6, 15011.0], [86.7, 15011.0], [86.8, 15023.0], [86.9, 15046.0], [87.0, 15046.0], [87.1, 15061.0], [87.2, 15077.0], [87.3, 15101.0], [87.4, 15101.0], [87.5, 15105.0], [87.6, 15134.0], [87.7, 15134.0], [87.8, 15137.0], [87.9, 15153.0], [88.0, 15467.0], [88.1, 15467.0], [88.2, 15483.0], [88.3, 15485.0], [88.4, 15485.0], [88.5, 15500.0], [88.6, 15507.0], [88.7, 15507.0], [88.8, 15512.0], [88.9, 15513.0], [89.0, 15524.0], [89.1, 15524.0], [89.2, 15529.0], [89.3, 15542.0], [89.4, 15542.0], [89.5, 15586.0], [89.6, 15586.0], [89.7, 15586.0], [89.8, 15610.0], [89.9, 15611.0], [90.0, 15611.0], [90.1, 15611.0], [90.2, 15613.0], [90.3, 15614.0], [90.4, 15614.0], [90.5, 15618.0], [90.6, 15620.0], [90.7, 15620.0], [90.8, 15623.0], [90.9, 16466.0], [91.0, 16470.0], [91.1, 16470.0], [91.2, 16484.0], [91.3, 16497.0], [91.4, 16497.0], [91.5, 16502.0], [91.6, 16502.0], [91.7, 16502.0], [91.8, 16505.0], [91.9, 16507.0], [92.0, 16509.0], [92.1, 16509.0], [92.2, 16509.0], [92.3, 16510.0], [92.4, 16510.0], [92.5, 16510.0], [92.6, 16519.0], [92.7, 16519.0], [92.8, 16526.0], [92.9, 16527.0], [93.0, 16528.0], [93.1, 16528.0], [93.2, 16534.0], [93.3, 16537.0], [93.4, 16537.0], [93.5, 16548.0], [93.6, 16548.0], [93.7, 16548.0], [93.8, 16550.0], [93.9, 16554.0], [94.0, 16554.0], [94.1, 16554.0], [94.2, 16555.0], [94.3, 16559.0], [94.4, 16559.0], [94.5, 16560.0], [94.6, 16569.0], [94.7, 16569.0], [94.8, 16570.0], [94.9, 16572.0], [95.0, 16578.0], [95.1, 16578.0], [95.2, 16582.0], [95.3, 16592.0], [95.4, 16592.0], [95.5, 16597.0], [95.6, 16599.0], [95.7, 16599.0], [95.8, 16602.0], [95.9, 16608.0], [96.0, 16614.0], [96.1, 16614.0], [96.2, 16615.0], [96.3, 16615.0], [96.4, 16615.0], [96.5, 16622.0], [96.6, 16625.0], [96.7, 16625.0], [96.8, 16625.0], [96.9, 16626.0], [97.0, 16631.0], [97.1, 16631.0], [97.2, 16633.0], [97.3, 16636.0], [97.4, 16636.0], [97.5, 16637.0], [97.6, 16638.0], [97.7, 16638.0], [97.8, 16644.0], [97.9, 16645.0], [98.0, 16649.0], [98.1, 16649.0], [98.2, 16650.0], [98.3, 16651.0], [98.4, 16651.0], [98.5, 16657.0], [98.6, 16657.0], [98.7, 16657.0], [98.8, 16674.0], [98.9, 16674.0], [99.0, 16676.0], [99.1, 16676.0], [99.2, 16684.0], [99.3, 16685.0], [99.4, 16685.0], [99.5, 16710.0], [99.6, 16716.0], [99.7, 16716.0], [99.8, 16763.0], [99.9, 16783.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 264.0], [0.1, 264.0], [0.2, 264.0], [0.3, 264.0], [0.4, 264.0], [0.5, 265.0], [0.6, 265.0], [0.7, 265.0], [0.8, 265.0], [0.9, 265.0], [1.0, 265.0], [1.1, 265.0], [1.2, 265.0], [1.3, 265.0], [1.4, 265.0], [1.5, 266.0], [1.6, 266.0], [1.7, 266.0], [1.8, 266.0], [1.9, 266.0], [2.0, 266.0], [2.1, 266.0], [2.2, 267.0], [2.3, 267.0], [2.4, 267.0], [2.5, 267.0], [2.6, 267.0], [2.7, 267.0], [2.8, 267.0], [2.9, 267.0], [3.0, 267.0], [3.1, 267.0], [3.2, 267.0], [3.3, 268.0], [3.4, 268.0], [3.5, 268.0], [3.6, 268.0], [3.7, 268.0], [3.8, 268.0], [3.9, 268.0], [4.0, 268.0], [4.1, 268.0], [4.2, 268.0], [4.3, 268.0], [4.4, 268.0], [4.5, 268.0], [4.6, 268.0], [4.7, 268.0], [4.8, 269.0], [4.9, 269.0], [5.0, 269.0], [5.1, 269.0], [5.2, 269.0], [5.3, 269.0], [5.4, 269.0], [5.5, 269.0], [5.6, 269.0], [5.7, 269.0], [5.8, 269.0], [5.9, 269.0], [6.0, 269.0], [6.1, 269.0], [6.2, 269.0], [6.3, 270.0], [6.4, 270.0], [6.5, 270.0], [6.6, 270.0], [6.7, 270.0], [6.8, 270.0], [6.9, 270.0], [7.0, 270.0], [7.1, 270.0], [7.2, 270.0], [7.3, 270.0], [7.4, 270.0], [7.5, 270.0], [7.6, 270.0], [7.7, 270.0], [7.8, 270.0], [7.9, 270.0], [8.0, 270.0], [8.1, 270.0], [8.2, 271.0], [8.3, 271.0], [8.4, 271.0], [8.5, 271.0], [8.6, 271.0], [8.7, 271.0], [8.8, 271.0], [8.9, 271.0], [9.0, 272.0], [9.1, 272.0], [9.2, 272.0], [9.3, 272.0], [9.4, 272.0], [9.5, 272.0], [9.6, 272.0], [9.7, 272.0], [9.8, 273.0], [9.9, 273.0], [10.0, 273.0], [10.1, 273.0], [10.2, 273.0], [10.3, 273.0], [10.4, 273.0], [10.5, 273.0], [10.6, 274.0], [10.7, 274.0], [10.8, 274.0], [10.9, 274.0], [11.0, 274.0], [11.1, 274.0], [11.2, 274.0], [11.3, 275.0], [11.4, 275.0], [11.5, 275.0], [11.6, 275.0], [11.7, 275.0], [11.8, 275.0], [11.9, 275.0], [12.0, 275.0], [12.1, 275.0], [12.2, 276.0], [12.3, 276.0], [12.4, 276.0], [12.5, 276.0], [12.6, 276.0], [12.7, 276.0], [12.8, 276.0], [12.9, 277.0], [13.0, 277.0], [13.1, 277.0], [13.2, 277.0], [13.3, 277.0], [13.4, 277.0], [13.5, 277.0], [13.6, 277.0], [13.7, 277.0], [13.8, 278.0], [13.9, 278.0], [14.0, 278.0], [14.1, 278.0], [14.2, 279.0], [14.3, 279.0], [14.4, 279.0], [14.5, 279.0], [14.6, 279.0], [14.7, 279.0], [14.8, 279.0], [14.9, 279.0], [15.0, 279.0], [15.1, 279.0], [15.2, 280.0], [15.3, 280.0], [15.4, 280.0], [15.5, 280.0], [15.6, 281.0], [15.7, 281.0], [15.8, 281.0], [15.9, 281.0], [16.0, 282.0], [16.1, 282.0], [16.2, 282.0], [16.3, 283.0], [16.4, 283.0], [16.5, 283.0], [16.6, 283.0], [16.7, 283.0], [16.8, 284.0], [16.9, 284.0], [17.0, 285.0], [17.1, 285.0], [17.2, 285.0], [17.3, 285.0], [17.4, 285.0], [17.5, 285.0], [17.6, 285.0], [17.7, 285.0], [17.8, 286.0], [17.9, 286.0], [18.0, 287.0], [18.1, 287.0], [18.2, 287.0], [18.3, 287.0], [18.4, 287.0], [18.5, 288.0], [18.6, 288.0], [18.7, 288.0], [18.8, 289.0], [18.9, 289.0], [19.0, 289.0], [19.1, 289.0], [19.2, 290.0], [19.3, 291.0], [19.4, 291.0], [19.5, 291.0], [19.6, 291.0], [19.7, 291.0], [19.8, 291.0], [19.9, 291.0], [20.0, 292.0], [20.1, 292.0], [20.2, 292.0], [20.3, 292.0], [20.4, 292.0], [20.5, 292.0], [20.6, 292.0], [20.7, 292.0], [20.8, 293.0], [20.9, 293.0], [21.0, 294.0], [21.1, 294.0], [21.2, 294.0], [21.3, 295.0], [21.4, 295.0], [21.5, 295.0], [21.6, 295.0], [21.7, 295.0], [21.8, 295.0], [21.9, 296.0], [22.0, 297.0], [22.1, 297.0], [22.2, 297.0], [22.3, 297.0], [22.4, 297.0], [22.5, 298.0], [22.6, 298.0], [22.7, 298.0], [22.8, 298.0], [22.9, 299.0], [23.0, 299.0], [23.1, 299.0], [23.2, 301.0], [23.3, 301.0], [23.4, 301.0], [23.5, 301.0], [23.6, 302.0], [23.7, 302.0], [23.8, 302.0], [23.9, 302.0], [24.0, 304.0], [24.1, 304.0], [24.2, 304.0], [24.3, 305.0], [24.4, 305.0], [24.5, 305.0], [24.6, 306.0], [24.7, 306.0], [24.8, 306.0], [24.9, 306.0], [25.0, 306.0], [25.1, 306.0], [25.2, 307.0], [25.3, 308.0], [25.4, 308.0], [25.5, 308.0], [25.6, 309.0], [25.7, 309.0], [25.8, 309.0], [25.9, 310.0], [26.0, 311.0], [26.1, 311.0], [26.2, 312.0], [26.3, 312.0], [26.4, 312.0], [26.5, 312.0], [26.6, 313.0], [26.7, 313.0], [26.8, 313.0], [26.9, 313.0], [27.0, 314.0], [27.1, 314.0], [27.2, 315.0], [27.3, 315.0], [27.4, 315.0], [27.5, 315.0], [27.6, 316.0], [27.7, 316.0], [27.8, 317.0], [27.9, 318.0], [28.0, 318.0], [28.1, 318.0], [28.2, 319.0], [28.3, 319.0], [28.4, 319.0], [28.5, 320.0], [28.6, 320.0], [28.7, 320.0], [28.8, 320.0], [28.9, 320.0], [29.0, 320.0], [29.1, 320.0], [29.2, 321.0], [29.3, 321.0], [29.4, 321.0], [29.5, 321.0], [29.6, 322.0], [29.7, 322.0], [29.8, 322.0], [29.9, 322.0], [30.0, 323.0], [30.1, 323.0], [30.2, 324.0], [30.3, 324.0], [30.4, 324.0], [30.5, 325.0], [30.6, 325.0], [30.7, 325.0], [30.8, 325.0], [30.9, 325.0], [31.0, 325.0], [31.1, 325.0], [31.2, 326.0], [31.3, 326.0], [31.4, 326.0], [31.5, 327.0], [31.6, 327.0], [31.7, 327.0], [31.8, 327.0], [31.9, 328.0], [32.0, 328.0], [32.1, 328.0], [32.2, 329.0], [32.3, 329.0], [32.4, 329.0], [32.5, 329.0], [32.6, 330.0], [32.7, 330.0], [32.8, 330.0], [32.9, 331.0], [33.0, 332.0], [33.1, 332.0], [33.2, 332.0], [33.3, 334.0], [33.4, 334.0], [33.5, 334.0], [33.6, 334.0], [33.7, 334.0], [33.8, 336.0], [33.9, 336.0], [34.0, 336.0], [34.1, 336.0], [34.2, 336.0], [34.3, 336.0], [34.4, 336.0], [34.5, 336.0], [34.6, 337.0], [34.7, 337.0], [34.8, 337.0], [34.9, 337.0], [35.0, 337.0], [35.1, 337.0], [35.2, 337.0], [35.3, 337.0], [35.4, 337.0], [35.5, 337.0], [35.6, 338.0], [35.7, 338.0], [35.8, 338.0], [35.9, 338.0], [36.0, 338.0], [36.1, 338.0], [36.2, 338.0], [36.3, 339.0], [36.4, 339.0], [36.5, 339.0], [36.6, 339.0], [36.7, 339.0], [36.8, 339.0], [36.9, 339.0], [37.0, 340.0], [37.1, 340.0], [37.2, 340.0], [37.3, 340.0], [37.4, 340.0], [37.5, 340.0], [37.6, 340.0], [37.7, 340.0], [37.8, 341.0], [37.9, 341.0], [38.0, 341.0], [38.1, 341.0], [38.2, 342.0], [38.3, 342.0], [38.4, 342.0], [38.5, 342.0], [38.6, 343.0], [38.7, 343.0], [38.8, 343.0], [38.9, 345.0], [39.0, 347.0], [39.1, 347.0], [39.2, 347.0], [39.3, 348.0], [39.4, 348.0], [39.5, 348.0], [39.6, 349.0], [39.7, 349.0], [39.8, 349.0], [39.9, 350.0], [40.0, 350.0], [40.1, 350.0], [40.2, 350.0], [40.3, 351.0], [40.4, 351.0], [40.5, 353.0], [40.6, 353.0], [40.7, 353.0], [40.8, 354.0], [40.9, 354.0], [41.0, 356.0], [41.1, 356.0], [41.2, 357.0], [41.3, 357.0], [41.4, 357.0], [41.5, 358.0], [41.6, 358.0], [41.7, 358.0], [41.8, 359.0], [41.9, 364.0], [42.0, 364.0], [42.1, 364.0], [42.2, 364.0], [42.3, 365.0], [42.4, 365.0], [42.5, 365.0], [42.6, 366.0], [42.7, 366.0], [42.8, 367.0], [42.9, 367.0], [43.0, 367.0], [43.1, 367.0], [43.2, 369.0], [43.3, 369.0], [43.4, 369.0], [43.5, 370.0], [43.6, 373.0], [43.7, 373.0], [43.8, 373.0], [43.9, 374.0], [44.0, 375.0], [44.1, 375.0], [44.2, 376.0], [44.3, 376.0], [44.4, 376.0], [44.5, 378.0], [44.6, 380.0], [44.7, 380.0], [44.8, 380.0], [44.9, 382.0], [45.0, 382.0], [45.1, 382.0], [45.2, 383.0], [45.3, 386.0], [45.4, 386.0], [45.5, 386.0], [45.6, 390.0], [45.7, 390.0], [45.8, 392.0], [45.9, 392.0], [46.0, 393.0], [46.1, 393.0], [46.2, 394.0], [46.3, 395.0], [46.4, 395.0], [46.5, 397.0], [46.6, 398.0], [46.7, 398.0], [46.8, 399.0], [46.9, 400.0], [47.0, 400.0], [47.1, 403.0], [47.2, 403.0], [47.3, 406.0], [47.4, 406.0], [47.5, 406.0], [47.6, 407.0], [47.7, 407.0], [47.8, 407.0], [47.9, 408.0], [48.0, 408.0], [48.1, 409.0], [48.2, 412.0], [48.3, 412.0], [48.4, 412.0], [48.5, 412.0], [48.6, 414.0], [48.7, 414.0], [48.8, 414.0], [48.9, 415.0], [49.0, 415.0], [49.1, 416.0], [49.2, 416.0], [49.3, 417.0], [49.4, 417.0], [49.5, 417.0], [49.6, 417.0], [49.7, 417.0], [49.8, 420.0], [49.9, 420.0], [50.0, 420.0], [50.1, 421.0], [50.2, 423.0], [50.3, 423.0], [50.4, 423.0], [50.5, 423.0], [50.6, 425.0], [50.7, 425.0], [50.8, 425.0], [50.9, 426.0], [51.0, 426.0], [51.1, 426.0], [51.2, 426.0], [51.3, 427.0], [51.4, 427.0], [51.5, 429.0], [51.6, 429.0], [51.7, 429.0], [51.8, 433.0], [51.9, 434.0], [52.0, 434.0], [52.1, 438.0], [52.2, 441.0], [52.3, 442.0], [52.4, 442.0], [52.5, 443.0], [52.6, 446.0], [52.7, 446.0], [52.8, 448.0], [52.9, 448.0], [53.0, 448.0], [53.1, 450.0], [53.2, 453.0], [53.3, 454.0], [53.4, 454.0], [53.5, 457.0], [53.6, 457.0], [53.7, 457.0], [53.8, 459.0], [53.9, 460.0], [54.0, 460.0], [54.1, 463.0], [54.2, 466.0], [54.3, 468.0], [54.4, 468.0], [54.5, 469.0], [54.6, 469.0], [54.7, 469.0], [54.8, 470.0], [54.9, 474.0], [55.0, 474.0], [55.1, 475.0], [55.2, 480.0], [55.3, 481.0], [55.4, 481.0], [55.5, 484.0], [55.6, 494.0], [55.7, 494.0], [55.8, 500.0], [55.9, 500.0], [56.0, 500.0], [56.1, 502.0], [56.2, 511.0], [56.3, 512.0], [56.4, 512.0], [56.5, 514.0], [56.6, 514.0], [56.7, 514.0], [56.8, 516.0], [56.9, 526.0], [57.0, 526.0], [57.1, 528.0], [57.2, 528.0], [57.3, 541.0], [57.4, 541.0], [57.5, 541.0], [57.6, 541.0], [57.7, 541.0], [57.8, 548.0], [57.9, 549.0], [58.0, 549.0], [58.1, 552.0], [58.2, 553.0], [58.3, 555.0], [58.4, 555.0], [58.5, 562.0], [58.6, 565.0], [58.7, 565.0], [58.8, 565.0], [58.9, 567.0], [59.0, 567.0], [59.1, 568.0], [59.2, 568.0], [59.3, 569.0], [59.4, 569.0], [59.5, 570.0], [59.6, 573.0], [59.7, 573.0], [59.8, 574.0], [59.9, 575.0], [60.0, 575.0], [60.1, 578.0], [60.2, 580.0], [60.3, 581.0], [60.4, 581.0], [60.5, 583.0], [60.6, 585.0], [60.7, 585.0], [60.8, 586.0], [60.9, 589.0], [61.0, 589.0], [61.1, 591.0], [61.2, 593.0], [61.3, 594.0], [61.4, 594.0], [61.5, 595.0], [61.6, 596.0], [61.7, 596.0], [61.8, 598.0], [61.9, 603.0], [62.0, 603.0], [62.1, 605.0], [62.2, 606.0], [62.3, 617.0], [62.4, 617.0], [62.5, 620.0], [62.6, 622.0], [62.7, 622.0], [62.8, 639.0], [62.9, 647.0], [63.0, 647.0], [63.1, 716.0], [63.2, 931.0], [63.3, 974.0], [63.4, 974.0], [63.5, 1033.0], [63.6, 1034.0], [63.7, 1034.0], [63.8, 1035.0], [63.9, 1037.0], [64.0, 1037.0], [64.1, 1037.0], [64.2, 1038.0], [64.3, 1038.0], [64.4, 1038.0], [64.5, 1040.0], [64.6, 1041.0], [64.7, 1041.0], [64.8, 1041.0], [64.9, 1041.0], [65.0, 1041.0], [65.1, 1041.0], [65.2, 1042.0], [65.3, 1043.0], [65.4, 1043.0], [65.5, 1044.0], [65.6, 1045.0], [65.7, 1045.0], [65.8, 1045.0], [65.9, 1045.0], [66.0, 1045.0], [66.1, 1046.0], [66.2, 1049.0], [66.3, 1050.0], [66.4, 1050.0], [66.5, 1050.0], [66.6, 1052.0], [66.7, 1052.0], [66.8, 1053.0], [66.9, 1054.0], [67.0, 1054.0], [67.1, 1055.0], [67.2, 1055.0], [67.3, 1058.0], [67.4, 1058.0], [67.5, 1059.0], [67.6, 1060.0], [67.7, 1060.0], [67.8, 1061.0], [67.9, 1065.0], [68.0, 1065.0], [68.1, 1069.0], [68.2, 1071.0], [68.3, 1072.0], [68.4, 1072.0], [68.5, 1073.0], [68.6, 1077.0], [68.7, 1077.0], [68.8, 1078.0], [68.9, 1078.0], [69.0, 1078.0], [69.1, 1084.0], [69.2, 1085.0], [69.3, 1088.0], [69.4, 1088.0], [69.5, 1089.0], [69.6, 1093.0], [69.7, 1093.0], [69.8, 1095.0], [69.9, 1096.0], [70.0, 1096.0], [70.1, 1100.0], [70.2, 1108.0], [70.3, 1110.0], [70.4, 1110.0], [70.5, 1116.0], [70.6, 1119.0], [70.7, 1119.0], [70.8, 1190.0], [70.9, 1197.0], [71.0, 1197.0], [71.1, 1218.0], [71.2, 1246.0], [71.3, 1279.0], [71.4, 1279.0], [71.5, 1284.0], [71.6, 1286.0], [71.7, 1286.0], [71.8, 1301.0], [71.9, 1305.0], [72.0, 1305.0], [72.1, 1324.0], [72.2, 1326.0], [72.3, 1348.0], [72.4, 1348.0], [72.5, 1354.0], [72.6, 1366.0], [72.7, 1366.0], [72.8, 1370.0], [72.9, 1377.0], [73.0, 1377.0], [73.1, 1380.0], [73.2, 1394.0], [73.3, 1395.0], [73.4, 1395.0], [73.5, 1402.0], [73.6, 1403.0], [73.7, 1403.0], [73.8, 1412.0], [73.9, 1413.0], [74.0, 1413.0], [74.1, 1413.0], [74.2, 1414.0], [74.3, 1416.0], [74.4, 1416.0], [74.5, 1424.0], [74.6, 1427.0], [74.7, 1427.0], [74.8, 1427.0], [74.9, 1429.0], [75.0, 1429.0], [75.1, 1430.0], [75.2, 1436.0], [75.3, 1437.0], [75.4, 1437.0], [75.5, 1442.0], [75.6, 1446.0], [75.7, 1446.0], [75.8, 1457.0], [75.9, 1465.0], [76.0, 1465.0], [76.1, 1466.0], [76.2, 1466.0], [76.3, 1468.0], [76.4, 1468.0], [76.5, 1469.0], [76.6, 1471.0], [76.7, 1471.0], [76.8, 1473.0], [76.9, 1487.0], [77.0, 1489.0], [77.1, 1489.0], [77.2, 1490.0], [77.3, 1490.0], [77.4, 1490.0], [77.5, 1492.0], [77.6, 1498.0], [77.7, 1498.0], [77.8, 1500.0], [77.9, 1500.0], [78.0, 1503.0], [78.1, 1503.0], [78.2, 1506.0], [78.3, 1508.0], [78.4, 1508.0], [78.5, 1510.0], [78.6, 1513.0], [78.7, 1513.0], [78.8, 1525.0], [78.9, 1527.0], [79.0, 1530.0], [79.1, 1530.0], [79.2, 1531.0], [79.3, 1538.0], [79.4, 1538.0], [79.5, 1543.0], [79.6, 1555.0], [79.7, 1555.0], [79.8, 1556.0], [79.9, 1557.0], [80.0, 1571.0], [80.1, 1571.0], [80.2, 1580.0], [80.3, 1582.0], [80.4, 1582.0], [80.5, 1583.0], [80.6, 1593.0], [80.7, 1593.0], [80.8, 1593.0], [80.9, 1596.0], [81.0, 1596.0], [81.1, 1596.0], [81.2, 1602.0], [81.3, 1608.0], [81.4, 1608.0], [81.5, 1616.0], [81.6, 1619.0], [81.7, 1619.0], [81.8, 1626.0], [81.9, 1635.0], [82.0, 1635.0], [82.1, 1635.0], [82.2, 1636.0], [82.3, 1648.0], [82.4, 1648.0], [82.5, 1650.0], [82.6, 1653.0], [82.7, 1653.0], [82.8, 1653.0], [82.9, 1653.0], [83.0, 1655.0], [83.1, 1655.0], [83.2, 1656.0], [83.3, 1661.0], [83.4, 1661.0], [83.5, 1664.0], [83.6, 1680.0], [83.7, 1680.0], [83.8, 1680.0], [83.9, 1682.0], [84.0, 1682.0], [84.1, 1682.0], [84.2, 1683.0], [84.3, 1685.0], [84.4, 1685.0], [84.5, 1692.0], [84.6, 1693.0], [84.7, 1693.0], [84.8, 1695.0], [84.9, 1698.0], [85.0, 1698.0], [85.1, 1698.0], [85.2, 1699.0], [85.3, 1699.0], [85.4, 1699.0], [85.5, 1702.0], [85.6, 1707.0], [85.7, 1707.0], [85.8, 1713.0], [85.9, 1717.0], [86.0, 1718.0], [86.1, 1718.0], [86.2, 1721.0], [86.3, 1722.0], [86.4, 1722.0], [86.5, 1726.0], [86.6, 1732.0], [86.7, 1732.0], [86.8, 1754.0], [86.9, 1755.0], [87.0, 1759.0], [87.1, 1759.0], [87.2, 1761.0], [87.3, 1765.0], [87.4, 1765.0], [87.5, 1766.0], [87.6, 1769.0], [87.7, 1769.0], [87.8, 1771.0], [87.9, 1775.0], [88.0, 1775.0], [88.1, 1775.0], [88.2, 1776.0], [88.3, 1776.0], [88.4, 1776.0], [88.5, 1780.0], [88.6, 1793.0], [88.7, 1793.0], [88.8, 1795.0], [88.9, 1796.0], [89.0, 1799.0], [89.1, 1799.0], [89.2, 1800.0], [89.3, 1806.0], [89.4, 1806.0], [89.5, 1808.0], [89.6, 1825.0], [89.7, 1825.0], [89.8, 1828.0], [89.9, 1830.0], [90.0, 1834.0], [90.1, 1834.0], [90.2, 1834.0], [90.3, 1841.0], [90.4, 1841.0], [90.5, 1855.0], [90.6, 1870.0], [90.7, 1870.0], [90.8, 1871.0], [90.9, 1876.0], [91.0, 1880.0], [91.1, 1880.0], [91.2, 1882.0], [91.3, 1889.0], [91.4, 1889.0], [91.5, 1894.0], [91.6, 1899.0], [91.7, 1899.0], [91.8, 1906.0], [91.9, 1906.0], [92.0, 1908.0], [92.1, 1908.0], [92.2, 1908.0], [92.3, 1915.0], [92.4, 1915.0], [92.5, 1933.0], [92.6, 1943.0], [92.7, 1943.0], [92.8, 1949.0], [92.9, 1972.0], [93.0, 2000.0], [93.1, 2000.0], [93.2, 2006.0], [93.3, 2006.0], [93.4, 2006.0], [93.5, 2028.0], [93.6, 2029.0], [93.7, 2029.0], [93.8, 2032.0], [93.9, 2181.0], [94.0, 2355.0], [94.1, 2355.0], [94.2, 2366.0], [94.3, 2393.0], [94.4, 2393.0], [94.5, 2410.0], [94.6, 2415.0], [94.7, 2415.0], [94.8, 2438.0], [94.9, 2440.0], [95.0, 2447.0], [95.1, 2447.0], [95.2, 2447.0], [95.3, 2522.0], [95.4, 2522.0], [95.5, 2545.0], [95.6, 2548.0], [95.7, 2548.0], [95.8, 2590.0], [95.9, 2608.0], [96.0, 2623.0], [96.1, 2623.0], [96.2, 2665.0], [96.3, 2681.0], [96.4, 2681.0], [96.5, 2695.0], [96.6, 2710.0], [96.7, 2710.0], [96.8, 3137.0], [96.9, 3154.0], [97.0, 3158.0], [97.1, 3158.0], [97.2, 3212.0], [97.3, 3247.0], [97.4, 3247.0], [97.5, 3252.0], [97.6, 3257.0], [97.7, 3257.0], [97.8, 3301.0], [97.9, 3334.0], [98.0, 3395.0], [98.1, 3395.0], [98.2, 4437.0], [98.3, 4830.0], [98.4, 4830.0], [98.5, 4842.0], [98.6, 4957.0], [98.7, 4957.0], [98.8, 5917.0], [98.9, 6046.0], [99.0, 8350.0], [99.1, 8350.0], [99.2, 8408.0], [99.3, 13905.0], [99.4, 13905.0], [99.5, 13915.0], [99.6, 13923.0], [99.7, 13923.0], [99.8, 13930.0], [99.9, 14155.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[0.0, 263.0], [0.1, 263.0], [0.2, 264.0], [0.3, 265.0], [0.4, 265.0], [0.5, 265.0], [0.6, 265.0], [0.7, 265.0], [0.8, 265.0], [0.9, 266.0], [1.0, 266.0], [1.1, 266.0], [1.2, 266.0], [1.3, 266.0], [1.4, 266.0], [1.5, 267.0], [1.6, 267.0], [1.7, 267.0], [1.8, 267.0], [1.9, 267.0], [2.0, 267.0], [2.1, 267.0], [2.2, 267.0], [2.3, 267.0], [2.4, 267.0], [2.5, 267.0], [2.6, 267.0], [2.7, 267.0], [2.8, 267.0], [2.9, 267.0], [3.0, 267.0], [3.1, 267.0], [3.2, 267.0], [3.3, 268.0], [3.4, 268.0], [3.5, 268.0], [3.6, 268.0], [3.7, 268.0], [3.8, 268.0], [3.9, 268.0], [4.0, 268.0], [4.1, 268.0], [4.2, 269.0], [4.3, 269.0], [4.4, 269.0], [4.5, 269.0], [4.6, 269.0], [4.7, 269.0], [4.8, 269.0], [4.9, 269.0], [5.0, 269.0], [5.1, 269.0], [5.2, 269.0], [5.3, 270.0], [5.4, 270.0], [5.5, 270.0], [5.6, 270.0], [5.7, 270.0], [5.8, 270.0], [5.9, 271.0], [6.0, 271.0], [6.1, 271.0], [6.2, 271.0], [6.3, 271.0], [6.4, 271.0], [6.5, 272.0], [6.6, 272.0], [6.7, 272.0], [6.8, 272.0], [6.9, 272.0], [7.0, 272.0], [7.1, 272.0], [7.2, 273.0], [7.3, 273.0], [7.4, 273.0], [7.5, 273.0], [7.6, 273.0], [7.7, 273.0], [7.8, 273.0], [7.9, 273.0], [8.0, 274.0], [8.1, 274.0], [8.2, 274.0], [8.3, 274.0], [8.4, 274.0], [8.5, 274.0], [8.6, 274.0], [8.7, 274.0], [8.8, 275.0], [8.9, 275.0], [9.0, 275.0], [9.1, 275.0], [9.2, 276.0], [9.3, 276.0], [9.4, 276.0], [9.5, 276.0], [9.6, 276.0], [9.7, 276.0], [9.8, 276.0], [9.9, 276.0], [10.0, 277.0], [10.1, 277.0], [10.2, 277.0], [10.3, 278.0], [10.4, 278.0], [10.5, 278.0], [10.6, 278.0], [10.7, 278.0], [10.8, 278.0], [10.9, 279.0], [11.0, 279.0], [11.1, 279.0], [11.2, 279.0], [11.3, 280.0], [11.4, 280.0], [11.5, 280.0], [11.6, 280.0], [11.7, 280.0], [11.8, 280.0], [11.9, 281.0], [12.0, 281.0], [12.1, 281.0], [12.2, 282.0], [12.3, 282.0], [12.4, 282.0], [12.5, 282.0], [12.6, 282.0], [12.7, 282.0], [12.8, 282.0], [12.9, 283.0], [13.0, 284.0], [13.1, 284.0], [13.2, 284.0], [13.3, 284.0], [13.4, 284.0], [13.5, 284.0], [13.6, 285.0], [13.7, 285.0], [13.8, 286.0], [13.9, 286.0], [14.0, 286.0], [14.1, 286.0], [14.2, 287.0], [14.3, 287.0], [14.4, 287.0], [14.5, 288.0], [14.6, 288.0], [14.7, 288.0], [14.8, 289.0], [14.9, 290.0], [15.0, 290.0], [15.1, 290.0], [15.2, 291.0], [15.3, 291.0], [15.4, 291.0], [15.5, 292.0], [15.6, 292.0], [15.7, 292.0], [15.8, 292.0], [15.9, 292.0], [16.0, 293.0], [16.1, 293.0], [16.2, 295.0], [16.3, 295.0], [16.4, 295.0], [16.5, 296.0], [16.6, 296.0], [16.7, 296.0], [16.8, 296.0], [16.9, 297.0], [17.0, 297.0], [17.1, 297.0], [17.2, 298.0], [17.3, 298.0], [17.4, 298.0], [17.5, 299.0], [17.6, 299.0], [17.7, 299.0], [17.8, 299.0], [17.9, 299.0], [18.0, 300.0], [18.1, 300.0], [18.2, 300.0], [18.3, 300.0], [18.4, 300.0], [18.5, 300.0], [18.6, 300.0], [18.7, 300.0], [18.8, 300.0], [18.9, 300.0], [19.0, 301.0], [19.1, 301.0], [19.2, 302.0], [19.3, 302.0], [19.4, 302.0], [19.5, 303.0], [19.6, 303.0], [19.7, 303.0], [19.8, 303.0], [19.9, 305.0], [20.0, 305.0], [20.1, 305.0], [20.2, 305.0], [20.3, 305.0], [20.4, 305.0], [20.5, 307.0], [20.6, 307.0], [20.7, 307.0], [20.8, 308.0], [20.9, 310.0], [21.0, 310.0], [21.1, 310.0], [21.2, 310.0], [21.3, 311.0], [21.4, 311.0], [21.5, 311.0], [21.6, 311.0], [21.7, 311.0], [21.8, 312.0], [21.9, 312.0], [22.0, 313.0], [22.1, 313.0], [22.2, 314.0], [22.3, 314.0], [22.4, 314.0], [22.5, 315.0], [22.6, 315.0], [22.7, 315.0], [22.8, 315.0], [22.9, 316.0], [23.0, 316.0], [23.1, 316.0], [23.2, 317.0], [23.3, 317.0], [23.4, 317.0], [23.5, 317.0], [23.6, 318.0], [23.7, 318.0], [23.8, 318.0], [23.9, 318.0], [24.0, 318.0], [24.1, 318.0], [24.2, 318.0], [24.3, 319.0], [24.4, 319.0], [24.5, 319.0], [24.6, 320.0], [24.7, 320.0], [24.8, 321.0], [24.9, 321.0], [25.0, 321.0], [25.1, 321.0], [25.2, 322.0], [25.3, 322.0], [25.4, 322.0], [25.5, 322.0], [25.6, 323.0], [25.7, 323.0], [25.8, 323.0], [25.9, 324.0], [26.0, 324.0], [26.1, 324.0], [26.2, 325.0], [26.3, 325.0], [26.4, 325.0], [26.5, 325.0], [26.6, 326.0], [26.7, 326.0], [26.8, 326.0], [26.9, 326.0], [27.0, 327.0], [27.1, 327.0], [27.2, 327.0], [27.3, 327.0], [27.4, 327.0], [27.5, 328.0], [27.6, 328.0], [27.7, 328.0], [27.8, 328.0], [27.9, 329.0], [28.0, 329.0], [28.1, 329.0], [28.2, 330.0], [28.3, 330.0], [28.4, 330.0], [28.5, 331.0], [28.6, 331.0], [28.7, 331.0], [28.8, 331.0], [28.9, 331.0], [29.0, 332.0], [29.1, 332.0], [29.2, 332.0], [29.3, 332.0], [29.4, 332.0], [29.5, 333.0], [29.6, 334.0], [29.7, 334.0], [29.8, 335.0], [29.9, 335.0], [30.0, 336.0], [30.1, 336.0], [30.2, 336.0], [30.3, 336.0], [30.4, 336.0], [30.5, 338.0], [30.6, 339.0], [30.7, 339.0], [30.8, 339.0], [30.9, 342.0], [31.0, 343.0], [31.1, 343.0], [31.2, 343.0], [31.3, 344.0], [31.4, 344.0], [31.5, 344.0], [31.6, 344.0], [31.7, 344.0], [31.8, 345.0], [31.9, 345.0], [32.0, 345.0], [32.1, 345.0], [32.2, 346.0], [32.3, 346.0], [32.4, 346.0], [32.5, 346.0], [32.6, 347.0], [32.7, 347.0], [32.8, 347.0], [32.9, 347.0], [33.0, 347.0], [33.1, 347.0], [33.2, 347.0], [33.3, 348.0], [33.4, 348.0], [33.5, 348.0], [33.6, 348.0], [33.7, 348.0], [33.8, 349.0], [33.9, 350.0], [34.0, 350.0], [34.1, 350.0], [34.2, 350.0], [34.3, 350.0], [34.4, 350.0], [34.5, 351.0], [34.6, 351.0], [34.7, 351.0], [34.8, 351.0], [34.9, 351.0], [35.0, 352.0], [35.1, 352.0], [35.2, 352.0], [35.3, 353.0], [35.4, 353.0], [35.5, 353.0], [35.6, 354.0], [35.7, 354.0], [35.8, 354.0], [35.9, 356.0], [36.0, 357.0], [36.1, 357.0], [36.2, 357.0], [36.3, 357.0], [36.4, 357.0], [36.5, 357.0], [36.6, 358.0], [36.7, 358.0], [36.8, 358.0], [36.9, 358.0], [37.0, 359.0], [37.1, 359.0], [37.2, 359.0], [37.3, 360.0], [37.4, 360.0], [37.5, 361.0], [37.6, 362.0], [37.7, 362.0], [37.8, 363.0], [37.9, 363.0], [38.0, 363.0], [38.1, 363.0], [38.2, 363.0], [38.3, 363.0], [38.4, 363.0], [38.5, 364.0], [38.6, 364.0], [38.7, 364.0], [38.8, 364.0], [38.9, 365.0], [39.0, 366.0], [39.1, 366.0], [39.2, 366.0], [39.3, 367.0], [39.4, 367.0], [39.5, 367.0], [39.6, 369.0], [39.7, 369.0], [39.8, 370.0], [39.9, 370.0], [40.0, 371.0], [40.1, 371.0], [40.2, 371.0], [40.3, 372.0], [40.4, 372.0], [40.5, 373.0], [40.6, 373.0], [40.7, 373.0], [40.8, 374.0], [40.9, 374.0], [41.0, 374.0], [41.1, 374.0], [41.2, 374.0], [41.3, 375.0], [41.4, 375.0], [41.5, 376.0], [41.6, 376.0], [41.7, 376.0], [41.8, 377.0], [41.9, 377.0], [42.0, 378.0], [42.1, 378.0], [42.2, 378.0], [42.3, 379.0], [42.4, 379.0], [42.5, 379.0], [42.6, 380.0], [42.7, 380.0], [42.8, 380.0], [42.9, 380.0], [43.0, 381.0], [43.1, 381.0], [43.2, 381.0], [43.3, 381.0], [43.4, 381.0], [43.5, 382.0], [43.6, 382.0], [43.7, 382.0], [43.8, 382.0], [43.9, 383.0], [44.0, 384.0], [44.1, 384.0], [44.2, 384.0], [44.3, 385.0], [44.4, 385.0], [44.5, 385.0], [44.6, 385.0], [44.7, 385.0], [44.8, 385.0], [44.9, 386.0], [45.0, 386.0], [45.1, 386.0], [45.2, 387.0], [45.3, 388.0], [45.4, 388.0], [45.5, 389.0], [45.6, 390.0], [45.7, 390.0], [45.8, 391.0], [45.9, 391.0], [46.0, 391.0], [46.1, 391.0], [46.2, 392.0], [46.3, 393.0], [46.4, 393.0], [46.5, 393.0], [46.6, 395.0], [46.7, 395.0], [46.8, 396.0], [46.9, 398.0], [47.0, 398.0], [47.1, 399.0], [47.2, 400.0], [47.3, 400.0], [47.4, 400.0], [47.5, 400.0], [47.6, 408.0], [47.7, 408.0], [47.8, 408.0], [47.9, 409.0], [48.0, 409.0], [48.1, 409.0], [48.2, 410.0], [48.3, 412.0], [48.4, 412.0], [48.5, 412.0], [48.6, 413.0], [48.7, 413.0], [48.8, 416.0], [48.9, 416.0], [49.0, 416.0], [49.1, 417.0], [49.2, 417.0], [49.3, 417.0], [49.4, 417.0], [49.5, 418.0], [49.6, 419.0], [49.7, 419.0], [49.8, 424.0], [49.9, 424.0], [50.0, 424.0], [50.1, 424.0], [50.2, 425.0], [50.3, 428.0], [50.4, 428.0], [50.5, 428.0], [50.6, 430.0], [50.7, 430.0], [50.8, 432.0], [50.9, 434.0], [51.0, 434.0], [51.1, 436.0], [51.2, 436.0], [51.3, 436.0], [51.4, 436.0], [51.5, 438.0], [51.6, 438.0], [51.7, 438.0], [51.8, 440.0], [51.9, 441.0], [52.0, 441.0], [52.1, 441.0], [52.2, 442.0], [52.3, 443.0], [52.4, 443.0], [52.5, 443.0], [52.6, 443.0], [52.7, 443.0], [52.8, 446.0], [52.9, 447.0], [53.0, 447.0], [53.1, 447.0], [53.2, 448.0], [53.3, 448.0], [53.4, 448.0], [53.5, 453.0], [53.6, 453.0], [53.7, 453.0], [53.8, 455.0], [53.9, 457.0], [54.0, 457.0], [54.1, 459.0], [54.2, 461.0], [54.3, 461.0], [54.4, 461.0], [54.5, 461.0], [54.6, 462.0], [54.7, 462.0], [54.8, 463.0], [54.9, 466.0], [55.0, 466.0], [55.1, 467.0], [55.2, 469.0], [55.3, 470.0], [55.4, 470.0], [55.5, 471.0], [55.6, 474.0], [55.7, 474.0], [55.8, 476.0], [55.9, 476.0], [56.0, 476.0], [56.1, 477.0], [56.2, 477.0], [56.3, 478.0], [56.4, 478.0], [56.5, 480.0], [56.6, 483.0], [56.7, 483.0], [56.8, 488.0], [56.9, 489.0], [57.0, 489.0], [57.1, 490.0], [57.2, 493.0], [57.3, 495.0], [57.4, 495.0], [57.5, 499.0], [57.6, 499.0], [57.7, 499.0], [57.8, 502.0], [57.9, 502.0], [58.0, 502.0], [58.1, 502.0], [58.2, 510.0], [58.3, 511.0], [58.4, 511.0], [58.5, 517.0], [58.6, 517.0], [58.7, 517.0], [58.8, 519.0], [58.9, 520.0], [59.0, 520.0], [59.1, 520.0], [59.2, 520.0], [59.3, 522.0], [59.4, 522.0], [59.5, 528.0], [59.6, 528.0], [59.7, 528.0], [59.8, 531.0], [59.9, 533.0], [60.0, 533.0], [60.1, 567.0], [60.2, 573.0], [60.3, 576.0], [60.4, 576.0], [60.5, 577.0], [60.6, 589.0], [60.7, 589.0], [60.8, 591.0], [60.9, 631.0], [61.0, 631.0], [61.1, 633.0], [61.2, 638.0], [61.3, 655.0], [61.4, 655.0], [61.5, 660.0], [61.6, 899.0], [61.7, 899.0], [61.8, 920.0], [61.9, 926.0], [62.0, 926.0], [62.1, 930.0], [62.2, 936.0], [62.3, 951.0], [62.4, 951.0], [62.5, 961.0], [62.6, 1029.0], [62.7, 1029.0], [62.8, 1032.0], [62.9, 1035.0], [63.0, 1035.0], [63.1, 1035.0], [63.2, 1036.0], [63.3, 1040.0], [63.4, 1040.0], [63.5, 1042.0], [63.6, 1043.0], [63.7, 1043.0], [63.8, 1047.0], [63.9, 1048.0], [64.0, 1048.0], [64.1, 1048.0], [64.2, 1049.0], [64.3, 1050.0], [64.4, 1050.0], [64.5, 1050.0], [64.6, 1053.0], [64.7, 1053.0], [64.8, 1053.0], [64.9, 1064.0], [65.0, 1064.0], [65.1, 1071.0], [65.2, 1232.0], [65.3, 1245.0], [65.4, 1245.0], [65.5, 1250.0], [65.6, 1251.0], [65.7, 1251.0], [65.8, 1259.0], [65.9, 1269.0], [66.0, 1269.0], [66.1, 1274.0], [66.2, 1274.0], [66.3, 1317.0], [66.4, 1317.0], [66.5, 1321.0], [66.6, 1343.0], [66.7, 1343.0], [66.8, 1346.0], [66.9, 1389.0], [67.0, 1389.0], [67.1, 1391.0], [67.2, 1412.0], [67.3, 1416.0], [67.4, 1416.0], [67.5, 1436.0], [67.6, 1436.0], [67.7, 1436.0], [67.8, 1437.0], [67.9, 1437.0], [68.0, 1437.0], [68.1, 1445.0], [68.2, 1465.0], [68.3, 1475.0], [68.4, 1475.0], [68.5, 1484.0], [68.6, 1489.0], [68.7, 1489.0], [68.8, 1501.0], [68.9, 1513.0], [69.0, 1513.0], [69.1, 1529.0], [69.2, 1532.0], [69.3, 1538.0], [69.4, 1538.0], [69.5, 1546.0], [69.6, 1551.0], [69.7, 1551.0], [69.8, 1556.0], [69.9, 1562.0], [70.0, 1562.0], [70.1, 1563.0], [70.2, 1565.0], [70.3, 1567.0], [70.4, 1567.0], [70.5, 1572.0], [70.6, 1573.0], [70.7, 1573.0], [70.8, 1576.0], [70.9, 1600.0], [71.0, 1600.0], [71.1, 1603.0], [71.2, 1606.0], [71.3, 1607.0], [71.4, 1607.0], [71.5, 1608.0], [71.6, 1626.0], [71.7, 1626.0], [71.8, 1626.0], [71.9, 1630.0], [72.0, 1630.0], [72.1, 1634.0], [72.2, 1640.0], [72.3, 1642.0], [72.4, 1642.0], [72.5, 1644.0], [72.6, 1646.0], [72.7, 1646.0], [72.8, 1650.0], [72.9, 1661.0], [73.0, 1661.0], [73.1, 1668.0], [73.2, 1671.0], [73.3, 1671.0], [73.4, 1671.0], [73.5, 1677.0], [73.6, 1679.0], [73.7, 1679.0], [73.8, 1696.0], [73.9, 1698.0], [74.0, 1698.0], [74.1, 1699.0], [74.2, 1707.0], [74.3, 1712.0], [74.4, 1712.0], [74.5, 1717.0], [74.6, 1721.0], [74.7, 1721.0], [74.8, 1722.0], [74.9, 1732.0], [75.0, 1734.0], [75.1, 1734.0], [75.2, 1739.0], [75.3, 1741.0], [75.4, 1741.0], [75.5, 1748.0], [75.6, 1749.0], [75.7, 1749.0], [75.8, 1750.0], [75.9, 1750.0], [76.0, 1755.0], [76.1, 1755.0], [76.2, 1757.0], [76.3, 1757.0], [76.4, 1757.0], [76.5, 1758.0], [76.6, 1758.0], [76.7, 1758.0], [76.8, 1759.0], [76.9, 1765.0], [77.0, 1769.0], [77.1, 1769.0], [77.2, 1769.0], [77.3, 1773.0], [77.4, 1773.0], [77.5, 1779.0], [77.6, 1779.0], [77.7, 1779.0], [77.8, 1781.0], [77.9, 1784.0], [78.0, 1785.0], [78.1, 1785.0], [78.2, 1785.0], [78.3, 1787.0], [78.4, 1787.0], [78.5, 1787.0], [78.6, 1790.0], [78.7, 1790.0], [78.8, 1797.0], [78.9, 1801.0], [79.0, 1804.0], [79.1, 1804.0], [79.2, 1807.0], [79.3, 1812.0], [79.4, 1812.0], [79.5, 1815.0], [79.6, 1816.0], [79.7, 1816.0], [79.8, 1817.0], [79.9, 1821.0], [80.0, 1822.0], [80.1, 1822.0], [80.2, 1822.0], [80.3, 1823.0], [80.4, 1823.0], [80.5, 1823.0], [80.6, 1823.0], [80.7, 1823.0], [80.8, 1827.0], [80.9, 1829.0], [81.0, 1829.0], [81.1, 1829.0], [81.2, 1831.0], [81.3, 1835.0], [81.4, 1835.0], [81.5, 1835.0], [81.6, 1836.0], [81.7, 1836.0], [81.8, 1839.0], [81.9, 1840.0], [82.0, 1840.0], [82.1, 1840.0], [82.2, 1854.0], [82.3, 1859.0], [82.4, 1859.0], [82.5, 1864.0], [82.6, 1873.0], [82.7, 1873.0], [82.8, 1873.0], [82.9, 1874.0], [83.0, 1874.0], [83.1, 1874.0], [83.2, 1878.0], [83.3, 1879.0], [83.4, 1879.0], [83.5, 1879.0], [83.6, 1882.0], [83.7, 1882.0], [83.8, 1883.0], [83.9, 1887.0], [84.0, 1891.0], [84.1, 1891.0], [84.2, 1894.0], [84.3, 1896.0], [84.4, 1896.0], [84.5, 1897.0], [84.6, 1902.0], [84.7, 1902.0], [84.8, 1903.0], [84.9, 1908.0], [85.0, 1911.0], [85.1, 1911.0], [85.2, 1912.0], [85.3, 1915.0], [85.4, 1915.0], [85.5, 1919.0], [85.6, 1922.0], [85.7, 1922.0], [85.8, 1924.0], [85.9, 1931.0], [86.0, 1939.0], [86.1, 1939.0], [86.2, 1954.0], [86.3, 1957.0], [86.4, 1957.0], [86.5, 1977.0], [86.6, 1989.0], [86.7, 1989.0], [86.8, 1995.0], [86.9, 1999.0], [87.0, 2002.0], [87.1, 2002.0], [87.2, 2007.0], [87.3, 2013.0], [87.4, 2013.0], [87.5, 2014.0], [87.6, 2027.0], [87.7, 2027.0], [87.8, 2040.0], [87.9, 2054.0], [88.0, 2063.0], [88.1, 2063.0], [88.2, 2229.0], [88.3, 2241.0], [88.4, 2241.0], [88.5, 2282.0], [88.6, 2318.0], [88.7, 2318.0], [88.8, 2321.0], [88.9, 2358.0], [89.0, 2359.0], [89.1, 2359.0], [89.2, 2372.0], [89.3, 2377.0], [89.4, 2377.0], [89.5, 2392.0], [89.6, 2392.0], [89.7, 2392.0], [89.8, 2396.0], [89.9, 2397.0], [90.0, 2429.0], [90.1, 2429.0], [90.2, 2435.0], [90.3, 2441.0], [90.4, 2441.0], [90.5, 2443.0], [90.6, 2446.0], [90.7, 2446.0], [90.8, 2453.0], [90.9, 2463.0], [91.0, 2503.0], [91.1, 2503.0], [91.2, 2503.0], [91.3, 2512.0], [91.4, 2512.0], [91.5, 2516.0], [91.6, 2528.0], [91.7, 2528.0], [91.8, 2534.0], [91.9, 2554.0], [92.0, 2555.0], [92.1, 2555.0], [92.2, 2576.0], [92.3, 2607.0], [92.4, 2607.0], [92.5, 2624.0], [92.6, 2633.0], [92.7, 2633.0], [92.8, 2647.0], [92.9, 2656.0], [93.0, 2677.0], [93.1, 2677.0], [93.2, 2691.0], [93.3, 2747.0], [93.4, 2747.0], [93.5, 2748.0], [93.6, 2778.0], [93.7, 2778.0], [93.8, 2848.0], [93.9, 2879.0], [94.0, 2974.0], [94.1, 2974.0], [94.2, 3044.0], [94.3, 3070.0], [94.4, 3070.0], [94.5, 3107.0], [94.6, 3116.0], [94.7, 3116.0], [94.8, 3147.0], [94.9, 3187.0], [95.0, 3217.0], [95.1, 3217.0], [95.2, 3251.0], [95.3, 3252.0], [95.4, 3252.0], [95.5, 3274.0], [95.6, 3278.0], [95.7, 3278.0], [95.8, 3281.0], [95.9, 3295.0], [96.0, 3317.0], [96.1, 3317.0], [96.2, 3322.0], [96.3, 3363.0], [96.4, 3363.0], [96.5, 3381.0], [96.6, 3393.0], [96.7, 3393.0], [96.8, 3422.0], [96.9, 3456.0], [97.0, 3468.0], [97.1, 3468.0], [97.2, 3481.0], [97.3, 3596.0], [97.4, 3596.0], [97.5, 3599.0], [97.6, 3949.0], [97.7, 3949.0], [97.8, 4426.0], [97.9, 4447.0], [98.0, 4477.0], [98.1, 4477.0], [98.2, 4547.0], [98.3, 4549.0], [98.4, 4549.0], [98.5, 4637.0], [98.6, 4669.0], [98.7, 4669.0], [98.8, 4672.0], [98.9, 4732.0], [99.0, 4902.0], [99.1, 4902.0], [99.2, 4916.0], [99.3, 5244.0], [99.4, 5244.0], [99.5, 5294.0], [99.6, 5520.0], [99.7, 5520.0], [99.8, 7377.0], [99.9, 8154.0]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[0.0, 530.0], [0.1, 530.0], [0.2, 544.0], [0.3, 544.0], [0.4, 544.0], [0.5, 544.0], [0.6, 548.0], [0.7, 548.0], [0.8, 552.0], [0.9, 552.0], [1.0, 553.0], [1.1, 553.0], [1.2, 554.0], [1.3, 557.0], [1.4, 557.0], [1.5, 557.0], [1.6, 559.0], [1.7, 559.0], [1.8, 559.0], [1.9, 560.0], [2.0, 560.0], [2.1, 560.0], [2.2, 563.0], [2.3, 1032.0], [2.4, 1032.0], [2.5, 1034.0], [2.6, 1035.0], [2.7, 1035.0], [2.8, 1036.0], [2.9, 1039.0], [3.0, 1039.0], [3.1, 1039.0], [3.2, 1039.0], [3.3, 1039.0], [3.4, 1039.0], [3.5, 1041.0], [3.6, 1041.0], [3.7, 1041.0], [3.8, 1041.0], [3.9, 1042.0], [4.0, 1042.0], [4.1, 1042.0], [4.2, 1043.0], [4.3, 1043.0], [4.4, 1043.0], [4.5, 1043.0], [4.6, 1043.0], [4.7, 1043.0], [4.8, 1044.0], [4.9, 1044.0], [5.0, 1044.0], [5.1, 1044.0], [5.2, 1044.0], [5.3, 1044.0], [5.4, 1044.0], [5.5, 1045.0], [5.6, 1045.0], [5.7, 1045.0], [5.8, 1045.0], [5.9, 1046.0], [6.0, 1046.0], [6.1, 1046.0], [6.2, 1046.0], [6.3, 1047.0], [6.4, 1047.0], [6.5, 1047.0], [6.6, 1048.0], [6.7, 1048.0], [6.8, 1048.0], [6.9, 1049.0], [7.0, 1049.0], [7.1, 1049.0], [7.2, 1050.0], [7.3, 1051.0], [7.4, 1051.0], [7.5, 1052.0], [7.6, 1053.0], [7.7, 1053.0], [7.8, 1053.0], [7.9, 1054.0], [8.0, 1054.0], [8.1, 1054.0], [8.2, 1054.0], [8.3, 1054.0], [8.4, 1054.0], [8.5, 1054.0], [8.6, 1057.0], [8.7, 1057.0], [8.8, 1058.0], [8.9, 1059.0], [9.0, 1060.0], [9.1, 1060.0], [9.2, 1060.0], [9.3, 1061.0], [9.4, 1061.0], [9.5, 1062.0], [9.6, 1063.0], [9.7, 1063.0], [9.8, 1063.0], [9.9, 1064.0], [10.0, 1064.0], [10.1, 1064.0], [10.2, 1065.0], [10.3, 1065.0], [10.4, 1065.0], [10.5, 1067.0], [10.6, 1067.0], [10.7, 1067.0], [10.8, 1067.0], [10.9, 1068.0], [11.0, 1069.0], [11.1, 1069.0], [11.2, 1070.0], [11.3, 1071.0], [11.4, 1071.0], [11.5, 1075.0], [11.6, 1075.0], [11.7, 1075.0], [11.8, 1076.0], [11.9, 1077.0], [12.0, 1078.0], [12.1, 1078.0], [12.2, 1081.0], [12.3, 1084.0], [12.4, 1084.0], [12.5, 1085.0], [12.6, 1086.0], [12.7, 1086.0], [12.8, 1091.0], [12.9, 1092.0], [13.0, 1093.0], [13.1, 1093.0], [13.2, 1093.0], [13.3, 1094.0], [13.4, 1094.0], [13.5, 1094.0], [13.6, 1095.0], [13.7, 1095.0], [13.8, 1097.0], [13.9, 1098.0], [14.0, 1101.0], [14.1, 1101.0], [14.2, 1102.0], [14.3, 1104.0], [14.4, 1104.0], [14.5, 1105.0], [14.6, 1107.0], [14.7, 1107.0], [14.8, 1107.0], [14.9, 1107.0], [15.0, 1113.0], [15.1, 1113.0], [15.2, 1117.0], [15.3, 1120.0], [15.4, 1120.0], [15.5, 1121.0], [15.6, 1125.0], [15.7, 1125.0], [15.8, 1129.0], [15.9, 1130.0], [16.0, 1131.0], [16.1, 1131.0], [16.2, 1133.0], [16.3, 1134.0], [16.4, 1134.0], [16.5, 1134.0], [16.6, 1137.0], [16.7, 1137.0], [16.8, 1138.0], [16.9, 1139.0], [17.0, 1139.0], [17.1, 1139.0], [17.2, 1140.0], [17.3, 1140.0], [17.4, 1140.0], [17.5, 1141.0], [17.6, 1142.0], [17.7, 1142.0], [17.8, 1142.0], [17.9, 1143.0], [18.0, 1144.0], [18.1, 1144.0], [18.2, 1145.0], [18.3, 1147.0], [18.4, 1147.0], [18.5, 1150.0], [18.6, 1151.0], [18.7, 1151.0], [18.8, 1157.0], [18.9, 1158.0], [19.0, 1162.0], [19.1, 1162.0], [19.2, 1167.0], [19.3, 1167.0], [19.4, 1167.0], [19.5, 1172.0], [19.6, 1173.0], [19.7, 1173.0], [19.8, 1177.0], [19.9, 1177.0], [20.0, 1180.0], [20.1, 1180.0], [20.2, 1182.0], [20.3, 1185.0], [20.4, 1185.0], [20.5, 1185.0], [20.6, 1185.0], [20.7, 1185.0], [20.8, 1189.0], [20.9, 1191.0], [21.0, 1198.0], [21.1, 1198.0], [21.2, 1199.0], [21.3, 1199.0], [21.4, 1199.0], [21.5, 1203.0], [21.6, 1208.0], [21.7, 1208.0], [21.8, 1208.0], [21.9, 1210.0], [22.0, 1211.0], [22.1, 1211.0], [22.2, 1211.0], [22.3, 1211.0], [22.4, 1211.0], [22.5, 1212.0], [22.6, 1213.0], [22.7, 1213.0], [22.8, 1220.0], [22.9, 1222.0], [23.0, 1223.0], [23.1, 1223.0], [23.2, 1226.0], [23.3, 1228.0], [23.4, 1228.0], [23.5, 1228.0], [23.6, 1230.0], [23.7, 1230.0], [23.8, 1230.0], [23.9, 1233.0], [24.0, 1235.0], [24.1, 1235.0], [24.2, 1236.0], [24.3, 1240.0], [24.4, 1240.0], [24.5, 1240.0], [24.6, 1245.0], [24.7, 1245.0], [24.8, 1249.0], [24.9, 1250.0], [25.0, 1251.0], [25.1, 1251.0], [25.2, 1255.0], [25.3, 1255.0], [25.4, 1255.0], [25.5, 1255.0], [25.6, 1255.0], [25.7, 1255.0], [25.8, 1256.0], [25.9, 1256.0], [26.0, 1257.0], [26.1, 1257.0], [26.2, 1257.0], [26.3, 1258.0], [26.4, 1258.0], [26.5, 1259.0], [26.6, 1259.0], [26.7, 1259.0], [26.8, 1260.0], [26.9, 1260.0], [27.0, 1261.0], [27.1, 1261.0], [27.2, 1262.0], [27.3, 1262.0], [27.4, 1262.0], [27.5, 1262.0], [27.6, 1264.0], [27.7, 1264.0], [27.8, 1265.0], [27.9, 1266.0], [28.0, 1267.0], [28.1, 1267.0], [28.2, 1269.0], [28.3, 1275.0], [28.4, 1275.0], [28.5, 1280.0], [28.6, 1282.0], [28.7, 1282.0], [28.8, 1286.0], [28.9, 1287.0], [29.0, 1288.0], [29.1, 1288.0], [29.2, 1290.0], [29.3, 1294.0], [29.4, 1294.0], [29.5, 1306.0], [29.6, 1319.0], [29.7, 1319.0], [29.8, 1323.0], [29.9, 1324.0], [30.0, 1327.0], [30.1, 1327.0], [30.2, 1339.0], [30.3, 1340.0], [30.4, 1340.0], [30.5, 1348.0], [30.6, 1351.0], [30.7, 1351.0], [30.8, 1351.0], [30.9, 1354.0], [31.0, 1356.0], [31.1, 1356.0], [31.2, 1366.0], [31.3, 1371.0], [31.4, 1371.0], [31.5, 1385.0], [31.6, 1392.0], [31.7, 1392.0], [31.8, 1393.0], [31.9, 1405.0], [32.0, 1407.0], [32.1, 1407.0], [32.2, 1409.0], [32.3, 1422.0], [32.4, 1422.0], [32.5, 1428.0], [32.6, 1431.0], [32.7, 1431.0], [32.8, 1432.0], [32.9, 1434.0], [33.0, 1434.0], [33.1, 1434.0], [33.2, 1435.0], [33.3, 1436.0], [33.4, 1436.0], [33.5, 1441.0], [33.6, 1442.0], [33.7, 1442.0], [33.8, 1443.0], [33.9, 1444.0], [34.0, 1446.0], [34.1, 1446.0], [34.2, 1452.0], [34.3, 1452.0], [34.4, 1452.0], [34.5, 1453.0], [34.6, 1456.0], [34.7, 1456.0], [34.8, 1461.0], [34.9, 1465.0], [35.0, 1472.0], [35.1, 1472.0], [35.2, 1479.0], [35.3, 1483.0], [35.4, 1483.0], [35.5, 1489.0], [35.6, 1490.0], [35.7, 1490.0], [35.8, 1492.0], [35.9, 1497.0], [36.0, 1497.0], [36.1, 1500.0], [36.2, 1502.0], [36.3, 1504.0], [36.4, 1504.0], [36.5, 1504.0], [36.6, 1510.0], [36.7, 1510.0], [36.8, 1514.0], [36.9, 1515.0], [37.0, 1515.0], [37.1, 1518.0], [37.2, 1519.0], [37.3, 1522.0], [37.4, 1522.0], [37.5, 1522.0], [37.6, 1526.0], [37.7, 1526.0], [37.8, 1529.0], [37.9, 1538.0], [38.0, 1538.0], [38.1, 1544.0], [38.2, 1562.0], [38.3, 1567.0], [38.4, 1567.0], [38.5, 1573.0], [38.6, 1579.0], [38.7, 1579.0], [38.8, 1581.0], [38.9, 1582.0], [39.0, 1582.0], [39.1, 1584.0], [39.2, 1591.0], [39.3, 1601.0], [39.4, 1601.0], [39.5, 1603.0], [39.6, 1615.0], [39.7, 1615.0], [39.8, 1619.0], [39.9, 1628.0], [40.0, 1628.0], [40.1, 1629.0], [40.2, 1632.0], [40.3, 1635.0], [40.4, 1635.0], [40.5, 1635.0], [40.6, 1635.0], [40.7, 1635.0], [40.8, 1636.0], [40.9, 1639.0], [41.0, 1639.0], [41.1, 1650.0], [41.2, 1653.0], [41.3, 1653.0], [41.4, 1653.0], [41.5, 1665.0], [41.6, 1671.0], [41.7, 1671.0], [41.8, 1672.0], [41.9, 1675.0], [42.0, 1675.0], [42.1, 1676.0], [42.2, 1676.0], [42.3, 1682.0], [42.4, 1682.0], [42.5, 1684.0], [42.6, 1686.0], [42.7, 1686.0], [42.8, 1698.0], [42.9, 1702.0], [43.0, 1702.0], [43.1, 1710.0], [43.2, 1711.0], [43.3, 1714.0], [43.4, 1714.0], [43.5, 1716.0], [43.6, 1720.0], [43.7, 1720.0], [43.8, 1720.0], [43.9, 1723.0], [44.0, 1723.0], [44.1, 1725.0], [44.2, 1726.0], [44.3, 1728.0], [44.4, 1728.0], [44.5, 1728.0], [44.6, 1730.0], [44.7, 1730.0], [44.8, 1730.0], [44.9, 1731.0], [45.0, 1731.0], [45.1, 1733.0], [45.2, 1733.0], [45.3, 1737.0], [45.4, 1737.0], [45.5, 1739.0], [45.6, 1741.0], [45.7, 1741.0], [45.8, 1744.0], [45.9, 1744.0], [46.0, 1744.0], [46.1, 1745.0], [46.2, 1745.0], [46.3, 1750.0], [46.4, 1750.0], [46.5, 1750.0], [46.6, 1751.0], [46.7, 1751.0], [46.8, 1751.0], [46.9, 1752.0], [47.0, 1752.0], [47.1, 1752.0], [47.2, 1752.0], [47.3, 1753.0], [47.4, 1753.0], [47.5, 1754.0], [47.6, 1754.0], [47.7, 1754.0], [47.8, 1754.0], [47.9, 1755.0], [48.0, 1755.0], [48.1, 1756.0], [48.2, 1759.0], [48.3, 1760.0], [48.4, 1760.0], [48.5, 1762.0], [48.6, 1763.0], [48.7, 1763.0], [48.8, 1764.0], [48.9, 1766.0], [49.0, 1766.0], [49.1, 1771.0], [49.2, 1773.0], [49.3, 1777.0], [49.4, 1777.0], [49.5, 1777.0], [49.6, 1779.0], [49.7, 1779.0], [49.8, 1780.0], [49.9, 1781.0], [50.0, 1781.0], [50.1, 1781.0], [50.2, 1784.0], [50.3, 1786.0], [50.4, 1786.0], [50.5, 1788.0], [50.6, 1789.0], [50.7, 1789.0], [50.8, 1791.0], [50.9, 1791.0], [51.0, 1791.0], [51.1, 1791.0], [51.2, 1793.0], [51.3, 1793.0], [51.4, 1793.0], [51.5, 1795.0], [51.6, 1796.0], [51.7, 1796.0], [51.8, 1796.0], [51.9, 1801.0], [52.0, 1801.0], [52.1, 1804.0], [52.2, 1805.0], [52.3, 1810.0], [52.4, 1810.0], [52.5, 1812.0], [52.6, 1814.0], [52.7, 1814.0], [52.8, 1815.0], [52.9, 1815.0], [53.0, 1815.0], [53.1, 1815.0], [53.2, 1815.0], [53.3, 1816.0], [53.4, 1816.0], [53.5, 1817.0], [53.6, 1817.0], [53.7, 1817.0], [53.8, 1818.0], [53.9, 1818.0], [54.0, 1818.0], [54.1, 1820.0], [54.2, 1830.0], [54.3, 1834.0], [54.4, 1834.0], [54.5, 1836.0], [54.6, 1836.0], [54.7, 1836.0], [54.8, 1837.0], [54.9, 1840.0], [55.0, 1840.0], [55.1, 1843.0], [55.2, 1844.0], [55.3, 1844.0], [55.4, 1844.0], [55.5, 1847.0], [55.6, 1849.0], [55.7, 1849.0], [55.8, 1849.0], [55.9, 1851.0], [56.0, 1851.0], [56.1, 1855.0], [56.2, 1859.0], [56.3, 1864.0], [56.4, 1864.0], [56.5, 1866.0], [56.6, 1866.0], [56.7, 1866.0], [56.8, 1869.0], [56.9, 1876.0], [57.0, 1876.0], [57.1, 1884.0], [57.2, 1889.0], [57.3, 1896.0], [57.4, 1896.0], [57.5, 1897.0], [57.6, 1899.0], [57.7, 1899.0], [57.8, 1901.0], [57.9, 1903.0], [58.0, 1903.0], [58.1, 1904.0], [58.2, 1910.0], [58.3, 1912.0], [58.4, 1912.0], [58.5, 1913.0], [58.6, 1913.0], [58.7, 1913.0], [58.8, 1914.0], [58.9, 1915.0], [59.0, 1915.0], [59.1, 1915.0], [59.2, 1917.0], [59.3, 1919.0], [59.4, 1919.0], [59.5, 1927.0], [59.6, 1932.0], [59.7, 1932.0], [59.8, 1933.0], [59.9, 1934.0], [60.0, 1934.0], [60.1, 1940.0], [60.2, 1945.0], [60.3, 1947.0], [60.4, 1947.0], [60.5, 1947.0], [60.6, 1947.0], [60.7, 1947.0], [60.8, 1949.0], [60.9, 1949.0], [61.0, 1949.0], [61.1, 1953.0], [61.2, 1953.0], [61.3, 1968.0], [61.4, 1968.0], [61.5, 1970.0], [61.6, 1970.0], [61.7, 1970.0], [61.8, 1983.0], [61.9, 1987.0], [62.0, 1987.0], [62.1, 1992.0], [62.2, 1995.0], [62.3, 1997.0], [62.4, 1997.0], [62.5, 1997.0], [62.6, 1999.0], [62.7, 1999.0], [62.8, 2000.0], [62.9, 2000.0], [63.0, 2000.0], [63.1, 2000.0], [63.2, 2001.0], [63.3, 2003.0], [63.4, 2003.0], [63.5, 2004.0], [63.6, 2007.0], [63.7, 2007.0], [63.8, 2008.0], [63.9, 2015.0], [64.0, 2015.0], [64.1, 2019.0], [64.2, 2019.0], [64.3, 2024.0], [64.4, 2024.0], [64.5, 2029.0], [64.6, 2032.0], [64.7, 2032.0], [64.8, 2034.0], [64.9, 2040.0], [65.0, 2040.0], [65.1, 2047.0], [65.2, 2051.0], [65.3, 2056.0], [65.4, 2056.0], [65.5, 2057.0], [65.6, 2061.0], [65.7, 2061.0], [65.8, 2066.0], [65.9, 2096.0], [66.0, 2096.0], [66.1, 2100.0], [66.2, 2101.0], [66.3, 2103.0], [66.4, 2103.0], [66.5, 2104.0], [66.6, 2105.0], [66.7, 2105.0], [66.8, 2106.0], [66.9, 2116.0], [67.0, 2116.0], [67.1, 2117.0], [67.2, 2117.0], [67.3, 2118.0], [67.4, 2118.0], [67.5, 2124.0], [67.6, 2127.0], [67.7, 2127.0], [67.8, 2128.0], [67.9, 2129.0], [68.0, 2129.0], [68.1, 2135.0], [68.2, 2136.0], [68.3, 2143.0], [68.4, 2143.0], [68.5, 2152.0], [68.6, 2152.0], [68.7, 2152.0], [68.8, 2163.0], [68.9, 2164.0], [69.0, 2164.0], [69.1, 2170.0], [69.2, 2172.0], [69.3, 2173.0], [69.4, 2173.0], [69.5, 2188.0], [69.6, 2192.0], [69.7, 2192.0], [69.8, 2203.0], [69.9, 2203.0], [70.0, 2203.0], [70.1, 2209.0], [70.2, 2210.0], [70.3, 2212.0], [70.4, 2212.0], [70.5, 2219.0], [70.6, 2236.0], [70.7, 2236.0], [70.8, 2240.0], [70.9, 2244.0], [71.0, 2244.0], [71.1, 2244.0], [71.2, 2245.0], [71.3, 2247.0], [71.4, 2247.0], [71.5, 2261.0], [71.6, 2262.0], [71.7, 2262.0], [71.8, 2270.0], [71.9, 2281.0], [72.0, 2281.0], [72.1, 2286.0], [72.2, 2329.0], [72.3, 2332.0], [72.4, 2332.0], [72.5, 2344.0], [72.6, 2383.0], [72.7, 2383.0], [72.8, 2401.0], [72.9, 2432.0], [73.0, 2432.0], [73.1, 2446.0], [73.2, 2455.0], [73.3, 2508.0], [73.4, 2508.0], [73.5, 2515.0], [73.6, 2529.0], [73.7, 2529.0], [73.8, 2536.0], [73.9, 2546.0], [74.0, 2546.0], [74.1, 2547.0], [74.2, 2583.0], [74.3, 2590.0], [74.4, 2590.0], [74.5, 2594.0], [74.6, 2598.0], [74.7, 2598.0], [74.8, 2604.0], [74.9, 2607.0], [75.0, 2607.0], [75.1, 2610.0], [75.2, 2615.0], [75.3, 2624.0], [75.4, 2624.0], [75.5, 2626.0], [75.6, 2628.0], [75.7, 2628.0], [75.8, 2632.0], [75.9, 2636.0], [76.0, 2636.0], [76.1, 2637.0], [76.2, 2647.0], [76.3, 2648.0], [76.4, 2648.0], [76.5, 2654.0], [76.6, 2654.0], [76.7, 2654.0], [76.8, 2659.0], [76.9, 2661.0], [77.0, 2661.0], [77.1, 2661.0], [77.2, 2664.0], [77.3, 2665.0], [77.4, 2665.0], [77.5, 2666.0], [77.6, 2669.0], [77.7, 2669.0], [77.8, 2673.0], [77.9, 2674.0], [78.0, 2674.0], [78.1, 2678.0], [78.2, 2688.0], [78.3, 2691.0], [78.4, 2691.0], [78.5, 2695.0], [78.6, 2702.0], [78.7, 2702.0], [78.8, 2770.0], [78.9, 2773.0], [79.0, 2773.0], [79.1, 2796.0], [79.2, 2796.0], [79.3, 2811.0], [79.4, 2811.0], [79.5, 2814.0], [79.6, 2820.0], [79.7, 2820.0], [79.8, 2824.0], [79.9, 2834.0], [80.0, 2842.0], [80.1, 2842.0], [80.2, 2848.0], [80.3, 2853.0], [80.4, 2853.0], [80.5, 2861.0], [80.6, 2869.0], [80.7, 2869.0], [80.8, 2871.0], [80.9, 2916.0], [81.0, 2930.0], [81.1, 2930.0], [81.2, 2939.0], [81.3, 2942.0], [81.4, 2942.0], [81.5, 2943.0], [81.6, 2994.0], [81.7, 2994.0], [81.8, 3123.0], [81.9, 3137.0], [82.0, 3190.0], [82.1, 3190.0], [82.2, 3191.0], [82.3, 3194.0], [82.4, 3194.0], [82.5, 3201.0], [82.6, 3239.0], [82.7, 3239.0], [82.8, 3241.0], [82.9, 3241.0], [83.0, 3242.0], [83.1, 3242.0], [83.2, 3251.0], [83.3, 3266.0], [83.4, 3266.0], [83.5, 3288.0], [83.6, 3289.0], [83.7, 3289.0], [83.8, 3292.0], [83.9, 3304.0], [84.0, 3310.0], [84.1, 3310.0], [84.2, 3326.0], [84.3, 3329.0], [84.4, 3329.0], [84.5, 3330.0], [84.6, 3356.0], [84.7, 3356.0], [84.8, 3357.0], [84.9, 3381.0], [85.0, 3392.0], [85.1, 3392.0], [85.2, 3397.0], [85.3, 3422.0], [85.4, 3422.0], [85.5, 3433.0], [85.6, 3438.0], [85.7, 3438.0], [85.8, 3440.0], [85.9, 3445.0], [86.0, 3475.0], [86.1, 3475.0], [86.2, 3475.0], [86.3, 3486.0], [86.4, 3486.0], [86.5, 3492.0], [86.6, 3504.0], [86.7, 3504.0], [86.8, 3517.0], [86.9, 3557.0], [87.0, 3576.0], [87.1, 3576.0], [87.2, 3580.0], [87.3, 3590.0], [87.4, 3590.0], [87.5, 3613.0], [87.6, 3640.0], [87.7, 3640.0], [87.8, 3650.0], [87.9, 3653.0], [88.0, 3655.0], [88.1, 3655.0], [88.2, 3665.0], [88.3, 3671.0], [88.4, 3671.0], [88.5, 3698.0], [88.6, 3885.0], [88.7, 3885.0], [88.8, 3920.0], [88.9, 4036.0], [89.0, 4219.0], [89.1, 4219.0], [89.2, 4429.0], [89.3, 4547.0], [89.4, 4547.0], [89.5, 4548.0], [89.6, 4557.0], [89.7, 4557.0], [89.8, 4566.0], [89.9, 4569.0], [90.0, 4590.0], [90.1, 4590.0], [90.2, 4602.0], [90.3, 4613.0], [90.4, 4613.0], [90.5, 4719.0], [90.6, 4730.0], [90.7, 4730.0], [90.8, 4746.0], [90.9, 4751.0], [91.0, 4857.0], [91.1, 4857.0], [91.2, 4861.0], [91.3, 4862.0], [91.4, 4862.0], [91.5, 4871.0], [91.6, 4883.0], [91.7, 4883.0], [91.8, 4902.0], [91.9, 4905.0], [92.0, 4911.0], [92.1, 4911.0], [92.2, 4911.0], [92.3, 4920.0], [92.4, 4920.0], [92.5, 4920.0], [92.6, 4934.0], [92.7, 4934.0], [92.8, 4941.0], [92.9, 4945.0], [93.0, 4946.0], [93.1, 4946.0], [93.2, 4959.0], [93.3, 4964.0], [93.4, 4964.0], [93.5, 4971.0], [93.6, 4973.0], [93.7, 4973.0], [93.8, 4974.0], [93.9, 4974.0], [94.0, 4980.0], [94.1, 4980.0], [94.2, 4981.0], [94.3, 4981.0], [94.4, 4981.0], [94.5, 4988.0], [94.6, 4990.0], [94.7, 4990.0], [94.8, 5002.0], [94.9, 5015.0], [95.0, 5016.0], [95.1, 5016.0], [95.2, 5018.0], [95.3, 5023.0], [95.4, 5023.0], [95.5, 5027.0], [95.6, 5042.0], [95.7, 5042.0], [95.8, 5071.0], [95.9, 5084.0], [96.0, 5092.0], [96.1, 5092.0], [96.2, 5173.0], [96.3, 5208.0], [96.4, 5208.0], [96.5, 5219.0], [96.6, 5243.0], [96.7, 5243.0], [96.8, 5244.0], [96.9, 5256.0], [97.0, 5256.0], [97.1, 5256.0], [97.2, 5262.0], [97.3, 5262.0], [97.4, 5262.0], [97.5, 5550.0], [97.6, 5556.0], [97.7, 5556.0], [97.8, 5980.0], [97.9, 7792.0], [98.0, 7919.0], [98.1, 7919.0], [98.2, 7938.0], [98.3, 7950.0], [98.4, 7950.0], [98.5, 7977.0], [98.6, 8003.0], [98.7, 8003.0], [98.8, 8007.0], [98.9, 8021.0], [99.0, 8032.0], [99.1, 8032.0], [99.2, 8190.0], [99.3, 8437.0], [99.4, 8437.0], [99.5, 14115.0], [99.6, 14118.0], [99.7, 14118.0], [99.8, 14121.0], [99.9, 14123.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 404.0, "series": [{"data": [[8500.0, 36.0], [9000.0, 14.0], [9500.0, 26.0], [10000.0, 21.0], [10500.0, 30.0], [11000.0, 14.0], [11500.0, 17.0], [12000.0, 1.0], [14000.0, 29.0], [14500.0, 55.0], [15000.0, 15.0], [15500.0, 17.0], [1000.0, 15.0], [16000.0, 4.0], [16500.0, 60.0], [1500.0, 1.0], [2500.0, 10.0], [3000.0, 9.0], [3500.0, 19.0], [4000.0, 29.0], [4500.0, 34.0], [5000.0, 42.0], [5500.0, 97.0], [6000.0, 36.0], [6500.0, 9.0], [7500.0, 4.0], [8000.0, 56.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 390.0], [2500.0, 10.0], [3000.0, 10.0], [13500.0, 4.0], [14000.0, 1.0], [1000.0, 100.0], [4000.0, 1.0], [4500.0, 3.0], [5500.0, 1.0], [6000.0, 1.0], [1500.0, 107.0], [8000.0, 2.0], [2000.0, 16.0], [500.0, 54.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[0.0, 404.0], [2500.0, 22.0], [3000.0, 22.0], [3500.0, 3.0], [4000.0, 3.0], [1000.0, 43.0], [4500.0, 8.0], [5000.0, 2.0], [5500.0, 1.0], [1500.0, 128.0], [7000.0, 1.0], [2000.0, 28.0], [500.0, 34.0], [8000.0, 1.0]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[2500.0, 59.0], [3000.0, 34.0], [3500.0, 16.0], [14000.0, 4.0], [4000.0, 3.0], [1000.0, 236.0], [4500.0, 38.0], [5000.0, 19.0], [5500.0, 3.0], [1500.0, 187.0], [7500.0, 5.0], [500.0, 16.0], [2000.0, 74.0], [8000.0, 6.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 500, "maxX": 16500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 499.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1505.0, "series": [{"data": [[1.0, 499.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[0.0, 796.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 1505.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 439.3021428571443, "minX": 1.60814604E12, "maxY": 439.3021428571443, "series": [{"data": [[1.60814604E12, 439.3021428571443]], "isOverall": false, "label": "Slypee", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814604E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 264.0, "minX": 1.0, "maxY": 16595.285714285706, "series": [{"data": [[539.0, 10387.0], [541.0, 10496.2], [542.0, 10378.0], [540.0, 10402.0], [538.0, 10543.714285714286], [537.0, 10465.5], [536.0, 10767.90909090909], [518.0, 11328.444444444445], [516.0, 11868.0], [514.0, 11885.0], [513.0, 11897.0], [512.0, 11676.666666666666], [526.0, 10930.5], [524.0, 11155.0], [522.0, 10990.857142857143], [521.0, 10877.25], [520.0, 11029.0], [534.0, 10570.0], [533.0, 10600.0], [572.0, 9720.0], [562.0, 10646.625], [546.0, 11375.0], [545.0, 10713.0], [603.0, 9147.0], [580.0, 9684.142857142857], [579.0, 9416.0], [633.0, 9392.5], [637.0, 9475.0], [638.0, 9020.0], [635.0, 8676.0], [630.0, 9576.0], [625.0, 9464.0], [623.0, 9109.0], [622.0, 8517.0], [621.0, 8867.0], [620.0, 9514.0], [671.0, 8959.5], [651.0, 9662.0], [650.0, 9485.6], [648.0, 9354.0], [645.0, 9204.0], [643.0, 8874.0], [640.0, 8887.0], [692.0, 7332.466666666667], [696.0, 4931.913705583757], [695.0, 5449.0], [694.0, 5694.892857142855], [693.0, 6023.705882352941], [691.0, 8372.250000000004], [690.0, 8448.899999999998], [689.0, 7893.0], [686.0, 7928.5], [672.0, 8928.5], [675.0, 8847.5], [674.0, 8877.333333333334], [685.0, 8923.0], [683.0, 8943.0], [682.0, 8922.0], [681.0, 8700.666666666666], [150.0, 16595.285714285706], [159.0, 14988.854838709678], [152.0, 16059.0625], [165.0, 14921.0], [164.0, 14978.5], [162.0, 14962.666666666666], [160.0, 14853.0], [185.0, 14177.0], [204.0, 14420.5], [201.0, 14422.333333333334], [200.0, 14420.0], [218.0, 14464.857142857143], [231.0, 14373.0], [230.0, 14376.5], [229.0, 14483.5], [227.0, 14450.5], [226.0, 14509.125], [224.0, 14494.0], [232.0, 14392.0], [362.0, 1138.6666666666667], [363.0, 1255.9090909090908], [360.0, 1438.0], [415.0, 11807.0], [414.0, 11788.0], [411.0, 11852.0], [429.0, 11701.0], [465.0, 1896.0], [469.0, 10811.0], [508.0, 11992.0], [504.0, 12009.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[525.514285714285, 9125.857142857136]], "isOverall": false, "label": "HomePage-Aggregated", "isController": false}, {"data": [[2.0, 1116.0], [3.0, 1108.0], [4.0, 1110.0], [5.0, 1096.0], [6.0, 1078.0], [8.0, 341.0], [9.0, 354.0], [10.0, 373.0], [11.0, 367.0], [12.0, 367.0], [13.0, 369.0], [14.0, 337.0], [15.0, 351.0], [16.0, 342.0], [17.0, 343.0], [18.0, 370.0], [19.0, 340.0], [20.0, 341.0], [21.0, 342.0], [22.0, 358.0], [23.0, 365.0], [24.0, 349.0], [25.0, 356.0], [26.0, 340.0], [27.0, 339.0], [28.0, 337.0], [29.0, 347.0], [30.0, 344.0], [31.0, 339.0], [33.0, 337.0], [32.0, 349.0], [35.0, 337.0], [34.0, 332.0], [37.0, 336.0], [36.0, 353.0], [39.0, 338.0], [38.0, 313.0], [41.0, 302.0], [40.0, 305.0], [43.0, 276.0], [42.0, 281.0], [45.0, 275.0], [44.0, 279.0], [47.0, 264.0], [46.0, 270.0], [49.0, 271.0], [48.0, 265.0], [51.0, 364.0], [50.0, 317.0], [53.0, 336.0], [52.0, 325.0], [55.0, 337.0], [54.0, 312.0], [57.0, 318.0], [56.0, 340.0], [59.0, 350.0], [58.0, 276.0], [61.0, 354.0], [60.0, 332.0], [63.0, 279.0], [62.0, 340.0], [67.0, 336.0], [66.0, 325.0], [65.0, 640.0], [71.0, 308.0], [70.0, 312.0], [69.0, 338.0], [68.0, 293.0], [74.0, 329.0], [73.0, 327.0], [72.0, 302.0], [79.0, 304.0], [78.0, 315.0], [77.0, 295.0], [76.0, 283.0], [83.0, 931.0], [82.0, 315.0], [81.0, 301.0], [80.0, 291.0], [87.0, 417.0], [86.0, 382.0], [85.0, 514.0], [84.0, 271.0], [91.0, 427.0], [90.0, 420.0], [89.0, 433.0], [88.0, 446.0], [95.0, 426.0], [94.0, 415.0], [93.0, 450.0], [92.0, 429.0], [99.0, 481.0], [98.0, 320.0], [97.0, 425.0], [96.0, 412.0], [103.0, 288.0], [102.0, 295.0], [101.0, 406.0], [100.0, 399.0], [107.0, 395.0], [106.0, 403.0], [105.0, 392.0], [104.0, 272.0], [111.0, 639.0], [110.0, 620.0], [109.0, 457.0], [108.0, 647.0], [115.0, 594.0], [114.0, 716.0], [113.0, 606.0], [112.0, 603.0], [119.0, 595.0], [118.0, 591.0], [117.0, 605.0], [116.0, 617.0], [123.0, 585.0], [122.0, 593.0], [121.0, 589.0], [120.0, 622.0], [127.0, 578.0], [126.0, 573.0], [125.0, 580.0], [124.0, 586.0], [135.0, 575.0], [134.0, 569.0], [133.0, 583.0], [132.0, 567.0], [131.0, 581.0], [130.0, 562.0], [129.0, 414.0], [128.0, 565.0], [143.0, 565.0], [142.0, 541.0], [141.0, 541.0], [140.0, 553.0], [139.0, 568.0], [138.0, 555.0], [137.0, 552.0], [136.0, 549.0], [151.0, 269.0], [150.0, 265.0], [149.0, 280.0], [148.0, 277.0], [147.0, 306.0], [146.0, 347.0], [145.0, 366.0], [144.0, 541.0], [159.0, 1050.0], [158.0, 267.0], [157.0, 267.0], [156.0, 270.0], [155.0, 269.0], [154.0, 268.0], [153.0, 268.0], [152.0, 275.0], [167.0, 267.0], [166.0, 285.0], [165.0, 306.0], [164.0, 309.0], [163.0, 325.0], [162.0, 309.0], [161.0, 320.0], [160.0, 336.0], [175.0, 270.0], [174.0, 274.0], [173.0, 267.0], [172.0, 269.0], [171.0, 272.0], [170.0, 269.0], [169.0, 267.0], [168.0, 270.0], [183.0, 353.0], [182.0, 358.0], [181.0, 271.0], [180.0, 292.0], [179.0, 326.0], [178.0, 265.0], [177.0, 266.0], [176.0, 270.0], [191.0, 272.0], [190.0, 13905.0], [189.0, 13923.0], [188.0, 13930.0], [187.0, 13915.0], [186.0, 14155.0], [185.0, 342.0], [184.0, 312.0], [199.0, 1040.0], [198.0, 1058.0], [197.0, 266.0], [196.0, 265.0], [195.0, 264.0], [194.0, 1038.0], [193.0, 270.0], [192.0, 269.0], [207.0, 1034.0], [206.0, 1038.0], [205.0, 279.0], [204.0, 275.0], [203.0, 1055.0], [202.0, 295.0], [201.0, 1037.0], [200.0, 1041.0], [215.0, 269.0], [214.0, 269.0], [213.0, 277.0], [212.0, 278.0], [211.0, 273.0], [210.0, 1041.0], [209.0, 268.0], [208.0, 1042.0], [223.0, 1045.0], [222.0, 1053.0], [221.0, 1041.0], [220.0, 1059.0], [219.0, 268.0], [218.0, 266.0], [217.0, 270.0], [216.0, 265.0], [231.0, 268.0], [230.0, 265.0], [229.0, 267.0], [228.0, 268.0], [227.0, 1054.0], [226.0, 1084.0], [225.0, 1218.0], [224.0, 1037.0], [239.0, 338.0], [238.0, 329.0], [237.0, 319.0], [236.0, 320.0], [235.0, 336.0], [234.0, 321.0], [233.0, 268.0], [232.0, 268.0], [247.0, 307.0], [246.0, 318.0], [245.0, 311.0], [244.0, 339.0], [243.0, 336.0], [242.0, 313.0], [241.0, 315.0], [240.0, 334.0], [255.0, 294.0], [254.0, 294.0], [253.0, 274.0], [252.0, 290.0], [251.0, 304.0], [250.0, 328.0], [249.0, 321.0], [248.0, 329.0], [270.0, 1093.0], [271.0, 1050.0], [269.0, 1089.0], [268.0, 1095.0], [267.0, 1073.0], [266.0, 279.0], [265.0, 272.0], [264.0, 291.0], [263.0, 271.0], [257.0, 285.0], [256.0, 268.0], [259.0, 299.0], [258.0, 293.0], [262.0, 288.0], [261.0, 298.0], [260.0, 283.0], [286.0, 1596.0], [287.0, 1061.0], [285.0, 1055.0], [284.0, 1490.0], [283.0, 1069.0], [282.0, 1060.0], [281.0, 1035.0], [280.0, 1664.0], [279.0, 1834.0], [273.0, 1078.0], [272.0, 1072.0], [275.0, 1088.0], [274.0, 1049.0], [278.0, 1041.0], [277.0, 1908.0], [276.0, 1077.0], [302.0, 448.0], [303.0, 480.0], [301.0, 469.0], [300.0, 423.0], [299.0, 457.0], [298.0, 1044.0], [297.0, 1410.0], [296.0, 416.0], [294.0, 324.0], [289.0, 1052.0], [288.0, 1085.0], [291.0, 316.0], [290.0, 1799.0], [293.0, 1100.0], [292.0, 1046.0], [318.0, 386.0], [319.0, 407.0], [317.0, 393.0], [316.0, 2006.0], [315.0, 1043.0], [314.0, 453.0], [313.0, 390.0], [312.0, 1761.0], [311.0, 463.0], [305.0, 417.0], [304.0, 423.0], [307.0, 425.0], [306.0, 408.0], [310.0, 1033.0], [309.0, 1045.0], [308.0, 475.0], [334.0, 1305.0], [335.0, 1301.0], [333.0, 1430.0], [332.0, 382.0], [331.0, 1279.0], [330.0, 331.0], [329.0, 1416.0], [328.0, 1348.0], [327.0, 1065.0], [321.0, 426.0], [320.0, 434.0], [323.0, 1468.0], [322.0, 1370.0], [326.0, 1071.0], [325.0, 277.0], [324.0, 398.0], [350.0, 291.0], [351.0, 282.0], [349.0, 308.0], [348.0, 284.0], [347.0, 1413.0], [346.0, 324.0], [345.0, 323.0], [344.0, 320.0], [343.0, 1510.0], [337.0, 1286.0], [336.0, 1402.0], [339.0, 1197.0], [338.0, 1284.0], [342.0, 270.0], [341.0, 1246.0], [340.0, 1190.0], [364.0, 1498.0], [367.0, 423.0], [366.0, 406.0], [365.0, 528.0], [363.0, 1465.0], [359.0, 1471.0], [353.0, 4957.0], [352.0, 289.0], [355.0, 1427.0], [354.0, 270.0], [358.0, 1414.0], [357.0, 1506.0], [356.0, 1525.0], [382.0, 474.0], [383.0, 400.0], [381.0, 441.0], [380.0, 502.0], [379.0, 500.0], [378.0, 357.0], [377.0, 466.0], [376.0, 514.0], [375.0, 367.0], [369.0, 416.0], [368.0, 947.0], [371.0, 558.0], [370.0, 526.0], [374.0, 426.0], [373.0, 375.0], [372.0, 574.0], [398.0, 380.0], [399.0, 376.0], [397.0, 339.0], [396.0, 348.0], [395.0, 364.0], [394.0, 322.0], [393.0, 330.0], [392.0, 284.0], [391.0, 392.0], [385.0, 516.0], [384.0, 484.0], [387.0, 506.0], [386.0, 469.0], [390.0, 277.0], [389.0, 1427.0], [388.0, 460.0], [414.0, 292.0], [415.0, 295.0], [413.0, 272.0], [412.0, 273.0], [411.0, 268.0], [410.0, 407.0], [409.0, 374.0], [408.0, 1403.0], [407.0, 274.0], [401.0, 340.0], [400.0, 383.0], [403.0, 1324.0], [402.0, 322.0], [406.0, 282.0], [405.0, 2355.0], [404.0, 1437.0], [430.0, 1713.0], [431.0, 1915.0], [429.0, 3395.0], [428.0, 2623.0], [427.0, 3247.0], [426.0, 1395.0], [425.0, 1377.0], [424.0, 1380.0], [423.0, 1692.0], [417.0, 1412.0], [416.0, 1933.0], [419.0, 1413.0], [418.0, 1718.0], [422.0, 3301.0], [421.0, 1394.0], [420.0, 1765.0], [446.0, 3252.0], [447.0, 1769.0], [445.0, 3137.0], [444.0, 2438.0], [443.0, 1619.0], [442.0, 350.0], [441.0, 1543.0], [440.0, 442.0], [439.0, 3334.0], [433.0, 1354.0], [432.0, 1366.0], [435.0, 2522.0], [434.0, 4437.0], [438.0, 1326.0], [437.0, 409.0], [436.0, 378.0], [462.0, 1513.0], [463.0, 1834.0], [461.0, 1593.0], [460.0, 1906.0], [459.0, 1538.0], [458.0, 1841.0], [457.0, 281.0], [456.0, 1557.0], [455.0, 275.0], [449.0, 276.0], [448.0, 286.0], [451.0, 292.0], [450.0, 277.0], [454.0, 277.0], [453.0, 273.0], [452.0, 279.0], [477.0, 1466.0], [478.0, 270.0], [476.0, 1556.0], [467.0, 1500.0], [466.0, 2695.0], [465.0, 1583.0], [464.0, 1508.0], [475.0, 1473.0], [474.0, 1500.0], [473.0, 278.0], [472.0, 1492.0], [471.0, 511.0], [470.0, 1527.0], [469.0, 1722.0], [468.0, 1531.0], [494.0, 1446.0], [495.0, 1429.0], [493.0, 1436.0], [492.0, 1442.0], [491.0, 1469.0], [490.0, 1487.0], [489.0, 325.0], [488.0, 570.0], [487.0, 1457.0], [481.0, 269.0], [480.0, 348.0], [483.0, 321.0], [482.0, 1043.5], [486.0, 1680.0], [485.0, 596.0], [484.0, 1466.0], [510.0, 1580.0], [511.0, 1776.0], [509.0, 1582.0], [508.0, 1796.0], [507.0, 2608.0], [506.0, 2548.0], [505.0, 2545.0], [504.0, 2590.0], [503.0, 1635.0], [497.0, 1571.0], [496.0, 291.0], [499.0, 1683.0], [498.0, 1596.0], [502.0, 1650.0], [501.0, 1702.0], [500.0, 494.0], [540.0, 305.0], [543.0, 1793.0], [529.0, 1661.0], [528.0, 296.0], [531.0, 386.0], [530.0, 1656.0], [533.0, 1682.0], [532.0, 380.0], [542.0, 1759.0], [541.0, 2028.0], [539.0, 3154.0], [538.0, 3212.0], [537.0, 3158.0], [536.0, 320.0], [527.0, 1682.0], [512.0, 1593.0], [514.0, 2440.0], [513.0, 1698.0], [516.0, 2415.0], [515.0, 2410.0], [519.0, 1800.0], [518.0, 1426.0], [526.0, 1695.0], [525.0, 1699.0], [524.0, 1680.0], [523.0, 1693.0], [522.0, 364.0], [521.0, 1648.0], [520.0, 2366.0], [535.0, 334.0], [534.0, 1775.0], [572.0, 1754.0], [575.0, 280.0], [561.0, 1780.0], [560.0, 269.0], [563.0, 297.0], [562.0, 337.0], [565.0, 376.0], [564.0, 283.0], [574.0, 2447.0], [573.0, 2447.0], [571.0, 1726.0], [570.0, 438.0], [569.0, 2710.0], [568.0, 454.0], [559.0, 420.0], [545.0, 2000.0], [544.0, 1943.0], [547.0, 1972.0], [546.0, 1771.0], [549.0, 1871.0], [548.0, 1855.0], [551.0, 1876.0], [550.0, 1870.0], [558.0, 412.0], [557.0, 328.0], [556.0, 334.0], [555.0, 448.0], [554.0, 1908.0], [553.0, 1795.0], [552.0, 1882.0], [567.0, 1685.0], [566.0, 528.0], [604.0, 280.0], [607.0, 269.0], [593.0, 397.0], [592.0, 414.0], [595.0, 1755.0], [594.0, 1555.0], [597.0, 1530.0], [596.0, 1699.0], [606.0, 3257.0], [605.0, 265.0], [603.0, 267.0], [602.0, 270.0], [601.0, 1721.0], [600.0, 1490.0], [591.0, 1602.0], [577.0, 1707.0], [576.0, 1732.0], [579.0, 373.0], [578.0, 1698.0], [581.0, 1655.0], [580.0, 1717.0], [583.0, 1635.0], [582.0, 1653.0], [590.0, 1616.0], [589.0, 1608.0], [588.0, 1626.0], [587.0, 1636.0], [586.0, 2665.0], [585.0, 1653.0], [584.0, 2681.0], [599.0, 1503.0], [598.0, 1653.0], [636.0, 274.0], [617.0, 1099.0], [616.0, 304.0], [639.0, 369.0], [625.0, 1817.0], [624.0, 2006.0], [627.0, 266.0], [626.0, 1808.0], [629.0, 2032.0], [628.0, 270.0], [631.0, 302.0], [630.0, 2029.0], [638.0, 1776.0], [637.0, 417.0], [635.0, 264.0], [634.0, 1830.0], [633.0, 1825.0], [632.0, 281.0], [623.0, 2181.0], [608.0, 271.0], [610.0, 285.0], [609.0, 271.0], [612.0, 289.0], [611.0, 287.0], [614.0, 1949.0], [613.0, 286.0], [622.0, 319.0], [621.0, 1899.0], [620.0, 1880.0], [619.0, 1894.0], [618.0, 1889.0], [668.0, 403.0], [671.0, 298.0], [657.0, 275.0], [656.0, 468.0], [659.0, 357.0], [658.0, 299.0], [661.0, 443.0], [660.0, 301.0], [670.0, 326.0], [669.0, 394.0], [667.0, 412.0], [666.0, 429.0], [665.0, 313.0], [664.0, 421.0], [655.0, 327.0], [641.0, 365.0], [640.0, 345.0], [643.0, 278.0], [642.0, 330.0], [645.0, 306.0], [644.0, 274.0], [647.0, 310.0], [646.0, 276.0], [654.0, 283.0], [653.0, 289.0], [652.0, 291.0], [651.0, 8350.0], [650.0, 1766.0], [649.0, 8408.0], [648.0, 314.0], [663.0, 292.0], [662.0, 275.0], [688.0, 273.0], [692.0, 279.0], [696.0, 4842.0], [679.0, 287.0], [678.0, 298.0], [677.0, 273.0], [676.0, 279.0], [675.0, 325.0], [674.0, 337.0], [673.0, 338.0], [672.0, 359.0], [695.0, 4830.0], [694.0, 5917.0], [693.0, 6046.0], [691.0, 267.0], [690.0, 266.0], [689.0, 276.0], [687.0, 285.0], [686.0, 270.0], [685.0, 322.0], [684.0, 327.0], [683.0, 339.0], [682.0, 297.0], [681.0, 341.0], [680.0, 273.0], [1.0, 1119.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[350.1500000000003, 968.3628571428563]], "isOverall": false, "label": "Detail Category Page-Aggregated", "isController": false}, {"data": [[48.0, 355.404761904762], [79.0, 951.0], [82.0, 925.3333333333334], [81.0, 948.5], [104.0, 519.0], [109.0, 589.0], [115.0, 483.0], [120.0, 567.0], [127.0, 633.0], [126.0, 502.0], [124.0, 660.0], [134.0, 517.0], [133.0, 546.0], [132.0, 597.3333333333334], [131.0, 500.5], [129.0, 528.0], [143.0, 461.0], [142.0, 511.0], [140.0, 447.0], [139.0, 448.0], [137.0, 472.0], [150.0, 409.6511627906976], [147.0, 304.11111111111114], [146.0, 342.0], [145.0, 313.0], [144.0, 429.0], [152.0, 402.5], [166.0, 305.0], [165.0, 326.5], [164.0, 350.0], [162.0, 366.0], [160.0, 343.0], [174.0, 272.71428571428567], [189.0, 8154.0], [186.0, 267.0909090909091], [185.0, 447.7142857142857], [184.0, 493.0], [200.0, 1039.6666666666667], [222.0, 1053.0], [220.0, 1029.0], [219.0, 1055.8], [218.0, 463.0], [230.0, 269.0], [227.0, 266.0], [224.0, 1035.0], [247.0, 278.0], [249.0, 274.0], [266.0, 282.0], [286.0, 1822.0], [279.0, 1451.0], [276.0, 787.6666666666666], [300.0, 408.0], [289.0, 7377.0], [318.0, 1317.0], [314.0, 394.0], [312.0, 450.5], [310.0, 412.5], [309.0, 418.0], [308.0, 448.0], [330.0, 380.0], [328.0, 388.2], [327.0, 380.5], [323.0, 358.75], [322.0, 274.6666666666667], [321.0, 414.3333333333333], [320.0, 430.0], [350.0, 1412.0], [346.0, 280.0], [341.0, 275.0], [364.0, 757.6666666666666], [363.0, 291.0], [359.0, 282.0], [357.0, 1501.0], [356.0, 273.0], [354.0, 432.55555555555554], [381.0, 577.0], [377.0, 517.5], [374.0, 502.0], [371.0, 377.5], [397.0, 367.6666666666667], [398.0, 348.0], [396.0, 396.0], [395.0, 357.0], [394.0, 312.0], [393.0, 1346.0], [392.0, 284.0], [389.0, 378.5], [388.0, 2677.0], [415.0, 1451.0], [414.0, 1489.0], [404.0, 2429.0], [401.0, 367.0], [431.0, 2268.25], [429.0, 2515.5], [427.0, 1445.0], [424.0, 1956.25], [422.0, 2392.3333333333335], [446.0, 1668.0], [447.0, 2008.3333333333333], [445.0, 1854.0], [435.0, 2971.625], [443.0, 777.125], [442.0, 1157.1666666666667], [441.0, 2512.0], [439.0, 392.0], [438.0, 983.5], [437.0, 490.0], [436.0, 833.3333333333334], [463.0, 2691.0], [457.0, 1556.0], [454.0, 1922.0], [448.0, 1048.3333333333333], [477.0, 371.0], [470.0, 1475.0], [495.0, 520.0], [489.0, 279.0], [488.0, 321.0], [487.0, 415.6666666666667], [486.0, 1068.0], [483.0, 468.6666666666667], [511.0, 2534.0], [508.0, 1861.0], [502.0, 1646.0], [501.0, 1177.2], [500.0, 1699.0], [498.0, 472.6666666666667], [497.0, 903.0], [496.0, 278.0], [538.0, 3147.0], [541.0, 3596.0], [540.0, 3051.666666666667], [539.0, 1320.6], [536.0, 3523.25], [518.0, 2037.75], [516.0, 450.0], [513.0, 2441.0], [512.0, 2148.333333333333], [526.0, 1650.0], [524.0, 278.0], [523.0, 326.0], [521.0, 1773.3333333333333], [520.0, 3949.0], [574.0, 378.3333333333333], [575.0, 1511.0], [562.0, 3342.0], [573.0, 416.0], [572.0, 405.0], [569.0, 412.0], [568.0, 1195.6666666666667], [559.0, 3363.0], [551.0, 276.0], [550.0, 1823.0], [546.0, 1745.0], [545.0, 1734.0], [554.0, 1636.0], [567.0, 478.0], [566.0, 478.0], [565.0, 2503.0], [564.0, 365.3333333333333], [605.0, 281.5], [604.0, 1276.6666666666665], [606.0, 286.0], [607.0, 284.3333333333333], [603.0, 3381.0], [602.0, 1919.0], [600.0, 1831.5], [591.0, 354.0], [576.0, 2778.0], [580.0, 365.11111111111114], [579.0, 400.0], [590.0, 364.0], [586.0, 957.5], [599.0, 2286.3333333333335], [597.0, 1989.0], [595.0, 2432.5], [594.0, 2425.833333333333], [593.0, 352.0], [636.0, 1757.0], [608.0, 298.75], [620.0, 1995.0], [638.0, 1762.3333333333333], [624.0, 1931.3333333333333], [635.0, 1779.0], [633.0, 1942.6666666666667], [632.0, 286.4], [630.0, 1569.5], [628.0, 1999.0], [626.0, 1913.5], [625.0, 2628.3333333333335], [670.0, 354.25], [671.0, 314.25], [668.0, 332.0], [666.0, 424.0], [665.0, 1447.0], [645.0, 1812.0], [643.0, 1721.0], [642.0, 351.0], [661.0, 322.25], [660.0, 360.0], [659.0, 328.5], [654.0, 1336.25], [653.0, 2633.0], [651.0, 2021.9444444444443], [650.0, 1807.3333333333333], [648.0, 1826.0], [690.0, 272.0], [694.0, 5520.0], [692.0, 704.75], [691.0, 937.3333333333334], [689.0, 1313.3333333333333], [679.0, 281.0], [678.0, 1436.2222222222222], [676.0, 1822.6666666666667], [686.0, 280.5], [685.0, 1333.3333333333333], [683.0, 1116.5], [682.0, 1208.4], [681.0, 1163.9444444444441], [680.0, 901.5714285714286]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[417.8899999999997, 1038.1814285714295]], "isOverall": false, "label": "Category Page-Aggregated", "isController": false}, {"data": [[48.0, 1184.6666666666667], [150.0, 1182.4117647058824], [149.0, 1069.357142857143], [159.0, 14119.25], [152.0, 1105.780487804878], [174.0, 1041.1666666666665], [190.0, 1048.1428571428573], [189.0, 1049.0], [188.0, 1064.0], [185.0, 1050.4285714285716], [194.0, 1039.0], [193.0, 1047.0], [226.0, 1287.0], [224.0, 1337.5], [287.0, 5145.5], [279.0, 2270.0], [278.0, 2139.75], [273.0, 1067.0], [290.0, 1875.5], [328.0, 1915.0], [347.0, 4730.0], [346.0, 1797.0], [342.0, 1411.5], [336.0, 1228.0], [354.0, 1795.3333333333333], [364.0, 1851.8125000000002], [362.0, 1514.0], [359.0, 2503.666666666667], [358.0, 2215.75], [357.0, 1371.0], [356.0, 3053.0], [355.0, 1407.0], [352.0, 1657.0], [368.0, 1472.0], [392.0, 1348.0], [389.0, 1356.0], [388.0, 2774.4285714285716], [415.0, 1393.0], [405.0, 1407.0], [404.0, 1379.75], [402.0, 1405.0], [401.0, 1351.0], [431.0, 1739.0], [424.0, 2881.0], [416.0, 1428.0], [447.0, 1341.5], [446.0, 1259.0], [445.0, 1436.0], [443.0, 1385.0], [441.0, 1445.0], [436.0, 1684.0], [435.0, 3445.0], [432.0, 1682.0], [463.0, 1635.0], [459.0, 1635.0], [458.0, 1635.0], [457.0, 1597.3333333333333], [477.0, 1573.0], [472.0, 1615.0], [467.0, 3660.666666666667], [494.0, 1456.0], [491.0, 1484.3333333333333], [490.0, 1483.0], [489.0, 1477.5], [502.0, 544.0], [503.0, 544.0], [504.0, 964.0], [505.0, 548.0], [507.0, 556.0], [508.0, 559.6666666666666], [509.0, 557.0], [541.0, 3422.0], [543.0, 1676.0], [540.0, 3480.0], [539.0, 3613.0], [536.0, 1704.5], [519.0, 7950.0], [518.0, 4242.0], [512.0, 2617.5555555555557], [527.0, 1650.0], [526.0, 3232.5], [522.0, 2085.5], [521.0, 4956.5], [533.0, 1766.0], [532.0, 1729.0], [530.0, 1791.0], [528.0, 4802.5], [551.0, 3504.0], [567.0, 4751.0], [565.0, 3936.3333333333335], [562.0, 3296.619047619048], [559.0, 3356.0], [544.0, 2620.5], [550.0, 2773.0], [547.0, 2605.0], [546.0, 3034.3333333333335], [545.0, 3508.0], [606.0, 2501.0], [607.0, 4871.0], [595.0, 2139.0], [594.0, 3048.6666666666665], [604.0, 2344.0], [603.0, 2181.0], [601.0, 1735.0], [600.0, 2747.2], [588.0, 1619.0], [580.0, 2401.0], [577.0, 2455.0], [587.0, 1629.0], [586.0, 1632.0], [599.0, 2757.25], [598.0, 2441.0], [597.0, 2822.4444444444443], [596.0, 1780.0], [616.0, 530.0], [633.0, 1815.0], [628.0, 2061.0], [626.0, 2861.0], [625.0, 2415.5], [614.0, 2008.0], [613.0, 4859.0], [611.0, 4862.0], [666.0, 3877.0], [654.0, 4959.0], [653.0, 2617.0], [652.0, 2628.0], [651.0, 3590.111111111111], [650.0, 2279.1428571428573], [692.0, 3004.8043478260865], [696.0, 3328.5714285714284], [695.0, 4036.0], [694.0, 2625.6249999999995], [693.0, 3867.5], [691.0, 2474.08], [690.0, 2850.5714285714284], [689.0, 2053.3333333333335], [687.0, 1849.0], [678.0, 1769.125], [675.0, 3095.0], [686.0, 1819.8], [685.0, 1981.6], [682.0, 2805.5], [681.0, 2122.1111111111113], [680.0, 1740.5]], "isOverall": false, "label": "Detail Game Page", "isController": false}, {"data": [[463.65428571428663, 2239.0671428571436]], "isOverall": false, "label": "Detail Game Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 696.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 7921.666666666667, "minX": 1.60814604E12, "maxY": 2643165.0, "series": [{"data": [[1.60814604E12, 2643165.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.60814604E12, 7921.666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814604E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 968.3628571428563, "minX": 1.60814604E12, "maxY": 9125.857142857136, "series": [{"data": [[1.60814604E12, 9125.857142857136]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60814604E12, 968.3628571428563]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60814604E12, 1038.1814285714295]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60814604E12, 2239.0671428571436]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814604E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 775.6557142857141, "minX": 1.60814604E12, "maxY": 8606.905714285718, "series": [{"data": [[1.60814604E12, 8606.905714285718]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60814604E12, 775.6557142857141]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60814604E12, 837.7642857142847]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60814604E12, 1724.7799999999995]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814604E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 113.507142857143, "minX": 1.60814604E12, "maxY": 3408.0071428571414, "series": [{"data": [[1.60814604E12, 3408.0071428571414]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60814604E12, 113.507142857143]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60814604E12, 135.31285714285727]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60814604E12, 355.58285714285705]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814604E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 263.0, "minX": 1.60814604E12, "maxY": 16783.0, "series": [{"data": [[1.60814604E12, 16783.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.60814604E12, 263.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.60814604E12, 9726.300000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.60814604E12, 16613.94]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.60814604E12, 14525.75]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814604E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1662.5, "minX": 46.0, "maxY": 1662.5, "series": [{"data": [[46.0, 1662.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 46.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1153.5, "minX": 46.0, "maxY": 1153.5, "series": [{"data": [[46.0, 1153.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 46.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 46.666666666666664, "minX": 1.60814604E12, "maxY": 46.666666666666664, "series": [{"data": [[1.60814604E12, 46.666666666666664]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814604E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 46.666666666666664, "minX": 1.60814604E12, "maxY": 46.666666666666664, "series": [{"data": [[1.60814604E12, 46.666666666666664]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814604E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 11.666666666666666, "minX": 1.60814604E12, "maxY": 11.666666666666666, "series": [{"data": [[1.60814604E12, 11.666666666666666]], "isOverall": false, "label": "Category Page-success", "isController": false}, {"data": [[1.60814604E12, 11.666666666666666]], "isOverall": false, "label": "Detail Category Page-success", "isController": false}, {"data": [[1.60814604E12, 11.666666666666666]], "isOverall": false, "label": "Detail Game Page-success", "isController": false}, {"data": [[1.60814604E12, 11.666666666666666]], "isOverall": false, "label": "HomePage-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814604E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
