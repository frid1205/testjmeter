/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? 0 : 0;
        var yOffset = options.yaxis.mode === "time" ? 0 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 518.0, "minX": 0.0, "maxY": 17255.0, "series": [{"data": [[0.0, 522.0], [0.1, 526.0], [0.2, 529.0], [0.3, 530.0], [0.4, 533.0], [0.5, 535.0], [0.6, 536.0], [0.7, 538.0], [0.8, 539.0], [0.9, 541.0], [1.0, 542.0], [1.1, 546.0], [1.2, 548.0], [1.3, 551.0], [1.4, 554.0], [1.5, 556.0], [1.6, 560.0], [1.7, 562.0], [1.8, 565.0], [1.9, 568.0], [2.0, 572.0], [2.1, 575.0], [2.2, 577.0], [2.3, 579.0], [2.4, 582.0], [2.5, 586.0], [2.6, 590.0], [2.7, 593.0], [2.8, 597.0], [2.9, 599.0], [3.0, 602.0], [3.1, 606.0], [3.2, 609.0], [3.3, 613.0], [3.4, 618.0], [3.5, 624.0], [3.6, 630.0], [3.7, 635.0], [3.8, 637.0], [3.9, 640.0], [4.0, 646.0], [4.1, 651.0], [4.2, 657.0], [4.3, 661.0], [4.4, 667.0], [4.5, 672.0], [4.6, 678.0], [4.7, 685.0], [4.8, 691.0], [4.9, 696.0], [5.0, 701.0], [5.1, 706.0], [5.2, 712.0], [5.3, 718.0], [5.4, 725.0], [5.5, 730.0], [5.6, 734.0], [5.7, 738.0], [5.8, 743.0], [5.9, 748.0], [6.0, 753.0], [6.1, 758.0], [6.2, 764.0], [6.3, 771.0], [6.4, 777.0], [6.5, 782.0], [6.6, 785.0], [6.7, 790.0], [6.8, 795.0], [6.9, 799.0], [7.0, 802.0], [7.1, 807.0], [7.2, 812.0], [7.3, 816.0], [7.4, 820.0], [7.5, 825.0], [7.6, 828.0], [7.7, 832.0], [7.8, 838.0], [7.9, 844.0], [8.0, 849.0], [8.1, 856.0], [8.2, 861.0], [8.3, 866.0], [8.4, 872.0], [8.5, 876.0], [8.6, 881.0], [8.7, 886.0], [8.8, 890.0], [8.9, 895.0], [9.0, 902.0], [9.1, 905.0], [9.2, 909.0], [9.3, 915.0], [9.4, 921.0], [9.5, 925.0], [9.6, 928.0], [9.7, 933.0], [9.8, 939.0], [9.9, 944.0], [10.0, 947.0], [10.1, 952.0], [10.2, 957.0], [10.3, 960.0], [10.4, 964.0], [10.5, 970.0], [10.6, 974.0], [10.7, 977.0], [10.8, 981.0], [10.9, 984.0], [11.0, 988.0], [11.1, 993.0], [11.2, 997.0], [11.3, 1001.0], [11.4, 1006.0], [11.5, 1011.0], [11.6, 1017.0], [11.7, 1021.0], [11.8, 1025.0], [11.9, 1030.0], [12.0, 1037.0], [12.1, 1039.0], [12.2, 1043.0], [12.3, 1045.0], [12.4, 1047.0], [12.5, 1049.0], [12.6, 1050.0], [12.7, 1053.0], [12.8, 1055.0], [12.9, 1057.0], [13.0, 1059.0], [13.1, 1062.0], [13.2, 1064.0], [13.3, 1065.0], [13.4, 1067.0], [13.5, 1069.0], [13.6, 1070.0], [13.7, 1072.0], [13.8, 1074.0], [13.9, 1076.0], [14.0, 1078.0], [14.1, 1079.0], [14.2, 1081.0], [14.3, 1083.0], [14.4, 1084.0], [14.5, 1086.0], [14.6, 1088.0], [14.7, 1089.0], [14.8, 1091.0], [14.9, 1093.0], [15.0, 1096.0], [15.1, 1098.0], [15.2, 1099.0], [15.3, 1100.0], [15.4, 1103.0], [15.5, 1105.0], [15.6, 1106.0], [15.7, 1108.0], [15.8, 1110.0], [15.9, 1113.0], [16.0, 1114.0], [16.1, 1116.0], [16.2, 1118.0], [16.3, 1119.0], [16.4, 1121.0], [16.5, 1123.0], [16.6, 1124.0], [16.7, 1126.0], [16.8, 1128.0], [16.9, 1130.0], [17.0, 1132.0], [17.1, 1134.0], [17.2, 1135.0], [17.3, 1136.0], [17.4, 1138.0], [17.5, 1140.0], [17.6, 1141.0], [17.7, 1144.0], [17.8, 1146.0], [17.9, 1147.0], [18.0, 1149.0], [18.1, 1152.0], [18.2, 1153.0], [18.3, 1155.0], [18.4, 1157.0], [18.5, 1159.0], [18.6, 1162.0], [18.7, 1164.0], [18.8, 1166.0], [18.9, 1167.0], [19.0, 1169.0], [19.1, 1171.0], [19.2, 1174.0], [19.3, 1176.0], [19.4, 1178.0], [19.5, 1180.0], [19.6, 1182.0], [19.7, 1184.0], [19.8, 1186.0], [19.9, 1188.0], [20.0, 1190.0], [20.1, 1192.0], [20.2, 1194.0], [20.3, 1196.0], [20.4, 1198.0], [20.5, 1200.0], [20.6, 1201.0], [20.7, 1203.0], [20.8, 1205.0], [20.9, 1206.0], [21.0, 1209.0], [21.1, 1211.0], [21.2, 1213.0], [21.3, 1214.0], [21.4, 1216.0], [21.5, 1218.0], [21.6, 1220.0], [21.7, 1221.0], [21.8, 1223.0], [21.9, 1224.0], [22.0, 1226.0], [22.1, 1228.0], [22.2, 1230.0], [22.3, 1231.0], [22.4, 1233.0], [22.5, 1235.0], [22.6, 1237.0], [22.7, 1239.0], [22.8, 1240.0], [22.9, 1242.0], [23.0, 1244.0], [23.1, 1246.0], [23.2, 1247.0], [23.3, 1249.0], [23.4, 1250.0], [23.5, 1252.0], [23.6, 1253.0], [23.7, 1255.0], [23.8, 1257.0], [23.9, 1259.0], [24.0, 1260.0], [24.1, 1262.0], [24.2, 1264.0], [24.3, 1266.0], [24.4, 1267.0], [24.5, 1269.0], [24.6, 1270.0], [24.7, 1272.0], [24.8, 1273.0], [24.9, 1275.0], [25.0, 1276.0], [25.1, 1277.0], [25.2, 1278.0], [25.3, 1280.0], [25.4, 1281.0], [25.5, 1283.0], [25.6, 1284.0], [25.7, 1286.0], [25.8, 1288.0], [25.9, 1290.0], [26.0, 1291.0], [26.1, 1293.0], [26.2, 1295.0], [26.3, 1297.0], [26.4, 1298.0], [26.5, 1300.0], [26.6, 1301.0], [26.7, 1303.0], [26.8, 1304.0], [26.9, 1306.0], [27.0, 1308.0], [27.1, 1309.0], [27.2, 1310.0], [27.3, 1312.0], [27.4, 1314.0], [27.5, 1315.0], [27.6, 1316.0], [27.7, 1318.0], [27.8, 1320.0], [27.9, 1322.0], [28.0, 1324.0], [28.1, 1325.0], [28.2, 1326.0], [28.3, 1327.0], [28.4, 1329.0], [28.5, 1331.0], [28.6, 1333.0], [28.7, 1335.0], [28.8, 1337.0], [28.9, 1338.0], [29.0, 1339.0], [29.1, 1341.0], [29.2, 1343.0], [29.3, 1344.0], [29.4, 1345.0], [29.5, 1347.0], [29.6, 1348.0], [29.7, 1350.0], [29.8, 1352.0], [29.9, 1353.0], [30.0, 1354.0], [30.1, 1355.0], [30.2, 1356.0], [30.3, 1358.0], [30.4, 1359.0], [30.5, 1361.0], [30.6, 1363.0], [30.7, 1364.0], [30.8, 1365.0], [30.9, 1366.0], [31.0, 1368.0], [31.1, 1369.0], [31.2, 1371.0], [31.3, 1373.0], [31.4, 1375.0], [31.5, 1376.0], [31.6, 1378.0], [31.7, 1379.0], [31.8, 1381.0], [31.9, 1383.0], [32.0, 1384.0], [32.1, 1385.0], [32.2, 1386.0], [32.3, 1388.0], [32.4, 1389.0], [32.5, 1390.0], [32.6, 1392.0], [32.7, 1394.0], [32.8, 1395.0], [32.9, 1396.0], [33.0, 1398.0], [33.1, 1399.0], [33.2, 1401.0], [33.3, 1403.0], [33.4, 1405.0], [33.5, 1406.0], [33.6, 1408.0], [33.7, 1409.0], [33.8, 1411.0], [33.9, 1412.0], [34.0, 1413.0], [34.1, 1415.0], [34.2, 1416.0], [34.3, 1418.0], [34.4, 1420.0], [34.5, 1422.0], [34.6, 1424.0], [34.7, 1425.0], [34.8, 1427.0], [34.9, 1428.0], [35.0, 1429.0], [35.1, 1432.0], [35.2, 1433.0], [35.3, 1435.0], [35.4, 1436.0], [35.5, 1437.0], [35.6, 1439.0], [35.7, 1440.0], [35.8, 1442.0], [35.9, 1443.0], [36.0, 1445.0], [36.1, 1447.0], [36.2, 1448.0], [36.3, 1449.0], [36.4, 1451.0], [36.5, 1452.0], [36.6, 1454.0], [36.7, 1456.0], [36.8, 1457.0], [36.9, 1458.0], [37.0, 1459.0], [37.1, 1460.0], [37.2, 1461.0], [37.3, 1463.0], [37.4, 1465.0], [37.5, 1466.0], [37.6, 1467.0], [37.7, 1468.0], [37.8, 1470.0], [37.9, 1471.0], [38.0, 1473.0], [38.1, 1474.0], [38.2, 1475.0], [38.3, 1477.0], [38.4, 1478.0], [38.5, 1479.0], [38.6, 1482.0], [38.7, 1483.0], [38.8, 1484.0], [38.9, 1486.0], [39.0, 1487.0], [39.1, 1488.0], [39.2, 1490.0], [39.3, 1491.0], [39.4, 1493.0], [39.5, 1494.0], [39.6, 1495.0], [39.7, 1496.0], [39.8, 1497.0], [39.9, 1499.0], [40.0, 1500.0], [40.1, 1501.0], [40.2, 1503.0], [40.3, 1505.0], [40.4, 1506.0], [40.5, 1508.0], [40.6, 1509.0], [40.7, 1510.0], [40.8, 1512.0], [40.9, 1513.0], [41.0, 1515.0], [41.1, 1516.0], [41.2, 1518.0], [41.3, 1519.0], [41.4, 1520.0], [41.5, 1522.0], [41.6, 1523.0], [41.7, 1525.0], [41.8, 1526.0], [41.9, 1528.0], [42.0, 1529.0], [42.1, 1530.0], [42.2, 1531.0], [42.3, 1533.0], [42.4, 1534.0], [42.5, 1536.0], [42.6, 1537.0], [42.7, 1538.0], [42.8, 1540.0], [42.9, 1541.0], [43.0, 1542.0], [43.1, 1544.0], [43.2, 1545.0], [43.3, 1546.0], [43.4, 1548.0], [43.5, 1549.0], [43.6, 1550.0], [43.7, 1552.0], [43.8, 1553.0], [43.9, 1554.0], [44.0, 1555.0], [44.1, 1556.0], [44.2, 1558.0], [44.3, 1560.0], [44.4, 1562.0], [44.5, 1562.0], [44.6, 1564.0], [44.7, 1566.0], [44.8, 1567.0], [44.9, 1568.0], [45.0, 1570.0], [45.1, 1571.0], [45.2, 1572.0], [45.3, 1573.0], [45.4, 1575.0], [45.5, 1576.0], [45.6, 1577.0], [45.7, 1579.0], [45.8, 1580.0], [45.9, 1582.0], [46.0, 1583.0], [46.1, 1584.0], [46.2, 1585.0], [46.3, 1587.0], [46.4, 1589.0], [46.5, 1590.0], [46.6, 1591.0], [46.7, 1593.0], [46.8, 1595.0], [46.9, 1596.0], [47.0, 1598.0], [47.1, 1599.0], [47.2, 1601.0], [47.3, 1602.0], [47.4, 1604.0], [47.5, 1606.0], [47.6, 1607.0], [47.7, 1609.0], [47.8, 1611.0], [47.9, 1612.0], [48.0, 1614.0], [48.1, 1615.0], [48.2, 1617.0], [48.3, 1618.0], [48.4, 1620.0], [48.5, 1621.0], [48.6, 1623.0], [48.7, 1625.0], [48.8, 1626.0], [48.9, 1627.0], [49.0, 1629.0], [49.1, 1631.0], [49.2, 1632.0], [49.3, 1633.0], [49.4, 1635.0], [49.5, 1637.0], [49.6, 1638.0], [49.7, 1640.0], [49.8, 1641.0], [49.9, 1643.0], [50.0, 1644.0], [50.1, 1645.0], [50.2, 1647.0], [50.3, 1648.0], [50.4, 1650.0], [50.5, 1652.0], [50.6, 1653.0], [50.7, 1654.0], [50.8, 1656.0], [50.9, 1657.0], [51.0, 1659.0], [51.1, 1660.0], [51.2, 1661.0], [51.3, 1663.0], [51.4, 1664.0], [51.5, 1666.0], [51.6, 1667.0], [51.7, 1669.0], [51.8, 1670.0], [51.9, 1672.0], [52.0, 1674.0], [52.1, 1675.0], [52.2, 1677.0], [52.3, 1678.0], [52.4, 1679.0], [52.5, 1681.0], [52.6, 1682.0], [52.7, 1684.0], [52.8, 1685.0], [52.9, 1687.0], [53.0, 1689.0], [53.1, 1690.0], [53.2, 1692.0], [53.3, 1693.0], [53.4, 1694.0], [53.5, 1696.0], [53.6, 1697.0], [53.7, 1698.0], [53.8, 1700.0], [53.9, 1701.0], [54.0, 1702.0], [54.1, 1704.0], [54.2, 1705.0], [54.3, 1707.0], [54.4, 1708.0], [54.5, 1709.0], [54.6, 1711.0], [54.7, 1712.0], [54.8, 1713.0], [54.9, 1715.0], [55.0, 1716.0], [55.1, 1718.0], [55.2, 1719.0], [55.3, 1720.0], [55.4, 1722.0], [55.5, 1723.0], [55.6, 1725.0], [55.7, 1726.0], [55.8, 1728.0], [55.9, 1729.0], [56.0, 1731.0], [56.1, 1732.0], [56.2, 1734.0], [56.3, 1736.0], [56.4, 1737.0], [56.5, 1738.0], [56.6, 1740.0], [56.7, 1741.0], [56.8, 1742.0], [56.9, 1743.0], [57.0, 1745.0], [57.1, 1746.0], [57.2, 1748.0], [57.3, 1750.0], [57.4, 1751.0], [57.5, 1752.0], [57.6, 1753.0], [57.7, 1755.0], [57.8, 1756.0], [57.9, 1757.0], [58.0, 1759.0], [58.1, 1760.0], [58.2, 1761.0], [58.3, 1762.0], [58.4, 1764.0], [58.5, 1765.0], [58.6, 1768.0], [58.7, 1769.0], [58.8, 1770.0], [58.9, 1771.0], [59.0, 1773.0], [59.1, 1774.0], [59.2, 1776.0], [59.3, 1777.0], [59.4, 1779.0], [59.5, 1781.0], [59.6, 1782.0], [59.7, 1784.0], [59.8, 1784.0], [59.9, 1786.0], [60.0, 1787.0], [60.1, 1789.0], [60.2, 1791.0], [60.3, 1792.0], [60.4, 1793.0], [60.5, 1794.0], [60.6, 1796.0], [60.7, 1797.0], [60.8, 1798.0], [60.9, 1800.0], [61.0, 1802.0], [61.1, 1803.0], [61.2, 1804.0], [61.3, 1806.0], [61.4, 1807.0], [61.5, 1808.0], [61.6, 1809.0], [61.7, 1810.0], [61.8, 1812.0], [61.9, 1814.0], [62.0, 1815.0], [62.1, 1817.0], [62.2, 1818.0], [62.3, 1819.0], [62.4, 1820.0], [62.5, 1820.0], [62.6, 1822.0], [62.7, 1823.0], [62.8, 1824.0], [62.9, 1825.0], [63.0, 1826.0], [63.1, 1827.0], [63.2, 1829.0], [63.3, 1830.0], [63.4, 1831.0], [63.5, 1832.0], [63.6, 1833.0], [63.7, 1835.0], [63.8, 1836.0], [63.9, 1837.0], [64.0, 1838.0], [64.1, 1839.0], [64.2, 1840.0], [64.3, 1841.0], [64.4, 1843.0], [64.5, 1844.0], [64.6, 1845.0], [64.7, 1846.0], [64.8, 1846.0], [64.9, 1847.0], [65.0, 1848.0], [65.1, 1849.0], [65.2, 1850.0], [65.3, 1851.0], [65.4, 1853.0], [65.5, 1854.0], [65.6, 1855.0], [65.7, 1856.0], [65.8, 1857.0], [65.9, 1858.0], [66.0, 1859.0], [66.1, 1860.0], [66.2, 1861.0], [66.3, 1862.0], [66.4, 1863.0], [66.5, 1864.0], [66.6, 1865.0], [66.7, 1866.0], [66.8, 1867.0], [66.9, 1868.0], [67.0, 1869.0], [67.1, 1871.0], [67.2, 1872.0], [67.3, 1873.0], [67.4, 1874.0], [67.5, 1875.0], [67.6, 1876.0], [67.7, 1877.0], [67.8, 1879.0], [67.9, 1880.0], [68.0, 1881.0], [68.1, 1882.0], [68.2, 1883.0], [68.3, 1883.0], [68.4, 1885.0], [68.5, 1886.0], [68.6, 1887.0], [68.7, 1888.0], [68.8, 1888.0], [68.9, 1889.0], [69.0, 1891.0], [69.1, 1892.0], [69.2, 1894.0], [69.3, 1895.0], [69.4, 1896.0], [69.5, 1897.0], [69.6, 1899.0], [69.7, 1900.0], [69.8, 1901.0], [69.9, 1903.0], [70.0, 1904.0], [70.1, 1905.0], [70.2, 1906.0], [70.3, 1907.0], [70.4, 1908.0], [70.5, 1909.0], [70.6, 1910.0], [70.7, 1912.0], [70.8, 1913.0], [70.9, 1914.0], [71.0, 1915.0], [71.1, 1916.0], [71.2, 1918.0], [71.3, 1919.0], [71.4, 1920.0], [71.5, 1921.0], [71.6, 1922.0], [71.7, 1923.0], [71.8, 1924.0], [71.9, 1926.0], [72.0, 1927.0], [72.1, 1928.0], [72.2, 1929.0], [72.3, 1930.0], [72.4, 1932.0], [72.5, 1933.0], [72.6, 1934.0], [72.7, 1935.0], [72.8, 1936.0], [72.9, 1937.0], [73.0, 1938.0], [73.1, 1940.0], [73.2, 1940.0], [73.3, 1941.0], [73.4, 1943.0], [73.5, 1944.0], [73.6, 1946.0], [73.7, 1947.0], [73.8, 1948.0], [73.9, 1950.0], [74.0, 1951.0], [74.1, 1952.0], [74.2, 1953.0], [74.3, 1955.0], [74.4, 1956.0], [74.5, 1957.0], [74.6, 1958.0], [74.7, 1960.0], [74.8, 1961.0], [74.9, 1963.0], [75.0, 1964.0], [75.1, 1965.0], [75.2, 1966.0], [75.3, 1968.0], [75.4, 1969.0], [75.5, 1970.0], [75.6, 1972.0], [75.7, 1973.0], [75.8, 1975.0], [75.9, 1976.0], [76.0, 1977.0], [76.1, 1978.0], [76.2, 1980.0], [76.3, 1981.0], [76.4, 1983.0], [76.5, 1984.0], [76.6, 1985.0], [76.7, 1986.0], [76.8, 1988.0], [76.9, 1990.0], [77.0, 1991.0], [77.1, 1992.0], [77.2, 1994.0], [77.3, 1995.0], [77.4, 1997.0], [77.5, 1998.0], [77.6, 1999.0], [77.7, 2001.0], [77.8, 2002.0], [77.9, 2004.0], [78.0, 2006.0], [78.1, 2007.0], [78.2, 2009.0], [78.3, 2010.0], [78.4, 2012.0], [78.5, 2013.0], [78.6, 2014.0], [78.7, 2016.0], [78.8, 2018.0], [78.9, 2019.0], [79.0, 2020.0], [79.1, 2022.0], [79.2, 2023.0], [79.3, 2025.0], [79.4, 2027.0], [79.5, 2028.0], [79.6, 2030.0], [79.7, 2031.0], [79.8, 2033.0], [79.9, 2035.0], [80.0, 2036.0], [80.1, 2038.0], [80.2, 2040.0], [80.3, 2041.0], [80.4, 2043.0], [80.5, 2044.0], [80.6, 2045.0], [80.7, 2046.0], [80.8, 2048.0], [80.9, 2050.0], [81.0, 2051.0], [81.1, 2052.0], [81.2, 2054.0], [81.3, 2055.0], [81.4, 2058.0], [81.5, 2059.0], [81.6, 2062.0], [81.7, 2064.0], [81.8, 2065.0], [81.9, 2067.0], [82.0, 2069.0], [82.1, 2071.0], [82.2, 2073.0], [82.3, 2075.0], [82.4, 2076.0], [82.5, 2077.0], [82.6, 2080.0], [82.7, 2083.0], [82.8, 2085.0], [82.9, 2087.0], [83.0, 2089.0], [83.1, 2092.0], [83.2, 2094.0], [83.3, 2095.0], [83.4, 2098.0], [83.5, 2099.0], [83.6, 2101.0], [83.7, 2103.0], [83.8, 2105.0], [83.9, 2107.0], [84.0, 2109.0], [84.1, 2111.0], [84.2, 2115.0], [84.3, 2118.0], [84.4, 2120.0], [84.5, 2123.0], [84.6, 2124.0], [84.7, 2126.0], [84.8, 2129.0], [84.9, 2131.0], [85.0, 2133.0], [85.1, 2135.0], [85.2, 2137.0], [85.3, 2140.0], [85.4, 2143.0], [85.5, 2146.0], [85.6, 2148.0], [85.7, 2151.0], [85.8, 2154.0], [85.9, 2156.0], [86.0, 2158.0], [86.1, 2160.0], [86.2, 2163.0], [86.3, 2166.0], [86.4, 2168.0], [86.5, 2171.0], [86.6, 2173.0], [86.7, 2176.0], [86.8, 2179.0], [86.9, 2181.0], [87.0, 2185.0], [87.1, 2187.0], [87.2, 2190.0], [87.3, 2192.0], [87.4, 2195.0], [87.5, 2197.0], [87.6, 2200.0], [87.7, 2202.0], [87.8, 2204.0], [87.9, 2208.0], [88.0, 2211.0], [88.1, 2213.0], [88.2, 2217.0], [88.3, 2220.0], [88.4, 2223.0], [88.5, 2226.0], [88.6, 2229.0], [88.7, 2231.0], [88.8, 2234.0], [88.9, 2238.0], [89.0, 2240.0], [89.1, 2243.0], [89.2, 2246.0], [89.3, 2248.0], [89.4, 2251.0], [89.5, 2255.0], [89.6, 2259.0], [89.7, 2263.0], [89.8, 2267.0], [89.9, 2272.0], [90.0, 2276.0], [90.1, 2281.0], [90.2, 2287.0], [90.3, 2291.0], [90.4, 2296.0], [90.5, 2300.0], [90.6, 2304.0], [90.7, 2307.0], [90.8, 2311.0], [90.9, 2314.0], [91.0, 2317.0], [91.1, 2322.0], [91.2, 2325.0], [91.3, 2328.0], [91.4, 2333.0], [91.5, 2338.0], [91.6, 2341.0], [91.7, 2346.0], [91.8, 2353.0], [91.9, 2358.0], [92.0, 2362.0], [92.1, 2368.0], [92.2, 2372.0], [92.3, 2377.0], [92.4, 2383.0], [92.5, 2389.0], [92.6, 2395.0], [92.7, 2403.0], [92.8, 2410.0], [92.9, 2416.0], [93.0, 2423.0], [93.1, 2429.0], [93.2, 2435.0], [93.3, 2441.0], [93.4, 2449.0], [93.5, 2458.0], [93.6, 2467.0], [93.7, 2474.0], [93.8, 2480.0], [93.9, 2489.0], [94.0, 2497.0], [94.1, 2503.0], [94.2, 2510.0], [94.3, 2518.0], [94.4, 2525.0], [94.5, 2535.0], [94.6, 2545.0], [94.7, 2551.0], [94.8, 2557.0], [94.9, 2563.0], [95.0, 2575.0], [95.1, 2582.0], [95.2, 2591.0], [95.3, 2597.0], [95.4, 2608.0], [95.5, 2618.0], [95.6, 2628.0], [95.7, 2640.0], [95.8, 2650.0], [95.9, 2656.0], [96.0, 2665.0], [96.1, 2679.0], [96.2, 2688.0], [96.3, 2700.0], [96.4, 2718.0], [96.5, 2729.0], [96.6, 2742.0], [96.7, 2756.0], [96.8, 2767.0], [96.9, 2779.0], [97.0, 2795.0], [97.1, 2814.0], [97.2, 2832.0], [97.3, 2845.0], [97.4, 2869.0], [97.5, 2887.0], [97.6, 2906.0], [97.7, 2931.0], [97.8, 2955.0], [97.9, 2987.0], [98.0, 3021.0], [98.1, 3049.0], [98.2, 3099.0], [98.3, 3156.0], [98.4, 3198.0], [98.5, 3262.0], [98.6, 3327.0], [98.7, 3392.0], [98.8, 3495.0], [98.9, 3644.0], [99.0, 3783.0], [99.1, 3950.0], [99.2, 4168.0], [99.3, 4485.0], [99.4, 4704.0], [99.5, 5099.0], [99.6, 5314.0], [99.7, 7974.0], [99.8, 14324.0], [99.9, 14956.0], [100.0, 16703.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 520.0], [0.1, 526.0], [0.2, 528.0], [0.3, 531.0], [0.4, 533.0], [0.5, 535.0], [0.6, 537.0], [0.7, 539.0], [0.8, 541.0], [0.9, 544.0], [1.0, 546.0], [1.1, 549.0], [1.2, 551.0], [1.3, 554.0], [1.4, 556.0], [1.5, 559.0], [1.6, 562.0], [1.7, 565.0], [1.8, 567.0], [1.9, 570.0], [2.0, 572.0], [2.1, 575.0], [2.2, 580.0], [2.3, 584.0], [2.4, 587.0], [2.5, 591.0], [2.6, 594.0], [2.7, 598.0], [2.8, 602.0], [2.9, 607.0], [3.0, 610.0], [3.1, 614.0], [3.2, 618.0], [3.3, 623.0], [3.4, 626.0], [3.5, 630.0], [3.6, 635.0], [3.7, 641.0], [3.8, 644.0], [3.9, 650.0], [4.0, 654.0], [4.1, 659.0], [4.2, 664.0], [4.3, 668.0], [4.4, 673.0], [4.5, 681.0], [4.6, 687.0], [4.7, 691.0], [4.8, 695.0], [4.9, 700.0], [5.0, 706.0], [5.1, 712.0], [5.2, 716.0], [5.3, 721.0], [5.4, 726.0], [5.5, 729.0], [5.6, 735.0], [5.7, 740.0], [5.8, 745.0], [5.9, 749.0], [6.0, 754.0], [6.1, 758.0], [6.2, 762.0], [6.3, 766.0], [6.4, 770.0], [6.5, 773.0], [6.6, 777.0], [6.7, 781.0], [6.8, 786.0], [6.9, 790.0], [7.0, 794.0], [7.1, 799.0], [7.2, 804.0], [7.3, 809.0], [7.4, 812.0], [7.5, 816.0], [7.6, 822.0], [7.7, 827.0], [7.8, 832.0], [7.9, 836.0], [8.0, 841.0], [8.1, 844.0], [8.2, 851.0], [8.3, 856.0], [8.4, 864.0], [8.5, 868.0], [8.6, 873.0], [8.7, 879.0], [8.8, 883.0], [8.9, 888.0], [9.0, 894.0], [9.1, 898.0], [9.2, 902.0], [9.3, 907.0], [9.4, 912.0], [9.5, 916.0], [9.6, 922.0], [9.7, 927.0], [9.8, 931.0], [9.9, 934.0], [10.0, 939.0], [10.1, 942.0], [10.2, 948.0], [10.3, 951.0], [10.4, 955.0], [10.5, 959.0], [10.6, 964.0], [10.7, 968.0], [10.8, 971.0], [10.9, 976.0], [11.0, 980.0], [11.1, 985.0], [11.2, 990.0], [11.3, 994.0], [11.4, 999.0], [11.5, 1003.0], [11.6, 1007.0], [11.7, 1011.0], [11.8, 1014.0], [11.9, 1019.0], [12.0, 1025.0], [12.1, 1028.0], [12.2, 1033.0], [12.3, 1036.0], [12.4, 1038.0], [12.5, 1041.0], [12.6, 1044.0], [12.7, 1049.0], [12.8, 1052.0], [12.9, 1054.0], [13.0, 1056.0], [13.1, 1059.0], [13.2, 1061.0], [13.3, 1063.0], [13.4, 1066.0], [13.5, 1068.0], [13.6, 1070.0], [13.7, 1073.0], [13.8, 1076.0], [13.9, 1078.0], [14.0, 1080.0], [14.1, 1082.0], [14.2, 1084.0], [14.3, 1086.0], [14.4, 1087.0], [14.5, 1089.0], [14.6, 1091.0], [14.7, 1093.0], [14.8, 1095.0], [14.9, 1097.0], [15.0, 1101.0], [15.1, 1103.0], [15.2, 1106.0], [15.3, 1109.0], [15.4, 1111.0], [15.5, 1112.0], [15.6, 1114.0], [15.7, 1117.0], [15.8, 1118.0], [15.9, 1120.0], [16.0, 1122.0], [16.1, 1124.0], [16.2, 1126.0], [16.3, 1128.0], [16.4, 1131.0], [16.5, 1132.0], [16.6, 1134.0], [16.7, 1137.0], [16.8, 1139.0], [16.9, 1140.0], [17.0, 1142.0], [17.1, 1144.0], [17.2, 1147.0], [17.3, 1149.0], [17.4, 1151.0], [17.5, 1154.0], [17.6, 1156.0], [17.7, 1158.0], [17.8, 1161.0], [17.9, 1162.0], [18.0, 1164.0], [18.1, 1167.0], [18.2, 1170.0], [18.3, 1172.0], [18.4, 1174.0], [18.5, 1176.0], [18.6, 1179.0], [18.7, 1182.0], [18.8, 1184.0], [18.9, 1186.0], [19.0, 1188.0], [19.1, 1191.0], [19.2, 1193.0], [19.3, 1195.0], [19.4, 1197.0], [19.5, 1200.0], [19.6, 1201.0], [19.7, 1204.0], [19.8, 1205.0], [19.9, 1207.0], [20.0, 1209.0], [20.1, 1211.0], [20.2, 1213.0], [20.3, 1215.0], [20.4, 1217.0], [20.5, 1219.0], [20.6, 1220.0], [20.7, 1223.0], [20.8, 1225.0], [20.9, 1227.0], [21.0, 1229.0], [21.1, 1231.0], [21.2, 1234.0], [21.3, 1235.0], [21.4, 1237.0], [21.5, 1238.0], [21.6, 1241.0], [21.7, 1243.0], [21.8, 1246.0], [21.9, 1248.0], [22.0, 1251.0], [22.1, 1253.0], [22.2, 1255.0], [22.3, 1257.0], [22.4, 1258.0], [22.5, 1261.0], [22.6, 1263.0], [22.7, 1265.0], [22.8, 1267.0], [22.9, 1270.0], [23.0, 1272.0], [23.1, 1274.0], [23.2, 1276.0], [23.3, 1277.0], [23.4, 1280.0], [23.5, 1282.0], [23.6, 1284.0], [23.7, 1285.0], [23.8, 1287.0], [23.9, 1290.0], [24.0, 1291.0], [24.1, 1293.0], [24.2, 1295.0], [24.3, 1297.0], [24.4, 1299.0], [24.5, 1301.0], [24.6, 1302.0], [24.7, 1304.0], [24.8, 1305.0], [24.9, 1306.0], [25.0, 1307.0], [25.1, 1309.0], [25.2, 1311.0], [25.3, 1313.0], [25.4, 1314.0], [25.5, 1316.0], [25.6, 1318.0], [25.7, 1320.0], [25.8, 1322.0], [25.9, 1324.0], [26.0, 1325.0], [26.1, 1328.0], [26.2, 1329.0], [26.3, 1331.0], [26.4, 1332.0], [26.5, 1334.0], [26.6, 1335.0], [26.7, 1337.0], [26.8, 1338.0], [26.9, 1339.0], [27.0, 1340.0], [27.1, 1342.0], [27.2, 1344.0], [27.3, 1345.0], [27.4, 1347.0], [27.5, 1349.0], [27.6, 1350.0], [27.7, 1352.0], [27.8, 1353.0], [27.9, 1354.0], [28.0, 1356.0], [28.1, 1358.0], [28.2, 1359.0], [28.3, 1361.0], [28.4, 1362.0], [28.5, 1364.0], [28.6, 1366.0], [28.7, 1367.0], [28.8, 1369.0], [28.9, 1371.0], [29.0, 1373.0], [29.1, 1374.0], [29.2, 1375.0], [29.3, 1377.0], [29.4, 1378.0], [29.5, 1380.0], [29.6, 1382.0], [29.7, 1383.0], [29.8, 1385.0], [29.9, 1387.0], [30.0, 1388.0], [30.1, 1389.0], [30.2, 1390.0], [30.3, 1392.0], [30.4, 1393.0], [30.5, 1395.0], [30.6, 1397.0], [30.7, 1398.0], [30.8, 1400.0], [30.9, 1402.0], [31.0, 1403.0], [31.1, 1405.0], [31.2, 1406.0], [31.3, 1408.0], [31.4, 1410.0], [31.5, 1412.0], [31.6, 1413.0], [31.7, 1415.0], [31.8, 1416.0], [31.9, 1417.0], [32.0, 1418.0], [32.1, 1420.0], [32.2, 1422.0], [32.3, 1424.0], [32.4, 1426.0], [32.5, 1428.0], [32.6, 1430.0], [32.7, 1431.0], [32.8, 1432.0], [32.9, 1434.0], [33.0, 1435.0], [33.1, 1437.0], [33.2, 1438.0], [33.3, 1440.0], [33.4, 1442.0], [33.5, 1444.0], [33.6, 1445.0], [33.7, 1447.0], [33.8, 1448.0], [33.9, 1449.0], [34.0, 1451.0], [34.1, 1453.0], [34.2, 1454.0], [34.3, 1456.0], [34.4, 1458.0], [34.5, 1459.0], [34.6, 1460.0], [34.7, 1462.0], [34.8, 1464.0], [34.9, 1465.0], [35.0, 1466.0], [35.1, 1468.0], [35.2, 1469.0], [35.3, 1470.0], [35.4, 1472.0], [35.5, 1473.0], [35.6, 1475.0], [35.7, 1477.0], [35.8, 1478.0], [35.9, 1480.0], [36.0, 1481.0], [36.1, 1482.0], [36.2, 1484.0], [36.3, 1485.0], [36.4, 1487.0], [36.5, 1488.0], [36.6, 1490.0], [36.7, 1492.0], [36.8, 1493.0], [36.9, 1495.0], [37.0, 1497.0], [37.1, 1498.0], [37.2, 1500.0], [37.3, 1502.0], [37.4, 1503.0], [37.5, 1505.0], [37.6, 1507.0], [37.7, 1508.0], [37.8, 1510.0], [37.9, 1511.0], [38.0, 1512.0], [38.1, 1514.0], [38.2, 1516.0], [38.3, 1517.0], [38.4, 1518.0], [38.5, 1520.0], [38.6, 1521.0], [38.7, 1522.0], [38.8, 1524.0], [38.9, 1525.0], [39.0, 1527.0], [39.1, 1529.0], [39.2, 1530.0], [39.3, 1531.0], [39.4, 1533.0], [39.5, 1535.0], [39.6, 1536.0], [39.7, 1538.0], [39.8, 1539.0], [39.9, 1540.0], [40.0, 1542.0], [40.1, 1544.0], [40.2, 1545.0], [40.3, 1546.0], [40.4, 1548.0], [40.5, 1549.0], [40.6, 1551.0], [40.7, 1552.0], [40.8, 1554.0], [40.9, 1555.0], [41.0, 1556.0], [41.1, 1558.0], [41.2, 1559.0], [41.3, 1562.0], [41.4, 1563.0], [41.5, 1564.0], [41.6, 1565.0], [41.7, 1566.0], [41.8, 1568.0], [41.9, 1569.0], [42.0, 1570.0], [42.1, 1571.0], [42.2, 1573.0], [42.3, 1574.0], [42.4, 1576.0], [42.5, 1577.0], [42.6, 1578.0], [42.7, 1579.0], [42.8, 1581.0], [42.9, 1582.0], [43.0, 1584.0], [43.1, 1585.0], [43.2, 1587.0], [43.3, 1589.0], [43.4, 1590.0], [43.5, 1592.0], [43.6, 1594.0], [43.7, 1595.0], [43.8, 1597.0], [43.9, 1600.0], [44.0, 1601.0], [44.1, 1603.0], [44.2, 1605.0], [44.3, 1607.0], [44.4, 1609.0], [44.5, 1611.0], [44.6, 1612.0], [44.7, 1614.0], [44.8, 1616.0], [44.9, 1618.0], [45.0, 1620.0], [45.1, 1621.0], [45.2, 1623.0], [45.3, 1626.0], [45.4, 1628.0], [45.5, 1630.0], [45.6, 1632.0], [45.7, 1634.0], [45.8, 1636.0], [45.9, 1637.0], [46.0, 1639.0], [46.1, 1641.0], [46.2, 1642.0], [46.3, 1645.0], [46.4, 1647.0], [46.5, 1648.0], [46.6, 1650.0], [46.7, 1653.0], [46.8, 1655.0], [46.9, 1657.0], [47.0, 1659.0], [47.1, 1660.0], [47.2, 1663.0], [47.3, 1665.0], [47.4, 1666.0], [47.5, 1668.0], [47.6, 1670.0], [47.7, 1672.0], [47.8, 1674.0], [47.9, 1676.0], [48.0, 1679.0], [48.1, 1681.0], [48.2, 1684.0], [48.3, 1686.0], [48.4, 1688.0], [48.5, 1689.0], [48.6, 1691.0], [48.7, 1693.0], [48.8, 1695.0], [48.9, 1697.0], [49.0, 1700.0], [49.1, 1701.0], [49.2, 1703.0], [49.3, 1704.0], [49.4, 1706.0], [49.5, 1708.0], [49.6, 1709.0], [49.7, 1711.0], [49.8, 1713.0], [49.9, 1715.0], [50.0, 1717.0], [50.1, 1720.0], [50.2, 1721.0], [50.3, 1724.0], [50.4, 1725.0], [50.5, 1727.0], [50.6, 1729.0], [50.7, 1731.0], [50.8, 1733.0], [50.9, 1735.0], [51.0, 1736.0], [51.1, 1737.0], [51.2, 1739.0], [51.3, 1740.0], [51.4, 1742.0], [51.5, 1743.0], [51.6, 1745.0], [51.7, 1746.0], [51.8, 1748.0], [51.9, 1750.0], [52.0, 1751.0], [52.1, 1753.0], [52.2, 1755.0], [52.3, 1757.0], [52.4, 1759.0], [52.5, 1760.0], [52.6, 1762.0], [52.7, 1764.0], [52.8, 1765.0], [52.9, 1766.0], [53.0, 1767.0], [53.1, 1769.0], [53.2, 1771.0], [53.3, 1772.0], [53.4, 1774.0], [53.5, 1776.0], [53.6, 1777.0], [53.7, 1779.0], [53.8, 1780.0], [53.9, 1782.0], [54.0, 1783.0], [54.1, 1784.0], [54.2, 1786.0], [54.3, 1787.0], [54.4, 1789.0], [54.5, 1791.0], [54.6, 1792.0], [54.7, 1794.0], [54.8, 1795.0], [54.9, 1797.0], [55.0, 1798.0], [55.1, 1799.0], [55.2, 1801.0], [55.3, 1802.0], [55.4, 1804.0], [55.5, 1806.0], [55.6, 1808.0], [55.7, 1809.0], [55.8, 1810.0], [55.9, 1811.0], [56.0, 1813.0], [56.1, 1815.0], [56.2, 1816.0], [56.3, 1817.0], [56.4, 1819.0], [56.5, 1820.0], [56.6, 1822.0], [56.7, 1823.0], [56.8, 1824.0], [56.9, 1826.0], [57.0, 1827.0], [57.1, 1828.0], [57.2, 1830.0], [57.3, 1832.0], [57.4, 1833.0], [57.5, 1834.0], [57.6, 1836.0], [57.7, 1837.0], [57.8, 1839.0], [57.9, 1840.0], [58.0, 1841.0], [58.1, 1842.0], [58.2, 1843.0], [58.3, 1844.0], [58.4, 1845.0], [58.5, 1846.0], [58.6, 1847.0], [58.7, 1848.0], [58.8, 1849.0], [58.9, 1851.0], [59.0, 1852.0], [59.1, 1853.0], [59.2, 1854.0], [59.3, 1855.0], [59.4, 1856.0], [59.5, 1857.0], [59.6, 1858.0], [59.7, 1858.0], [59.8, 1859.0], [59.9, 1860.0], [60.0, 1862.0], [60.1, 1863.0], [60.2, 1864.0], [60.3, 1865.0], [60.4, 1866.0], [60.5, 1867.0], [60.6, 1869.0], [60.7, 1870.0], [60.8, 1871.0], [60.9, 1872.0], [61.0, 1873.0], [61.1, 1874.0], [61.2, 1875.0], [61.3, 1877.0], [61.4, 1878.0], [61.5, 1879.0], [61.6, 1880.0], [61.7, 1881.0], [61.8, 1882.0], [61.9, 1883.0], [62.0, 1884.0], [62.1, 1885.0], [62.2, 1886.0], [62.3, 1887.0], [62.4, 1888.0], [62.5, 1889.0], [62.6, 1890.0], [62.7, 1891.0], [62.8, 1891.0], [62.9, 1892.0], [63.0, 1893.0], [63.1, 1895.0], [63.2, 1896.0], [63.3, 1897.0], [63.4, 1898.0], [63.5, 1899.0], [63.6, 1900.0], [63.7, 1902.0], [63.8, 1903.0], [63.9, 1904.0], [64.0, 1906.0], [64.1, 1907.0], [64.2, 1908.0], [64.3, 1909.0], [64.4, 1910.0], [64.5, 1911.0], [64.6, 1912.0], [64.7, 1913.0], [64.8, 1915.0], [64.9, 1916.0], [65.0, 1917.0], [65.1, 1918.0], [65.2, 1919.0], [65.3, 1920.0], [65.4, 1921.0], [65.5, 1922.0], [65.6, 1923.0], [65.7, 1925.0], [65.8, 1925.0], [65.9, 1926.0], [66.0, 1927.0], [66.1, 1928.0], [66.2, 1929.0], [66.3, 1930.0], [66.4, 1931.0], [66.5, 1932.0], [66.6, 1933.0], [66.7, 1935.0], [66.8, 1936.0], [66.9, 1937.0], [67.0, 1938.0], [67.1, 1939.0], [67.2, 1940.0], [67.3, 1941.0], [67.4, 1942.0], [67.5, 1942.0], [67.6, 1943.0], [67.7, 1944.0], [67.8, 1945.0], [67.9, 1946.0], [68.0, 1948.0], [68.1, 1949.0], [68.2, 1950.0], [68.3, 1951.0], [68.4, 1952.0], [68.5, 1954.0], [68.6, 1955.0], [68.7, 1956.0], [68.8, 1957.0], [68.9, 1958.0], [69.0, 1959.0], [69.1, 1960.0], [69.2, 1961.0], [69.3, 1962.0], [69.4, 1963.0], [69.5, 1964.0], [69.6, 1965.0], [69.7, 1967.0], [69.8, 1968.0], [69.9, 1969.0], [70.0, 1971.0], [70.1, 1972.0], [70.2, 1974.0], [70.3, 1975.0], [70.4, 1976.0], [70.5, 1977.0], [70.6, 1978.0], [70.7, 1980.0], [70.8, 1981.0], [70.9, 1983.0], [71.0, 1984.0], [71.1, 1986.0], [71.2, 1986.0], [71.3, 1988.0], [71.4, 1989.0], [71.5, 1990.0], [71.6, 1991.0], [71.7, 1993.0], [71.8, 1995.0], [71.9, 1996.0], [72.0, 1997.0], [72.1, 1999.0], [72.2, 1999.0], [72.3, 2001.0], [72.4, 2002.0], [72.5, 2003.0], [72.6, 2005.0], [72.7, 2006.0], [72.8, 2008.0], [72.9, 2009.0], [73.0, 2011.0], [73.1, 2012.0], [73.2, 2012.0], [73.3, 2013.0], [73.4, 2015.0], [73.5, 2016.0], [73.6, 2017.0], [73.7, 2018.0], [73.8, 2019.0], [73.9, 2021.0], [74.0, 2022.0], [74.1, 2023.0], [74.2, 2025.0], [74.3, 2026.0], [74.4, 2027.0], [74.5, 2028.0], [74.6, 2030.0], [74.7, 2031.0], [74.8, 2032.0], [74.9, 2034.0], [75.0, 2035.0], [75.1, 2036.0], [75.2, 2038.0], [75.3, 2039.0], [75.4, 2040.0], [75.5, 2042.0], [75.6, 2043.0], [75.7, 2045.0], [75.8, 2046.0], [75.9, 2047.0], [76.0, 2049.0], [76.1, 2050.0], [76.2, 2052.0], [76.3, 2053.0], [76.4, 2054.0], [76.5, 2055.0], [76.6, 2057.0], [76.7, 2058.0], [76.8, 2059.0], [76.9, 2061.0], [77.0, 2062.0], [77.1, 2064.0], [77.2, 2066.0], [77.3, 2067.0], [77.4, 2069.0], [77.5, 2070.0], [77.6, 2072.0], [77.7, 2073.0], [77.8, 2075.0], [77.9, 2076.0], [78.0, 2078.0], [78.1, 2080.0], [78.2, 2081.0], [78.3, 2082.0], [78.4, 2083.0], [78.5, 2085.0], [78.6, 2087.0], [78.7, 2089.0], [78.8, 2090.0], [78.9, 2093.0], [79.0, 2095.0], [79.1, 2096.0], [79.2, 2099.0], [79.3, 2100.0], [79.4, 2101.0], [79.5, 2103.0], [79.6, 2104.0], [79.7, 2106.0], [79.8, 2107.0], [79.9, 2109.0], [80.0, 2110.0], [80.1, 2112.0], [80.2, 2114.0], [80.3, 2115.0], [80.4, 2117.0], [80.5, 2118.0], [80.6, 2120.0], [80.7, 2121.0], [80.8, 2123.0], [80.9, 2124.0], [81.0, 2126.0], [81.1, 2127.0], [81.2, 2129.0], [81.3, 2130.0], [81.4, 2132.0], [81.5, 2133.0], [81.6, 2136.0], [81.7, 2137.0], [81.8, 2138.0], [81.9, 2141.0], [82.0, 2142.0], [82.1, 2145.0], [82.2, 2146.0], [82.3, 2147.0], [82.4, 2150.0], [82.5, 2151.0], [82.6, 2154.0], [82.7, 2155.0], [82.8, 2157.0], [82.9, 2159.0], [83.0, 2161.0], [83.1, 2163.0], [83.2, 2165.0], [83.3, 2168.0], [83.4, 2169.0], [83.5, 2171.0], [83.6, 2173.0], [83.7, 2175.0], [83.8, 2176.0], [83.9, 2179.0], [84.0, 2180.0], [84.1, 2182.0], [84.2, 2184.0], [84.3, 2186.0], [84.4, 2188.0], [84.5, 2190.0], [84.6, 2192.0], [84.7, 2194.0], [84.8, 2196.0], [84.9, 2198.0], [85.0, 2200.0], [85.1, 2202.0], [85.2, 2204.0], [85.3, 2206.0], [85.4, 2207.0], [85.5, 2210.0], [85.6, 2212.0], [85.7, 2214.0], [85.8, 2216.0], [85.9, 2219.0], [86.0, 2221.0], [86.1, 2224.0], [86.2, 2226.0], [86.3, 2228.0], [86.4, 2231.0], [86.5, 2233.0], [86.6, 2237.0], [86.7, 2239.0], [86.8, 2241.0], [86.9, 2245.0], [87.0, 2247.0], [87.1, 2250.0], [87.2, 2253.0], [87.3, 2255.0], [87.4, 2257.0], [87.5, 2260.0], [87.6, 2261.0], [87.7, 2265.0], [87.8, 2267.0], [87.9, 2270.0], [88.0, 2273.0], [88.1, 2275.0], [88.2, 2278.0], [88.3, 2281.0], [88.4, 2284.0], [88.5, 2287.0], [88.6, 2290.0], [88.7, 2293.0], [88.8, 2296.0], [88.9, 2299.0], [89.0, 2305.0], [89.1, 2307.0], [89.2, 2310.0], [89.3, 2314.0], [89.4, 2319.0], [89.5, 2322.0], [89.6, 2325.0], [89.7, 2328.0], [89.8, 2331.0], [89.9, 2334.0], [90.0, 2339.0], [90.1, 2343.0], [90.2, 2346.0], [90.3, 2351.0], [90.4, 2355.0], [90.5, 2358.0], [90.6, 2362.0], [90.7, 2366.0], [90.8, 2371.0], [90.9, 2374.0], [91.0, 2378.0], [91.1, 2382.0], [91.2, 2385.0], [91.3, 2390.0], [91.4, 2395.0], [91.5, 2398.0], [91.6, 2401.0], [91.7, 2406.0], [91.8, 2411.0], [91.9, 2415.0], [92.0, 2420.0], [92.1, 2425.0], [92.2, 2430.0], [92.3, 2435.0], [92.4, 2440.0], [92.5, 2445.0], [92.6, 2450.0], [92.7, 2454.0], [92.8, 2459.0], [92.9, 2464.0], [93.0, 2470.0], [93.1, 2478.0], [93.2, 2486.0], [93.3, 2493.0], [93.4, 2498.0], [93.5, 2504.0], [93.6, 2511.0], [93.7, 2519.0], [93.8, 2523.0], [93.9, 2532.0], [94.0, 2540.0], [94.1, 2545.0], [94.2, 2551.0], [94.3, 2558.0], [94.4, 2565.0], [94.5, 2574.0], [94.6, 2581.0], [94.7, 2588.0], [94.8, 2598.0], [94.9, 2603.0], [95.0, 2612.0], [95.1, 2625.0], [95.2, 2633.0], [95.3, 2643.0], [95.4, 2650.0], [95.5, 2656.0], [95.6, 2667.0], [95.7, 2676.0], [95.8, 2682.0], [95.9, 2696.0], [96.0, 2706.0], [96.1, 2714.0], [96.2, 2725.0], [96.3, 2735.0], [96.4, 2746.0], [96.5, 2753.0], [96.6, 2764.0], [96.7, 2775.0], [96.8, 2792.0], [96.9, 2804.0], [97.0, 2815.0], [97.1, 2825.0], [97.2, 2841.0], [97.3, 2854.0], [97.4, 2871.0], [97.5, 2887.0], [97.6, 2901.0], [97.7, 2913.0], [97.8, 2934.0], [97.9, 2954.0], [98.0, 2977.0], [98.1, 3002.0], [98.2, 3018.0], [98.3, 3046.0], [98.4, 3068.0], [98.5, 3091.0], [98.6, 3107.0], [98.7, 3134.0], [98.8, 3167.0], [98.9, 3205.0], [99.0, 3246.0], [99.1, 3278.0], [99.2, 3335.0], [99.3, 3391.0], [99.4, 3487.0], [99.5, 3540.0], [99.6, 3623.0], [99.7, 3710.0], [99.8, 3928.0], [99.9, 4377.0], [100.0, 17214.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[0.0, 519.0], [0.1, 526.0], [0.2, 528.0], [0.3, 530.0], [0.4, 532.0], [0.5, 534.0], [0.6, 536.0], [0.7, 537.0], [0.8, 539.0], [0.9, 542.0], [1.0, 544.0], [1.1, 547.0], [1.2, 550.0], [1.3, 553.0], [1.4, 556.0], [1.5, 559.0], [1.6, 562.0], [1.7, 566.0], [1.8, 569.0], [1.9, 573.0], [2.0, 576.0], [2.1, 579.0], [2.2, 584.0], [2.3, 586.0], [2.4, 590.0], [2.5, 596.0], [2.6, 600.0], [2.7, 604.0], [2.8, 609.0], [2.9, 613.0], [3.0, 618.0], [3.1, 622.0], [3.2, 627.0], [3.3, 631.0], [3.4, 638.0], [3.5, 642.0], [3.6, 646.0], [3.7, 651.0], [3.8, 657.0], [3.9, 661.0], [4.0, 665.0], [4.1, 669.0], [4.2, 673.0], [4.3, 677.0], [4.4, 681.0], [4.5, 686.0], [4.6, 689.0], [4.7, 695.0], [4.8, 698.0], [4.9, 702.0], [5.0, 708.0], [5.1, 713.0], [5.2, 717.0], [5.3, 722.0], [5.4, 730.0], [5.5, 735.0], [5.6, 738.0], [5.7, 743.0], [5.8, 747.0], [5.9, 752.0], [6.0, 758.0], [6.1, 762.0], [6.2, 767.0], [6.3, 773.0], [6.4, 777.0], [6.5, 783.0], [6.6, 789.0], [6.7, 797.0], [6.8, 802.0], [6.9, 808.0], [7.0, 813.0], [7.1, 816.0], [7.2, 821.0], [7.3, 825.0], [7.4, 831.0], [7.5, 836.0], [7.6, 841.0], [7.7, 848.0], [7.8, 853.0], [7.9, 857.0], [8.0, 861.0], [8.1, 865.0], [8.2, 869.0], [8.3, 875.0], [8.4, 879.0], [8.5, 884.0], [8.6, 889.0], [8.7, 894.0], [8.8, 900.0], [8.9, 906.0], [9.0, 910.0], [9.1, 913.0], [9.2, 917.0], [9.3, 922.0], [9.4, 929.0], [9.5, 935.0], [9.6, 939.0], [9.7, 945.0], [9.8, 950.0], [9.9, 955.0], [10.0, 959.0], [10.1, 964.0], [10.2, 967.0], [10.3, 971.0], [10.4, 976.0], [10.5, 980.0], [10.6, 985.0], [10.7, 989.0], [10.8, 993.0], [10.9, 996.0], [11.0, 1000.0], [11.1, 1003.0], [11.2, 1009.0], [11.3, 1013.0], [11.4, 1017.0], [11.5, 1021.0], [11.6, 1024.0], [11.7, 1030.0], [11.8, 1034.0], [11.9, 1037.0], [12.0, 1041.0], [12.1, 1043.0], [12.2, 1045.0], [12.3, 1049.0], [12.4, 1052.0], [12.5, 1054.0], [12.6, 1056.0], [12.7, 1059.0], [12.8, 1062.0], [12.9, 1063.0], [13.0, 1065.0], [13.1, 1068.0], [13.2, 1070.0], [13.3, 1073.0], [13.4, 1075.0], [13.5, 1078.0], [13.6, 1079.0], [13.7, 1082.0], [13.8, 1085.0], [13.9, 1087.0], [14.0, 1089.0], [14.1, 1091.0], [14.2, 1093.0], [14.3, 1096.0], [14.4, 1098.0], [14.5, 1100.0], [14.6, 1101.0], [14.7, 1103.0], [14.8, 1105.0], [14.9, 1107.0], [15.0, 1109.0], [15.1, 1111.0], [15.2, 1114.0], [15.3, 1116.0], [15.4, 1118.0], [15.5, 1120.0], [15.6, 1122.0], [15.7, 1125.0], [15.8, 1127.0], [15.9, 1129.0], [16.0, 1131.0], [16.1, 1133.0], [16.2, 1135.0], [16.3, 1137.0], [16.4, 1139.0], [16.5, 1141.0], [16.6, 1143.0], [16.7, 1145.0], [16.8, 1149.0], [16.9, 1151.0], [17.0, 1153.0], [17.1, 1156.0], [17.2, 1158.0], [17.3, 1161.0], [17.4, 1163.0], [17.5, 1166.0], [17.6, 1169.0], [17.7, 1171.0], [17.8, 1174.0], [17.9, 1176.0], [18.0, 1178.0], [18.1, 1181.0], [18.2, 1182.0], [18.3, 1184.0], [18.4, 1186.0], [18.5, 1189.0], [18.6, 1191.0], [18.7, 1193.0], [18.8, 1195.0], [18.9, 1196.0], [19.0, 1199.0], [19.1, 1201.0], [19.2, 1204.0], [19.3, 1206.0], [19.4, 1208.0], [19.5, 1210.0], [19.6, 1213.0], [19.7, 1215.0], [19.8, 1218.0], [19.9, 1220.0], [20.0, 1222.0], [20.1, 1223.0], [20.2, 1225.0], [20.3, 1227.0], [20.4, 1230.0], [20.5, 1233.0], [20.6, 1236.0], [20.7, 1237.0], [20.8, 1239.0], [20.9, 1240.0], [21.0, 1242.0], [21.1, 1244.0], [21.2, 1246.0], [21.3, 1248.0], [21.4, 1250.0], [21.5, 1251.0], [21.6, 1253.0], [21.7, 1255.0], [21.8, 1257.0], [21.9, 1259.0], [22.0, 1262.0], [22.1, 1263.0], [22.2, 1265.0], [22.3, 1268.0], [22.4, 1270.0], [22.5, 1273.0], [22.6, 1275.0], [22.7, 1277.0], [22.8, 1279.0], [22.9, 1281.0], [23.0, 1282.0], [23.1, 1284.0], [23.2, 1286.0], [23.3, 1287.0], [23.4, 1289.0], [23.5, 1290.0], [23.6, 1293.0], [23.7, 1294.0], [23.8, 1297.0], [23.9, 1299.0], [24.0, 1301.0], [24.1, 1303.0], [24.2, 1305.0], [24.3, 1307.0], [24.4, 1309.0], [24.5, 1312.0], [24.6, 1314.0], [24.7, 1316.0], [24.8, 1317.0], [24.9, 1319.0], [25.0, 1321.0], [25.1, 1323.0], [25.2, 1324.0], [25.3, 1326.0], [25.4, 1327.0], [25.5, 1329.0], [25.6, 1330.0], [25.7, 1332.0], [25.8, 1334.0], [25.9, 1336.0], [26.0, 1338.0], [26.1, 1339.0], [26.2, 1341.0], [26.3, 1343.0], [26.4, 1344.0], [26.5, 1346.0], [26.6, 1348.0], [26.7, 1349.0], [26.8, 1350.0], [26.9, 1352.0], [27.0, 1354.0], [27.1, 1356.0], [27.2, 1357.0], [27.3, 1359.0], [27.4, 1361.0], [27.5, 1363.0], [27.6, 1364.0], [27.7, 1366.0], [27.8, 1367.0], [27.9, 1369.0], [28.0, 1371.0], [28.1, 1372.0], [28.2, 1373.0], [28.3, 1374.0], [28.4, 1377.0], [28.5, 1378.0], [28.6, 1379.0], [28.7, 1381.0], [28.8, 1383.0], [28.9, 1385.0], [29.0, 1386.0], [29.1, 1388.0], [29.2, 1390.0], [29.3, 1391.0], [29.4, 1393.0], [29.5, 1394.0], [29.6, 1396.0], [29.7, 1397.0], [29.8, 1398.0], [29.9, 1400.0], [30.0, 1402.0], [30.1, 1403.0], [30.2, 1405.0], [30.3, 1407.0], [30.4, 1409.0], [30.5, 1410.0], [30.6, 1412.0], [30.7, 1413.0], [30.8, 1414.0], [30.9, 1416.0], [31.0, 1417.0], [31.1, 1420.0], [31.2, 1421.0], [31.3, 1422.0], [31.4, 1424.0], [31.5, 1425.0], [31.6, 1427.0], [31.7, 1428.0], [31.8, 1430.0], [31.9, 1431.0], [32.0, 1433.0], [32.1, 1435.0], [32.2, 1436.0], [32.3, 1438.0], [32.4, 1440.0], [32.5, 1441.0], [32.6, 1443.0], [32.7, 1444.0], [32.8, 1445.0], [32.9, 1447.0], [33.0, 1448.0], [33.1, 1450.0], [33.2, 1453.0], [33.3, 1454.0], [33.4, 1456.0], [33.5, 1458.0], [33.6, 1459.0], [33.7, 1461.0], [33.8, 1463.0], [33.9, 1464.0], [34.0, 1465.0], [34.1, 1467.0], [34.2, 1468.0], [34.3, 1470.0], [34.4, 1472.0], [34.5, 1473.0], [34.6, 1474.0], [34.7, 1476.0], [34.8, 1478.0], [34.9, 1479.0], [35.0, 1481.0], [35.1, 1482.0], [35.2, 1483.0], [35.3, 1485.0], [35.4, 1487.0], [35.5, 1489.0], [35.6, 1490.0], [35.7, 1491.0], [35.8, 1493.0], [35.9, 1494.0], [36.0, 1497.0], [36.1, 1498.0], [36.2, 1500.0], [36.3, 1502.0], [36.4, 1503.0], [36.5, 1505.0], [36.6, 1506.0], [36.7, 1508.0], [36.8, 1509.0], [36.9, 1510.0], [37.0, 1512.0], [37.1, 1513.0], [37.2, 1515.0], [37.3, 1516.0], [37.4, 1518.0], [37.5, 1520.0], [37.6, 1521.0], [37.7, 1523.0], [37.8, 1524.0], [37.9, 1526.0], [38.0, 1528.0], [38.1, 1530.0], [38.2, 1531.0], [38.3, 1532.0], [38.4, 1534.0], [38.5, 1535.0], [38.6, 1536.0], [38.7, 1537.0], [38.8, 1540.0], [38.9, 1541.0], [39.0, 1544.0], [39.1, 1545.0], [39.2, 1546.0], [39.3, 1548.0], [39.4, 1550.0], [39.5, 1551.0], [39.6, 1552.0], [39.7, 1554.0], [39.8, 1555.0], [39.9, 1557.0], [40.0, 1558.0], [40.1, 1559.0], [40.2, 1561.0], [40.3, 1562.0], [40.4, 1564.0], [40.5, 1565.0], [40.6, 1566.0], [40.7, 1568.0], [40.8, 1570.0], [40.9, 1571.0], [41.0, 1574.0], [41.1, 1575.0], [41.2, 1577.0], [41.3, 1579.0], [41.4, 1581.0], [41.5, 1582.0], [41.6, 1584.0], [41.7, 1585.0], [41.8, 1587.0], [41.9, 1588.0], [42.0, 1590.0], [42.1, 1591.0], [42.2, 1594.0], [42.3, 1596.0], [42.4, 1597.0], [42.5, 1599.0], [42.6, 1600.0], [42.7, 1602.0], [42.8, 1604.0], [42.9, 1605.0], [43.0, 1607.0], [43.1, 1609.0], [43.2, 1611.0], [43.3, 1613.0], [43.4, 1615.0], [43.5, 1617.0], [43.6, 1618.0], [43.7, 1620.0], [43.8, 1622.0], [43.9, 1623.0], [44.0, 1625.0], [44.1, 1626.0], [44.2, 1628.0], [44.3, 1629.0], [44.4, 1630.0], [44.5, 1632.0], [44.6, 1633.0], [44.7, 1635.0], [44.8, 1636.0], [44.9, 1638.0], [45.0, 1639.0], [45.1, 1641.0], [45.2, 1642.0], [45.3, 1644.0], [45.4, 1645.0], [45.5, 1646.0], [45.6, 1648.0], [45.7, 1650.0], [45.8, 1651.0], [45.9, 1652.0], [46.0, 1654.0], [46.1, 1655.0], [46.2, 1657.0], [46.3, 1658.0], [46.4, 1660.0], [46.5, 1661.0], [46.6, 1662.0], [46.7, 1664.0], [46.8, 1666.0], [46.9, 1668.0], [47.0, 1670.0], [47.1, 1671.0], [47.2, 1673.0], [47.3, 1674.0], [47.4, 1676.0], [47.5, 1677.0], [47.6, 1678.0], [47.7, 1680.0], [47.8, 1681.0], [47.9, 1682.0], [48.0, 1683.0], [48.1, 1685.0], [48.2, 1686.0], [48.3, 1688.0], [48.4, 1689.0], [48.5, 1690.0], [48.6, 1692.0], [48.7, 1693.0], [48.8, 1694.0], [48.9, 1696.0], [49.0, 1697.0], [49.1, 1698.0], [49.2, 1701.0], [49.3, 1702.0], [49.4, 1703.0], [49.5, 1705.0], [49.6, 1707.0], [49.7, 1707.0], [49.8, 1709.0], [49.9, 1711.0], [50.0, 1712.0], [50.1, 1713.0], [50.2, 1715.0], [50.3, 1716.0], [50.4, 1717.0], [50.5, 1719.0], [50.6, 1720.0], [50.7, 1722.0], [50.8, 1723.0], [50.9, 1724.0], [51.0, 1725.0], [51.1, 1727.0], [51.2, 1729.0], [51.3, 1730.0], [51.4, 1731.0], [51.5, 1733.0], [51.6, 1734.0], [51.7, 1735.0], [51.8, 1737.0], [51.9, 1738.0], [52.0, 1739.0], [52.1, 1740.0], [52.2, 1741.0], [52.3, 1742.0], [52.4, 1743.0], [52.5, 1745.0], [52.6, 1746.0], [52.7, 1747.0], [52.8, 1748.0], [52.9, 1749.0], [53.0, 1751.0], [53.1, 1752.0], [53.2, 1754.0], [53.3, 1755.0], [53.4, 1756.0], [53.5, 1758.0], [53.6, 1759.0], [53.7, 1760.0], [53.8, 1761.0], [53.9, 1763.0], [54.0, 1764.0], [54.1, 1765.0], [54.2, 1766.0], [54.3, 1767.0], [54.4, 1768.0], [54.5, 1769.0], [54.6, 1770.0], [54.7, 1771.0], [54.8, 1773.0], [54.9, 1774.0], [55.0, 1776.0], [55.1, 1777.0], [55.2, 1778.0], [55.3, 1780.0], [55.4, 1781.0], [55.5, 1782.0], [55.6, 1783.0], [55.7, 1784.0], [55.8, 1786.0], [55.9, 1787.0], [56.0, 1788.0], [56.1, 1789.0], [56.2, 1791.0], [56.3, 1793.0], [56.4, 1794.0], [56.5, 1795.0], [56.6, 1796.0], [56.7, 1798.0], [56.8, 1798.0], [56.9, 1799.0], [57.0, 1800.0], [57.1, 1801.0], [57.2, 1803.0], [57.3, 1804.0], [57.4, 1805.0], [57.5, 1806.0], [57.6, 1807.0], [57.7, 1808.0], [57.8, 1809.0], [57.9, 1810.0], [58.0, 1812.0], [58.1, 1813.0], [58.2, 1814.0], [58.3, 1815.0], [58.4, 1816.0], [58.5, 1817.0], [58.6, 1818.0], [58.7, 1819.0], [58.8, 1821.0], [58.9, 1821.0], [59.0, 1822.0], [59.1, 1824.0], [59.2, 1825.0], [59.3, 1826.0], [59.4, 1827.0], [59.5, 1828.0], [59.6, 1829.0], [59.7, 1830.0], [59.8, 1831.0], [59.9, 1832.0], [60.0, 1833.0], [60.1, 1834.0], [60.2, 1835.0], [60.3, 1836.0], [60.4, 1837.0], [60.5, 1838.0], [60.6, 1839.0], [60.7, 1840.0], [60.8, 1841.0], [60.9, 1842.0], [61.0, 1843.0], [61.1, 1844.0], [61.2, 1845.0], [61.3, 1846.0], [61.4, 1847.0], [61.5, 1848.0], [61.6, 1849.0], [61.7, 1850.0], [61.8, 1851.0], [61.9, 1853.0], [62.0, 1854.0], [62.1, 1855.0], [62.2, 1856.0], [62.3, 1857.0], [62.4, 1858.0], [62.5, 1858.0], [62.6, 1859.0], [62.7, 1860.0], [62.8, 1861.0], [62.9, 1862.0], [63.0, 1863.0], [63.1, 1864.0], [63.2, 1864.0], [63.3, 1865.0], [63.4, 1866.0], [63.5, 1866.0], [63.6, 1867.0], [63.7, 1868.0], [63.8, 1869.0], [63.9, 1870.0], [64.0, 1871.0], [64.1, 1872.0], [64.2, 1873.0], [64.3, 1873.0], [64.4, 1874.0], [64.5, 1875.0], [64.6, 1876.0], [64.7, 1877.0], [64.8, 1878.0], [64.9, 1879.0], [65.0, 1880.0], [65.1, 1880.0], [65.2, 1881.0], [65.3, 1882.0], [65.4, 1883.0], [65.5, 1884.0], [65.6, 1885.0], [65.7, 1886.0], [65.8, 1887.0], [65.9, 1888.0], [66.0, 1890.0], [66.1, 1890.0], [66.2, 1891.0], [66.3, 1892.0], [66.4, 1893.0], [66.5, 1895.0], [66.6, 1896.0], [66.7, 1897.0], [66.8, 1897.0], [66.9, 1898.0], [67.0, 1899.0], [67.1, 1900.0], [67.2, 1901.0], [67.3, 1901.0], [67.4, 1902.0], [67.5, 1903.0], [67.6, 1904.0], [67.7, 1905.0], [67.8, 1906.0], [67.9, 1907.0], [68.0, 1908.0], [68.1, 1908.0], [68.2, 1909.0], [68.3, 1910.0], [68.4, 1912.0], [68.5, 1912.0], [68.6, 1913.0], [68.7, 1914.0], [68.8, 1915.0], [68.9, 1916.0], [69.0, 1917.0], [69.1, 1918.0], [69.2, 1919.0], [69.3, 1920.0], [69.4, 1921.0], [69.5, 1922.0], [69.6, 1922.0], [69.7, 1923.0], [69.8, 1924.0], [69.9, 1925.0], [70.0, 1926.0], [70.1, 1927.0], [70.2, 1928.0], [70.3, 1929.0], [70.4, 1930.0], [70.5, 1931.0], [70.6, 1932.0], [70.7, 1933.0], [70.8, 1934.0], [70.9, 1935.0], [71.0, 1936.0], [71.1, 1937.0], [71.2, 1938.0], [71.3, 1939.0], [71.4, 1940.0], [71.5, 1940.0], [71.6, 1941.0], [71.7, 1943.0], [71.8, 1943.0], [71.9, 1945.0], [72.0, 1946.0], [72.1, 1947.0], [72.2, 1948.0], [72.3, 1949.0], [72.4, 1951.0], [72.5, 1952.0], [72.6, 1953.0], [72.7, 1954.0], [72.8, 1955.0], [72.9, 1956.0], [73.0, 1957.0], [73.1, 1958.0], [73.2, 1959.0], [73.3, 1961.0], [73.4, 1962.0], [73.5, 1963.0], [73.6, 1964.0], [73.7, 1965.0], [73.8, 1966.0], [73.9, 1967.0], [74.0, 1969.0], [74.1, 1970.0], [74.2, 1971.0], [74.3, 1972.0], [74.4, 1973.0], [74.5, 1975.0], [74.6, 1976.0], [74.7, 1977.0], [74.8, 1978.0], [74.9, 1980.0], [75.0, 1981.0], [75.1, 1982.0], [75.2, 1984.0], [75.3, 1984.0], [75.4, 1986.0], [75.5, 1987.0], [75.6, 1988.0], [75.7, 1989.0], [75.8, 1990.0], [75.9, 1993.0], [76.0, 1994.0], [76.1, 1995.0], [76.2, 1996.0], [76.3, 1998.0], [76.4, 1999.0], [76.5, 2000.0], [76.6, 2001.0], [76.7, 2002.0], [76.8, 2003.0], [76.9, 2005.0], [77.0, 2006.0], [77.1, 2007.0], [77.2, 2008.0], [77.3, 2009.0], [77.4, 2010.0], [77.5, 2011.0], [77.6, 2013.0], [77.7, 2014.0], [77.8, 2016.0], [77.9, 2017.0], [78.0, 2018.0], [78.1, 2019.0], [78.2, 2020.0], [78.3, 2021.0], [78.4, 2022.0], [78.5, 2023.0], [78.6, 2025.0], [78.7, 2026.0], [78.8, 2027.0], [78.9, 2029.0], [79.0, 2030.0], [79.1, 2032.0], [79.2, 2033.0], [79.3, 2034.0], [79.4, 2036.0], [79.5, 2037.0], [79.6, 2039.0], [79.7, 2040.0], [79.8, 2041.0], [79.9, 2042.0], [80.0, 2043.0], [80.1, 2045.0], [80.2, 2046.0], [80.3, 2048.0], [80.4, 2049.0], [80.5, 2050.0], [80.6, 2052.0], [80.7, 2053.0], [80.8, 2054.0], [80.9, 2056.0], [81.0, 2058.0], [81.1, 2060.0], [81.2, 2061.0], [81.3, 2063.0], [81.4, 2065.0], [81.5, 2066.0], [81.6, 2068.0], [81.7, 2069.0], [81.8, 2070.0], [81.9, 2072.0], [82.0, 2074.0], [82.1, 2075.0], [82.2, 2077.0], [82.3, 2078.0], [82.4, 2080.0], [82.5, 2081.0], [82.6, 2083.0], [82.7, 2084.0], [82.8, 2086.0], [82.9, 2087.0], [83.0, 2089.0], [83.1, 2091.0], [83.2, 2093.0], [83.3, 2095.0], [83.4, 2097.0], [83.5, 2099.0], [83.6, 2101.0], [83.7, 2102.0], [83.8, 2104.0], [83.9, 2106.0], [84.0, 2108.0], [84.1, 2111.0], [84.2, 2113.0], [84.3, 2114.0], [84.4, 2116.0], [84.5, 2118.0], [84.6, 2120.0], [84.7, 2122.0], [84.8, 2124.0], [84.9, 2127.0], [85.0, 2130.0], [85.1, 2132.0], [85.2, 2135.0], [85.3, 2137.0], [85.4, 2139.0], [85.5, 2141.0], [85.6, 2143.0], [85.7, 2145.0], [85.8, 2147.0], [85.9, 2150.0], [86.0, 2153.0], [86.1, 2154.0], [86.2, 2156.0], [86.3, 2158.0], [86.4, 2161.0], [86.5, 2164.0], [86.6, 2168.0], [86.7, 2170.0], [86.8, 2173.0], [86.9, 2175.0], [87.0, 2178.0], [87.1, 2183.0], [87.2, 2185.0], [87.3, 2187.0], [87.4, 2189.0], [87.5, 2192.0], [87.6, 2194.0], [87.7, 2197.0], [87.8, 2200.0], [87.9, 2203.0], [88.0, 2206.0], [88.1, 2209.0], [88.2, 2212.0], [88.3, 2215.0], [88.4, 2218.0], [88.5, 2222.0], [88.6, 2224.0], [88.7, 2226.0], [88.8, 2229.0], [88.9, 2233.0], [89.0, 2236.0], [89.1, 2239.0], [89.2, 2242.0], [89.3, 2245.0], [89.4, 2249.0], [89.5, 2252.0], [89.6, 2255.0], [89.7, 2260.0], [89.8, 2264.0], [89.9, 2268.0], [90.0, 2270.0], [90.1, 2273.0], [90.2, 2277.0], [90.3, 2282.0], [90.4, 2286.0], [90.5, 2289.0], [90.6, 2294.0], [90.7, 2298.0], [90.8, 2301.0], [90.9, 2307.0], [91.0, 2310.0], [91.1, 2315.0], [91.2, 2318.0], [91.3, 2322.0], [91.4, 2328.0], [91.5, 2334.0], [91.6, 2338.0], [91.7, 2345.0], [91.8, 2350.0], [91.9, 2357.0], [92.0, 2362.0], [92.1, 2367.0], [92.2, 2372.0], [92.3, 2380.0], [92.4, 2389.0], [92.5, 2394.0], [92.6, 2400.0], [92.7, 2405.0], [92.8, 2413.0], [92.9, 2417.0], [93.0, 2424.0], [93.1, 2428.0], [93.2, 2434.0], [93.3, 2440.0], [93.4, 2449.0], [93.5, 2455.0], [93.6, 2465.0], [93.7, 2471.0], [93.8, 2479.0], [93.9, 2488.0], [94.0, 2494.0], [94.1, 2505.0], [94.2, 2514.0], [94.3, 2520.0], [94.4, 2529.0], [94.5, 2540.0], [94.6, 2547.0], [94.7, 2553.0], [94.8, 2562.0], [94.9, 2572.0], [95.0, 2583.0], [95.1, 2591.0], [95.2, 2598.0], [95.3, 2607.0], [95.4, 2620.0], [95.5, 2628.0], [95.6, 2637.0], [95.7, 2649.0], [95.8, 2661.0], [95.9, 2673.0], [96.0, 2683.0], [96.1, 2694.0], [96.2, 2708.0], [96.3, 2717.0], [96.4, 2729.0], [96.5, 2744.0], [96.6, 2758.0], [96.7, 2773.0], [96.8, 2788.0], [96.9, 2800.0], [97.0, 2815.0], [97.1, 2833.0], [97.2, 2850.0], [97.3, 2863.0], [97.4, 2876.0], [97.5, 2893.0], [97.6, 2907.0], [97.7, 2922.0], [97.8, 2940.0], [97.9, 2957.0], [98.0, 2976.0], [98.1, 2997.0], [98.2, 3020.0], [98.3, 3038.0], [98.4, 3067.0], [98.5, 3098.0], [98.6, 3123.0], [98.7, 3156.0], [98.8, 3187.0], [98.9, 3222.0], [99.0, 3257.0], [99.1, 3294.0], [99.2, 3332.0], [99.3, 3381.0], [99.4, 3432.0], [99.5, 3509.0], [99.6, 3619.0], [99.7, 3745.0], [99.8, 3892.0], [99.9, 4525.0]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[0.0, 518.0], [0.1, 523.0], [0.2, 525.0], [0.3, 527.0], [0.4, 528.0], [0.5, 530.0], [0.6, 531.0], [0.7, 532.0], [0.8, 533.0], [0.9, 534.0], [1.0, 535.0], [1.1, 536.0], [1.2, 537.0], [1.3, 538.0], [1.4, 539.0], [1.5, 540.0], [1.6, 541.0], [1.7, 542.0], [1.8, 544.0], [1.9, 545.0], [2.0, 547.0], [2.1, 548.0], [2.2, 549.0], [2.3, 551.0], [2.4, 553.0], [2.5, 554.0], [2.6, 556.0], [2.7, 557.0], [2.8, 559.0], [2.9, 561.0], [3.0, 562.0], [3.1, 565.0], [3.2, 566.0], [3.3, 568.0], [3.4, 569.0], [3.5, 571.0], [3.6, 572.0], [3.7, 574.0], [3.8, 577.0], [3.9, 579.0], [4.0, 582.0], [4.1, 584.0], [4.2, 587.0], [4.3, 589.0], [4.4, 592.0], [4.5, 594.0], [4.6, 596.0], [4.7, 599.0], [4.8, 602.0], [4.9, 606.0], [5.0, 608.0], [5.1, 611.0], [5.2, 612.0], [5.3, 615.0], [5.4, 618.0], [5.5, 621.0], [5.6, 624.0], [5.7, 627.0], [5.8, 631.0], [5.9, 635.0], [6.0, 637.0], [6.1, 640.0], [6.2, 643.0], [6.3, 647.0], [6.4, 652.0], [6.5, 657.0], [6.6, 660.0], [6.7, 663.0], [6.8, 666.0], [6.9, 672.0], [7.0, 676.0], [7.1, 680.0], [7.2, 685.0], [7.3, 688.0], [7.4, 692.0], [7.5, 698.0], [7.6, 701.0], [7.7, 706.0], [7.8, 710.0], [7.9, 713.0], [8.0, 717.0], [8.1, 722.0], [8.2, 726.0], [8.3, 732.0], [8.4, 737.0], [8.5, 739.0], [8.6, 743.0], [8.7, 746.0], [8.8, 750.0], [8.9, 754.0], [9.0, 758.0], [9.1, 763.0], [9.2, 765.0], [9.3, 770.0], [9.4, 774.0], [9.5, 778.0], [9.6, 781.0], [9.7, 784.0], [9.8, 788.0], [9.9, 791.0], [10.0, 796.0], [10.1, 800.0], [10.2, 803.0], [10.3, 808.0], [10.4, 811.0], [10.5, 816.0], [10.6, 821.0], [10.7, 826.0], [10.8, 831.0], [10.9, 834.0], [11.0, 838.0], [11.1, 841.0], [11.2, 845.0], [11.3, 849.0], [11.4, 854.0], [11.5, 859.0], [11.6, 863.0], [11.7, 868.0], [11.8, 871.0], [11.9, 874.0], [12.0, 877.0], [12.1, 882.0], [12.2, 887.0], [12.3, 891.0], [12.4, 895.0], [12.5, 901.0], [12.6, 904.0], [12.7, 908.0], [12.8, 913.0], [12.9, 919.0], [13.0, 925.0], [13.1, 935.0], [13.2, 962.0], [13.3, 985.0], [13.4, 1019.0], [13.5, 1039.0], [13.6, 1046.0], [13.7, 1048.0], [13.8, 1053.0], [13.9, 1057.0], [14.0, 1059.0], [14.1, 1061.0], [14.2, 1065.0], [14.3, 1069.0], [14.4, 1072.0], [14.5, 1077.0], [14.6, 1081.0], [14.7, 1085.0], [14.8, 1089.0], [14.9, 1092.0], [15.0, 1096.0], [15.1, 1098.0], [15.2, 1104.0], [15.3, 1109.0], [15.4, 1114.0], [15.5, 1119.0], [15.6, 1122.0], [15.7, 1127.0], [15.8, 1131.0], [15.9, 1135.0], [16.0, 1138.0], [16.1, 1143.0], [16.2, 1146.0], [16.3, 1152.0], [16.4, 1156.0], [16.5, 1161.0], [16.6, 1165.0], [16.7, 1169.0], [16.8, 1173.0], [16.9, 1175.0], [17.0, 1179.0], [17.1, 1182.0], [17.2, 1184.0], [17.3, 1187.0], [17.4, 1188.0], [17.5, 1190.0], [17.6, 1191.0], [17.7, 1194.0], [17.8, 1196.0], [17.9, 1198.0], [18.0, 1202.0], [18.1, 1205.0], [18.2, 1207.0], [18.3, 1209.0], [18.4, 1212.0], [18.5, 1214.0], [18.6, 1217.0], [18.7, 1219.0], [18.8, 1221.0], [18.9, 1223.0], [19.0, 1225.0], [19.1, 1227.0], [19.2, 1229.0], [19.3, 1231.0], [19.4, 1233.0], [19.5, 1234.0], [19.6, 1237.0], [19.7, 1239.0], [19.8, 1241.0], [19.9, 1243.0], [20.0, 1246.0], [20.1, 1247.0], [20.2, 1250.0], [20.3, 1252.0], [20.4, 1255.0], [20.5, 1258.0], [20.6, 1260.0], [20.7, 1262.0], [20.8, 1265.0], [20.9, 1267.0], [21.0, 1269.0], [21.1, 1271.0], [21.2, 1273.0], [21.3, 1275.0], [21.4, 1276.0], [21.5, 1278.0], [21.6, 1280.0], [21.7, 1281.0], [21.8, 1284.0], [21.9, 1286.0], [22.0, 1287.0], [22.1, 1289.0], [22.2, 1292.0], [22.3, 1294.0], [22.4, 1296.0], [22.5, 1298.0], [22.6, 1301.0], [22.7, 1303.0], [22.8, 1305.0], [22.9, 1307.0], [23.0, 1308.0], [23.1, 1310.0], [23.2, 1312.0], [23.3, 1314.0], [23.4, 1316.0], [23.5, 1318.0], [23.6, 1321.0], [23.7, 1323.0], [23.8, 1325.0], [23.9, 1326.0], [24.0, 1329.0], [24.1, 1331.0], [24.2, 1334.0], [24.3, 1335.0], [24.4, 1337.0], [24.5, 1339.0], [24.6, 1342.0], [24.7, 1344.0], [24.8, 1345.0], [24.9, 1348.0], [25.0, 1350.0], [25.1, 1352.0], [25.2, 1353.0], [25.3, 1354.0], [25.4, 1357.0], [25.5, 1358.0], [25.6, 1360.0], [25.7, 1362.0], [25.8, 1364.0], [25.9, 1366.0], [26.0, 1367.0], [26.1, 1369.0], [26.2, 1371.0], [26.3, 1372.0], [26.4, 1374.0], [26.5, 1376.0], [26.6, 1377.0], [26.7, 1379.0], [26.8, 1380.0], [26.9, 1382.0], [27.0, 1385.0], [27.1, 1386.0], [27.2, 1388.0], [27.3, 1389.0], [27.4, 1391.0], [27.5, 1392.0], [27.6, 1395.0], [27.7, 1397.0], [27.8, 1399.0], [27.9, 1400.0], [28.0, 1402.0], [28.1, 1403.0], [28.2, 1405.0], [28.3, 1406.0], [28.4, 1408.0], [28.5, 1410.0], [28.6, 1412.0], [28.7, 1414.0], [28.8, 1415.0], [28.9, 1416.0], [29.0, 1419.0], [29.1, 1420.0], [29.2, 1421.0], [29.3, 1423.0], [29.4, 1425.0], [29.5, 1427.0], [29.6, 1428.0], [29.7, 1430.0], [29.8, 1432.0], [29.9, 1434.0], [30.0, 1436.0], [30.1, 1438.0], [30.2, 1440.0], [30.3, 1441.0], [30.4, 1443.0], [30.5, 1444.0], [30.6, 1446.0], [30.7, 1448.0], [30.8, 1449.0], [30.9, 1451.0], [31.0, 1452.0], [31.1, 1454.0], [31.2, 1456.0], [31.3, 1458.0], [31.4, 1459.0], [31.5, 1461.0], [31.6, 1462.0], [31.7, 1464.0], [31.8, 1466.0], [31.9, 1468.0], [32.0, 1470.0], [32.1, 1471.0], [32.2, 1474.0], [32.3, 1475.0], [32.4, 1477.0], [32.5, 1479.0], [32.6, 1480.0], [32.7, 1481.0], [32.8, 1483.0], [32.9, 1485.0], [33.0, 1485.0], [33.1, 1487.0], [33.2, 1489.0], [33.3, 1491.0], [33.4, 1492.0], [33.5, 1494.0], [33.6, 1495.0], [33.7, 1497.0], [33.8, 1498.0], [33.9, 1499.0], [34.0, 1501.0], [34.1, 1502.0], [34.2, 1504.0], [34.3, 1505.0], [34.4, 1506.0], [34.5, 1508.0], [34.6, 1509.0], [34.7, 1511.0], [34.8, 1513.0], [34.9, 1514.0], [35.0, 1516.0], [35.1, 1517.0], [35.2, 1519.0], [35.3, 1520.0], [35.4, 1522.0], [35.5, 1523.0], [35.6, 1524.0], [35.7, 1526.0], [35.8, 1528.0], [35.9, 1529.0], [36.0, 1531.0], [36.1, 1532.0], [36.2, 1533.0], [36.3, 1534.0], [36.4, 1536.0], [36.5, 1537.0], [36.6, 1538.0], [36.7, 1539.0], [36.8, 1540.0], [36.9, 1541.0], [37.0, 1542.0], [37.1, 1544.0], [37.2, 1545.0], [37.3, 1547.0], [37.4, 1548.0], [37.5, 1549.0], [37.6, 1551.0], [37.7, 1553.0], [37.8, 1554.0], [37.9, 1555.0], [38.0, 1557.0], [38.1, 1558.0], [38.2, 1560.0], [38.3, 1561.0], [38.4, 1563.0], [38.5, 1564.0], [38.6, 1566.0], [38.7, 1567.0], [38.8, 1568.0], [38.9, 1570.0], [39.0, 1571.0], [39.1, 1573.0], [39.2, 1574.0], [39.3, 1575.0], [39.4, 1576.0], [39.5, 1578.0], [39.6, 1579.0], [39.7, 1580.0], [39.8, 1582.0], [39.9, 1583.0], [40.0, 1584.0], [40.1, 1585.0], [40.2, 1587.0], [40.3, 1588.0], [40.4, 1590.0], [40.5, 1591.0], [40.6, 1592.0], [40.7, 1594.0], [40.8, 1595.0], [40.9, 1596.0], [41.0, 1597.0], [41.1, 1599.0], [41.2, 1601.0], [41.3, 1602.0], [41.4, 1603.0], [41.5, 1605.0], [41.6, 1606.0], [41.7, 1608.0], [41.8, 1609.0], [41.9, 1610.0], [42.0, 1612.0], [42.1, 1613.0], [42.2, 1614.0], [42.3, 1616.0], [42.4, 1618.0], [42.5, 1620.0], [42.6, 1621.0], [42.7, 1622.0], [42.8, 1624.0], [42.9, 1625.0], [43.0, 1627.0], [43.1, 1628.0], [43.2, 1629.0], [43.3, 1630.0], [43.4, 1631.0], [43.5, 1633.0], [43.6, 1634.0], [43.7, 1636.0], [43.8, 1637.0], [43.9, 1638.0], [44.0, 1640.0], [44.1, 1641.0], [44.2, 1643.0], [44.3, 1644.0], [44.4, 1646.0], [44.5, 1648.0], [44.6, 1649.0], [44.7, 1651.0], [44.8, 1652.0], [44.9, 1654.0], [45.0, 1655.0], [45.1, 1656.0], [45.2, 1656.0], [45.3, 1658.0], [45.4, 1659.0], [45.5, 1661.0], [45.6, 1662.0], [45.7, 1664.0], [45.8, 1665.0], [45.9, 1666.0], [46.0, 1668.0], [46.1, 1669.0], [46.2, 1670.0], [46.3, 1671.0], [46.4, 1672.0], [46.5, 1673.0], [46.6, 1675.0], [46.7, 1676.0], [46.8, 1677.0], [46.9, 1679.0], [47.0, 1680.0], [47.1, 1681.0], [47.2, 1682.0], [47.3, 1683.0], [47.4, 1684.0], [47.5, 1685.0], [47.6, 1686.0], [47.7, 1688.0], [47.8, 1689.0], [47.9, 1691.0], [48.0, 1692.0], [48.1, 1693.0], [48.2, 1694.0], [48.3, 1695.0], [48.4, 1696.0], [48.5, 1698.0], [48.6, 1699.0], [48.7, 1700.0], [48.8, 1701.0], [48.9, 1703.0], [49.0, 1704.0], [49.1, 1705.0], [49.2, 1706.0], [49.3, 1707.0], [49.4, 1708.0], [49.5, 1709.0], [49.6, 1710.0], [49.7, 1712.0], [49.8, 1713.0], [49.9, 1714.0], [50.0, 1715.0], [50.1, 1716.0], [50.2, 1717.0], [50.3, 1718.0], [50.4, 1719.0], [50.5, 1720.0], [50.6, 1721.0], [50.7, 1723.0], [50.8, 1724.0], [50.9, 1725.0], [51.0, 1727.0], [51.1, 1728.0], [51.2, 1729.0], [51.3, 1730.0], [51.4, 1731.0], [51.5, 1732.0], [51.6, 1734.0], [51.7, 1735.0], [51.8, 1736.0], [51.9, 1737.0], [52.0, 1738.0], [52.1, 1739.0], [52.2, 1740.0], [52.3, 1741.0], [52.4, 1742.0], [52.5, 1744.0], [52.6, 1745.0], [52.7, 1747.0], [52.8, 1748.0], [52.9, 1749.0], [53.0, 1750.0], [53.1, 1751.0], [53.2, 1753.0], [53.3, 1754.0], [53.4, 1755.0], [53.5, 1756.0], [53.6, 1757.0], [53.7, 1758.0], [53.8, 1759.0], [53.9, 1760.0], [54.0, 1762.0], [54.1, 1763.0], [54.2, 1764.0], [54.3, 1764.0], [54.4, 1766.0], [54.5, 1767.0], [54.6, 1769.0], [54.7, 1770.0], [54.8, 1771.0], [54.9, 1772.0], [55.0, 1773.0], [55.1, 1774.0], [55.2, 1775.0], [55.3, 1777.0], [55.4, 1778.0], [55.5, 1779.0], [55.6, 1780.0], [55.7, 1782.0], [55.8, 1782.0], [55.9, 1784.0], [56.0, 1785.0], [56.1, 1785.0], [56.2, 1787.0], [56.3, 1788.0], [56.4, 1790.0], [56.5, 1791.0], [56.6, 1792.0], [56.7, 1793.0], [56.8, 1794.0], [56.9, 1795.0], [57.0, 1796.0], [57.1, 1797.0], [57.2, 1798.0], [57.3, 1800.0], [57.4, 1801.0], [57.5, 1802.0], [57.6, 1804.0], [57.7, 1805.0], [57.8, 1807.0], [57.9, 1808.0], [58.0, 1809.0], [58.1, 1810.0], [58.2, 1811.0], [58.3, 1812.0], [58.4, 1813.0], [58.5, 1815.0], [58.6, 1816.0], [58.7, 1817.0], [58.8, 1818.0], [58.9, 1819.0], [59.0, 1820.0], [59.1, 1821.0], [59.2, 1822.0], [59.3, 1823.0], [59.4, 1824.0], [59.5, 1825.0], [59.6, 1826.0], [59.7, 1828.0], [59.8, 1828.0], [59.9, 1829.0], [60.0, 1831.0], [60.1, 1832.0], [60.2, 1833.0], [60.3, 1834.0], [60.4, 1836.0], [60.5, 1837.0], [60.6, 1838.0], [60.7, 1839.0], [60.8, 1840.0], [60.9, 1841.0], [61.0, 1842.0], [61.1, 1844.0], [61.2, 1845.0], [61.3, 1846.0], [61.4, 1848.0], [61.5, 1849.0], [61.6, 1851.0], [61.7, 1852.0], [61.8, 1853.0], [61.9, 1854.0], [62.0, 1855.0], [62.1, 1856.0], [62.2, 1857.0], [62.3, 1858.0], [62.4, 1860.0], [62.5, 1861.0], [62.6, 1863.0], [62.7, 1864.0], [62.8, 1865.0], [62.9, 1866.0], [63.0, 1867.0], [63.1, 1868.0], [63.2, 1869.0], [63.3, 1870.0], [63.4, 1871.0], [63.5, 1873.0], [63.6, 1873.0], [63.7, 1875.0], [63.8, 1877.0], [63.9, 1877.0], [64.0, 1878.0], [64.1, 1880.0], [64.2, 1881.0], [64.3, 1882.0], [64.4, 1883.0], [64.5, 1884.0], [64.6, 1885.0], [64.7, 1886.0], [64.8, 1887.0], [64.9, 1888.0], [65.0, 1889.0], [65.1, 1891.0], [65.2, 1892.0], [65.3, 1893.0], [65.4, 1894.0], [65.5, 1895.0], [65.6, 1896.0], [65.7, 1897.0], [65.8, 1899.0], [65.9, 1900.0], [66.0, 1902.0], [66.1, 1903.0], [66.2, 1904.0], [66.3, 1905.0], [66.4, 1908.0], [66.5, 1908.0], [66.6, 1910.0], [66.7, 1911.0], [66.8, 1912.0], [66.9, 1913.0], [67.0, 1914.0], [67.1, 1916.0], [67.2, 1917.0], [67.3, 1917.0], [67.4, 1919.0], [67.5, 1920.0], [67.6, 1921.0], [67.7, 1922.0], [67.8, 1924.0], [67.9, 1925.0], [68.0, 1926.0], [68.1, 1927.0], [68.2, 1928.0], [68.3, 1930.0], [68.4, 1931.0], [68.5, 1932.0], [68.6, 1933.0], [68.7, 1934.0], [68.8, 1936.0], [68.9, 1937.0], [69.0, 1938.0], [69.1, 1939.0], [69.2, 1940.0], [69.3, 1941.0], [69.4, 1943.0], [69.5, 1944.0], [69.6, 1945.0], [69.7, 1946.0], [69.8, 1947.0], [69.9, 1949.0], [70.0, 1950.0], [70.1, 1951.0], [70.2, 1952.0], [70.3, 1953.0], [70.4, 1955.0], [70.5, 1957.0], [70.6, 1959.0], [70.7, 1960.0], [70.8, 1962.0], [70.9, 1963.0], [71.0, 1965.0], [71.1, 1966.0], [71.2, 1967.0], [71.3, 1969.0], [71.4, 1971.0], [71.5, 1971.0], [71.6, 1972.0], [71.7, 1973.0], [71.8, 1975.0], [71.9, 1976.0], [72.0, 1977.0], [72.1, 1978.0], [72.2, 1979.0], [72.3, 1981.0], [72.4, 1982.0], [72.5, 1983.0], [72.6, 1984.0], [72.7, 1985.0], [72.8, 1987.0], [72.9, 1988.0], [73.0, 1990.0], [73.1, 1991.0], [73.2, 1993.0], [73.3, 1994.0], [73.4, 1995.0], [73.5, 1996.0], [73.6, 1998.0], [73.7, 1999.0], [73.8, 2001.0], [73.9, 2002.0], [74.0, 2003.0], [74.1, 2005.0], [74.2, 2006.0], [74.3, 2007.0], [74.4, 2009.0], [74.5, 2010.0], [74.6, 2011.0], [74.7, 2013.0], [74.8, 2014.0], [74.9, 2016.0], [75.0, 2017.0], [75.1, 2018.0], [75.2, 2020.0], [75.3, 2021.0], [75.4, 2022.0], [75.5, 2024.0], [75.6, 2026.0], [75.7, 2027.0], [75.8, 2028.0], [75.9, 2029.0], [76.0, 2030.0], [76.1, 2032.0], [76.2, 2033.0], [76.3, 2034.0], [76.4, 2036.0], [76.5, 2037.0], [76.6, 2039.0], [76.7, 2040.0], [76.8, 2041.0], [76.9, 2043.0], [77.0, 2045.0], [77.1, 2046.0], [77.2, 2048.0], [77.3, 2049.0], [77.4, 2051.0], [77.5, 2052.0], [77.6, 2054.0], [77.7, 2055.0], [77.8, 2057.0], [77.9, 2058.0], [78.0, 2059.0], [78.1, 2060.0], [78.2, 2061.0], [78.3, 2063.0], [78.4, 2064.0], [78.5, 2066.0], [78.6, 2067.0], [78.7, 2069.0], [78.8, 2071.0], [78.9, 2074.0], [79.0, 2075.0], [79.1, 2077.0], [79.2, 2078.0], [79.3, 2079.0], [79.4, 2081.0], [79.5, 2082.0], [79.6, 2083.0], [79.7, 2085.0], [79.8, 2087.0], [79.9, 2088.0], [80.0, 2090.0], [80.1, 2091.0], [80.2, 2093.0], [80.3, 2094.0], [80.4, 2095.0], [80.5, 2097.0], [80.6, 2098.0], [80.7, 2100.0], [80.8, 2101.0], [80.9, 2103.0], [81.0, 2104.0], [81.1, 2105.0], [81.2, 2107.0], [81.3, 2109.0], [81.4, 2111.0], [81.5, 2113.0], [81.6, 2114.0], [81.7, 2115.0], [81.8, 2117.0], [81.9, 2119.0], [82.0, 2122.0], [82.1, 2123.0], [82.2, 2124.0], [82.3, 2125.0], [82.4, 2127.0], [82.5, 2129.0], [82.6, 2131.0], [82.7, 2132.0], [82.8, 2134.0], [82.9, 2136.0], [83.0, 2139.0], [83.1, 2141.0], [83.2, 2142.0], [83.3, 2144.0], [83.4, 2146.0], [83.5, 2149.0], [83.6, 2151.0], [83.7, 2153.0], [83.8, 2155.0], [83.9, 2156.0], [84.0, 2158.0], [84.1, 2161.0], [84.2, 2163.0], [84.3, 2165.0], [84.4, 2168.0], [84.5, 2170.0], [84.6, 2173.0], [84.7, 2174.0], [84.8, 2176.0], [84.9, 2178.0], [85.0, 2180.0], [85.1, 2182.0], [85.2, 2184.0], [85.3, 2186.0], [85.4, 2188.0], [85.5, 2191.0], [85.6, 2192.0], [85.7, 2195.0], [85.8, 2197.0], [85.9, 2199.0], [86.0, 2201.0], [86.1, 2204.0], [86.2, 2206.0], [86.3, 2208.0], [86.4, 2211.0], [86.5, 2214.0], [86.6, 2216.0], [86.7, 2218.0], [86.8, 2221.0], [86.9, 2223.0], [87.0, 2226.0], [87.1, 2228.0], [87.2, 2230.0], [87.3, 2234.0], [87.4, 2236.0], [87.5, 2240.0], [87.6, 2242.0], [87.7, 2245.0], [87.8, 2247.0], [87.9, 2250.0], [88.0, 2252.0], [88.1, 2255.0], [88.2, 2258.0], [88.3, 2261.0], [88.4, 2264.0], [88.5, 2267.0], [88.6, 2270.0], [88.7, 2273.0], [88.8, 2277.0], [88.9, 2279.0], [89.0, 2282.0], [89.1, 2285.0], [89.2, 2288.0], [89.3, 2291.0], [89.4, 2295.0], [89.5, 2298.0], [89.6, 2301.0], [89.7, 2305.0], [89.8, 2309.0], [89.9, 2312.0], [90.0, 2316.0], [90.1, 2321.0], [90.2, 2326.0], [90.3, 2331.0], [90.4, 2335.0], [90.5, 2337.0], [90.6, 2342.0], [90.7, 2346.0], [90.8, 2352.0], [90.9, 2355.0], [91.0, 2358.0], [91.1, 2361.0], [91.2, 2366.0], [91.3, 2372.0], [91.4, 2377.0], [91.5, 2383.0], [91.6, 2386.0], [91.7, 2390.0], [91.8, 2394.0], [91.9, 2398.0], [92.0, 2403.0], [92.1, 2407.0], [92.2, 2413.0], [92.3, 2416.0], [92.4, 2421.0], [92.5, 2428.0], [92.6, 2434.0], [92.7, 2440.0], [92.8, 2446.0], [92.9, 2450.0], [93.0, 2454.0], [93.1, 2461.0], [93.2, 2466.0], [93.3, 2471.0], [93.4, 2476.0], [93.5, 2481.0], [93.6, 2486.0], [93.7, 2493.0], [93.8, 2499.0], [93.9, 2505.0], [94.0, 2510.0], [94.1, 2515.0], [94.2, 2525.0], [94.3, 2530.0], [94.4, 2537.0], [94.5, 2549.0], [94.6, 2554.0], [94.7, 2562.0], [94.8, 2567.0], [94.9, 2573.0], [95.0, 2584.0], [95.1, 2595.0], [95.2, 2602.0], [95.3, 2610.0], [95.4, 2615.0], [95.5, 2624.0], [95.6, 2636.0], [95.7, 2646.0], [95.8, 2656.0], [95.9, 2665.0], [96.0, 2679.0], [96.1, 2689.0], [96.2, 2698.0], [96.3, 2709.0], [96.4, 2718.0], [96.5, 2728.0], [96.6, 2739.0], [96.7, 2749.0], [96.8, 2762.0], [96.9, 2772.0], [97.0, 2781.0], [97.1, 2794.0], [97.2, 2806.0], [97.3, 2816.0], [97.4, 2832.0], [97.5, 2850.0], [97.6, 2862.0], [97.7, 2888.0], [97.8, 2912.0], [97.9, 2928.0], [98.0, 2962.0], [98.1, 2976.0], [98.2, 2992.0], [98.3, 3033.0], [98.4, 3059.0], [98.5, 3092.0], [98.6, 3113.0], [98.7, 3150.0], [98.8, 3185.0], [98.9, 3210.0], [99.0, 3230.0], [99.1, 3281.0], [99.2, 3316.0], [99.3, 3356.0], [99.4, 3416.0], [99.5, 3500.0], [99.6, 3624.0], [99.7, 3772.0], [99.8, 4120.0], [99.9, 4738.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 500.0, "maxY": 8924.0, "series": [{"data": [[8500.0, 1.0], [9000.0, 2.0], [2500.0, 876.0], [3000.0, 198.0], [3500.0, 72.0], [14000.0, 20.0], [14500.0, 10.0], [15000.0, 20.0], [1000.0, 6428.0], [4000.0, 44.0], [16500.0, 1.0], [4500.0, 33.0], [5000.0, 31.0], [5500.0, 3.0], [1500.0, 8440.0], [7500.0, 20.0], [2000.0, 3678.0], [500.0, 2526.0], [8000.0, 9.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[8500.0, 3.0], [2500.0, 1021.0], [3000.0, 296.0], [3500.0, 90.0], [4000.0, 18.0], [1000.0, 5678.0], [16500.0, 2.0], [17000.0, 1.0], [4500.0, 11.0], [5000.0, 1.0], [1500.0, 7722.0], [500.0, 2514.0], [2000.0, 4683.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[8500.0, 1.0], [2500.0, 899.0], [3000.0, 299.0], [3500.0, 81.0], [1000.0, 5583.0], [4000.0, 14.0], [17000.0, 3.0], [4500.0, 5.0], [5000.0, 6.0], [5500.0, 3.0], [1500.0, 8924.0], [500.0, 2436.0], [2000.0, 3908.0], [8000.0, 5.0]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[2500.0, 980.0], [10500.0, 1.0], [3000.0, 289.0], [3500.0, 61.0], [1000.0, 4584.0], [4000.0, 15.0], [17000.0, 1.0], [4500.0, 28.0], [5000.0, 2.0], [5500.0, 2.0], [1500.0, 8883.0], [500.0, 2976.0], [2000.0, 4476.0], [8000.0, 2.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 500, "maxX": 17000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 32782.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 56137.0, "series": [{"data": [[1.0, 32782.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 56137.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 480.65177601985397, "minX": 1.60814832E12, "maxY": 500.0, "series": [{"data": [[1.60814838E12, 500.0], [1.6081485E12, 500.0], [1.60814832E12, 498.4310393127257], [1.60814844E12, 500.0], [1.60814862E12, 480.65177601985397], [1.60814856E12, 500.0]], "isOverall": false, "label": "Slypee", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814862E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 523.0, "minX": 2.0, "maxY": 3073.0, "series": [{"data": [[4.0, 1839.0], [5.0, 1310.0], [13.0, 1601.0], [18.0, 1082.0], [20.0, 1102.0], [21.0, 1506.0], [36.0, 1869.0], [47.0, 1843.0], [51.0, 1943.0], [55.0, 1050.0], [66.0, 1579.0], [71.0, 1201.0], [79.0, 2210.0], [78.0, 1790.0], [80.0, 1900.0], [89.0, 1071.0], [92.0, 2017.0], [96.0, 1989.0], [103.0, 2418.0], [109.0, 1691.0], [115.0, 1129.0], [114.0, 2070.0], [118.0, 1794.0], [117.0, 1698.0], [116.0, 1226.0], [124.0, 1124.0], [134.0, 1057.0], [131.0, 1951.0], [130.0, 1769.0], [136.0, 2046.0], [151.0, 1810.0], [165.0, 1044.0], [173.0, 1050.0], [171.0, 1344.0], [178.0, 1314.0], [184.0, 2311.0], [195.0, 921.0], [193.0, 1907.0], [214.0, 2214.0], [209.0, 1365.0], [230.0, 1504.0], [227.0, 1417.0], [235.0, 2127.0], [234.0, 1689.0], [244.0, 2143.0], [243.0, 680.0], [249.0, 2132.0], [270.0, 2327.0], [258.0, 1831.0], [256.0, 2352.0], [283.0, 2019.0], [280.0, 1741.0], [303.0, 1395.0], [296.0, 2458.0], [294.0, 1427.0], [290.0, 1890.0], [317.0, 1623.0], [316.0, 2028.0], [313.0, 2236.0], [311.0, 1680.0], [310.0, 1733.0], [305.0, 2060.0], [334.0, 1683.0], [332.0, 1979.0], [331.0, 1966.0], [323.0, 1958.0], [320.0, 1616.0], [339.0, 1305.5], [340.0, 1361.0], [342.0, 1282.0], [343.0, 1623.3333333333333], [344.0, 1360.6666666666667], [345.0, 1377.25], [347.0, 1387.0], [348.0, 1387.5], [349.0, 1391.0], [350.0, 1385.142857142857], [353.0, 1408.0], [352.0, 1359.0], [354.0, 1457.6], [355.0, 1342.5], [356.0, 1277.0], [357.0, 1439.0], [358.0, 1285.0], [359.0, 1387.2], [360.0, 1680.5], [366.0, 1457.0769230769233], [367.0, 1474.923076923077], [364.0, 1457.2857142857144], [365.0, 1481.75], [361.0, 1378.3333333333333], [362.0, 1515.5], [363.0, 1375.1666666666667], [371.0, 1455.0], [374.0, 1418.0], [377.0, 1514.7777777777778], [378.0, 1485.5], [375.0, 1606.0], [370.0, 1401.0], [369.0, 2150.0], [396.0, 2364.0], [392.0, 1847.0], [387.0, 875.0], [412.0, 1518.0], [411.0, 1287.0], [410.0, 1547.0], [404.0, 1549.0], [402.0, 1779.0], [430.0, 794.0], [428.0, 1111.0], [424.0, 903.0], [422.0, 1175.0], [419.0, 1804.0], [417.0, 1718.0], [416.0, 1379.0], [445.0, 1283.0], [440.0, 1374.0], [436.0, 960.0], [435.0, 940.0], [461.0, 1167.0], [456.0, 1446.0], [455.0, 1730.0], [453.0, 1180.0], [451.0, 1940.0], [476.0, 975.0], [475.0, 1322.0], [469.0, 1596.0], [466.0, 1243.0], [465.0, 2038.0], [489.0, 2095.0], [488.0, 1529.0], [483.0, 707.0], [482.0, 1299.0], [481.0, 1568.0], [480.0, 1837.0], [500.0, 1685.547811189747], [496.0, 1752.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[498.14220060681936, 1683.7649473496474]], "isOverall": false, "label": "HomePage-Aggregated", "isController": false}, {"data": [[2.0, 1213.5], [3.0, 1304.0], [6.0, 1677.0], [17.0, 1302.0], [19.0, 1282.0], [22.0, 1600.0], [33.0, 2212.0], [35.0, 2176.0], [37.0, 1862.0], [38.0, 1150.0], [40.0, 2098.0], [44.0, 1526.0], [54.0, 1984.0], [56.0, 2260.0], [58.0, 1559.0], [61.0, 2145.0], [62.0, 2070.0], [70.0, 1499.0], [74.0, 2055.0], [83.0, 2202.0], [87.0, 1758.0], [93.0, 2170.0], [96.0, 2433.0], [102.0, 2002.0], [101.0, 2170.0], [123.0, 2411.0], [122.0, 2716.0], [127.0, 1775.0], [125.0, 2437.0], [132.0, 1673.0], [128.0, 2034.0], [143.0, 1833.0], [142.0, 1751.0], [140.0, 2031.0], [147.0, 2051.0], [146.0, 2291.0], [156.0, 1155.0], [155.0, 2381.0], [154.0, 1021.0], [153.0, 1733.0], [167.0, 1338.0], [166.0, 1810.0], [164.0, 1961.0], [163.0, 1350.0], [174.0, 1455.0], [181.0, 2192.0], [180.0, 2140.0], [177.0, 1914.0], [191.0, 1613.0], [190.0, 798.0], [188.0, 781.0], [185.0, 1683.0], [197.0, 2531.0], [206.0, 2147.0], [210.0, 2057.0], [222.0, 1939.0], [219.0, 2012.0], [218.0, 1910.0], [217.0, 2322.0], [226.0, 2078.0], [237.0, 2142.0], [232.0, 2176.0], [241.0, 1570.0], [240.0, 1806.0], [254.0, 1565.0], [266.0, 909.0], [265.0, 1628.0], [261.0, 1421.0], [260.0, 872.0], [257.0, 2115.0], [287.0, 1962.0], [282.0, 1458.0], [281.0, 2027.0], [278.0, 2274.0], [272.0, 1544.0], [299.0, 1406.0], [298.0, 2031.0], [297.0, 1181.0], [288.0, 2084.0], [318.0, 1637.0], [315.0, 2031.0], [312.0, 2518.0], [306.0, 2616.0], [333.0, 1354.0], [327.0, 1328.0], [326.0, 2198.0], [325.0, 1623.0], [351.0, 1310.0], [348.0, 3001.0], [347.0, 1641.0], [346.0, 2598.0], [345.0, 1200.0], [344.0, 1925.0], [342.0, 1963.0], [339.0, 2497.0], [336.0, 1565.0], [364.0, 1872.0], [361.0, 1582.0], [358.0, 1328.0], [354.0, 1487.0], [352.0, 1618.0], [382.0, 1762.0], [380.0, 1652.0], [373.0, 2520.0], [372.0, 1804.0], [368.0, 2080.0], [397.0, 2145.0], [395.0, 2700.0], [394.0, 1768.0], [390.0, 1819.0], [388.0, 1891.0], [384.0, 1788.0], [406.0, 1282.0], [403.0, 649.0], [429.0, 1153.0], [418.0, 1113.0], [447.0, 1468.0], [441.0, 1088.0], [432.0, 942.0], [460.0, 1235.0], [458.0, 1337.0], [454.0, 2122.0], [452.0, 1521.0], [448.0, 749.0], [467.0, 1550.0], [494.0, 1286.0], [485.0, 1809.0], [500.0, 1690.6814987221737]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[498.48865698729566, 1691.141379310357]], "isOverall": false, "label": "Detail Category Page-Aggregated", "isController": false}, {"data": [[12.0, 1401.0], [14.0, 1898.0], [16.0, 1099.0], [23.0, 2140.0], [24.0, 2021.0], [25.0, 2009.0], [27.0, 2220.0], [31.0, 1704.0], [34.0, 1327.0], [39.0, 2093.0], [41.0, 2182.0], [43.0, 2172.0], [53.0, 1659.0], [59.0, 2181.0], [60.0, 1298.0], [63.0, 1356.0], [67.0, 2131.0], [68.0, 1227.0], [77.0, 1849.0], [76.0, 1494.0], [82.0, 1038.0], [86.0, 1738.0], [90.0, 1579.0], [107.0, 1993.0], [106.0, 1940.0], [104.0, 2395.0], [110.0, 2391.0], [108.0, 1660.0], [113.0, 2357.0], [126.0, 1528.0], [135.0, 2310.0], [137.0, 2001.0], [149.0, 1923.0], [148.0, 1494.0], [145.0, 1491.0], [144.0, 2350.0], [159.0, 1330.0], [158.0, 1078.0], [157.0, 1565.0], [161.0, 990.0], [160.0, 2075.0], [175.0, 804.0], [172.0, 1455.0], [169.0, 1120.0], [168.0, 1410.0], [179.0, 1420.0], [189.0, 1548.0], [186.0, 1940.0], [199.0, 1808.0], [198.0, 1646.0], [194.0, 2020.0], [192.0, 1485.0], [205.0, 1880.0], [204.0, 1371.0], [201.0, 749.0], [215.0, 1830.0], [213.0, 1320.0], [211.0, 1830.0], [208.0, 1994.0], [216.0, 1917.0], [231.0, 2020.0], [239.0, 1635.0], [233.0, 1797.0], [247.0, 1510.0], [246.0, 1904.0], [255.0, 1608.0], [248.0, 1682.0], [271.0, 2467.0], [268.0, 611.0], [264.0, 1488.0], [263.0, 870.0], [262.0, 841.0], [259.0, 1509.0], [286.0, 1755.0], [285.0, 2044.0], [284.0, 1437.0], [277.0, 2105.0], [275.0, 2040.0], [273.0, 2177.0], [302.0, 1751.0], [295.0, 1704.0], [293.0, 735.0], [309.0, 2047.0], [307.0, 1660.0], [330.0, 1400.0], [328.0, 1993.0], [324.0, 1479.0], [322.0, 1633.0], [350.0, 731.0], [340.0, 823.0], [337.0, 1660.0], [365.0, 1598.0], [359.0, 1564.0], [357.0, 1566.0], [356.0, 2388.0], [379.0, 1529.0], [378.0, 1914.0], [377.0, 1589.0], [393.0, 1600.0], [415.0, 1233.0], [413.0, 1846.0], [400.0, 1514.0], [427.0, 815.0], [426.0, 894.0], [423.0, 581.0], [421.0, 1260.0], [420.0, 1909.0], [446.0, 1201.0], [439.0, 1040.0], [438.0, 815.0], [437.0, 1199.0], [433.0, 983.0], [462.0, 1560.0], [450.0, 886.0], [478.0, 1457.0], [477.0, 1566.0], [471.0, 986.0], [470.0, 1420.0], [468.0, 1243.0], [464.0, 1492.0], [495.0, 1664.0], [493.0, 1647.0], [491.0, 1265.0], [487.0, 1388.0], [486.0, 1857.0], [500.0, 1677.4870235934618], [499.0, 1476.0], [497.0, 1514.0]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[498.5665177967249, 1676.9803311228347]], "isOverall": false, "label": "Category Page-Aggregated", "isController": false}, {"data": [[7.0, 1364.0], [8.0, 1311.0], [9.0, 1563.0], [10.0, 1961.0], [11.0, 1986.0], [15.0, 1729.0], [26.0, 1603.0], [28.0, 1581.0], [29.0, 1684.0], [30.0, 1690.0], [32.0, 1362.0], [42.0, 1478.0], [45.0, 1967.0], [46.0, 1234.0], [49.0, 1250.0], [48.0, 1943.0], [50.0, 2269.0], [52.0, 1059.0], [57.0, 1340.0], [65.0, 1807.0], [64.0, 1043.0], [69.0, 2227.0], [75.0, 1094.0], [73.0, 1864.0], [72.0, 2334.0], [81.0, 1081.0], [85.0, 2261.0], [84.0, 1145.0], [91.0, 1292.0], [88.0, 1878.0], [94.0, 2353.0], [99.0, 1748.0], [98.0, 2350.0], [97.0, 2091.0], [100.0, 2087.0], [105.0, 1631.0], [111.0, 1512.0], [112.0, 1642.0], [119.0, 2250.0], [121.0, 2162.0], [120.0, 1919.0], [133.0, 1483.0], [129.0, 1518.0], [141.0, 1877.0], [139.0, 1121.0], [138.0, 1513.0], [150.0, 1372.0], [152.0, 1907.0], [162.0, 1415.0], [170.0, 1449.0], [183.0, 1697.0], [176.0, 1620.0], [187.0, 1705.0], [184.0, 792.0], [196.0, 1345.0], [207.0, 1558.0], [203.0, 1933.0], [202.0, 1719.0], [200.0, 1612.0], [212.0, 1299.0], [223.0, 1656.0], [221.0, 1632.0], [220.0, 2235.0], [229.0, 1511.0], [228.0, 1522.0], [225.0, 1848.0], [224.0, 1951.0], [236.0, 1892.0], [245.0, 687.0], [242.0, 2278.0], [240.0, 2288.0], [253.0, 1286.0], [252.0, 1832.0], [251.0, 680.0], [250.0, 1593.0], [269.0, 2331.0], [267.0, 2126.0], [279.0, 1411.0], [276.0, 1741.0], [274.0, 1731.0], [302.0, 2156.0], [301.0, 2014.0], [292.0, 1186.0], [291.0, 819.0], [289.0, 1442.0], [319.0, 1614.0], [314.0, 1996.0], [308.0, 1369.0], [304.0, 551.0], [335.0, 1908.0], [329.0, 1735.0], [321.0, 1375.0], [349.0, 719.0], [341.0, 1316.0], [338.0, 671.0], [367.0, 1620.0], [355.0, 736.0], [383.0, 1717.0], [381.0, 1546.0], [376.0, 1454.0], [374.0, 1622.0], [399.0, 657.0], [398.0, 1866.0], [391.0, 1820.0], [389.0, 1562.0], [386.0, 1343.0], [385.0, 1630.0], [414.0, 644.0], [409.0, 3073.0], [408.0, 1832.0], [407.0, 634.0], [405.0, 835.0], [401.0, 1824.0], [431.0, 827.0], [425.0, 888.0], [444.0, 1198.0], [443.0, 1394.0], [442.0, 1475.0], [434.0, 809.0], [463.0, 1579.0], [459.0, 1535.0], [457.0, 1344.0], [449.0, 1465.0], [479.0, 1572.0], [474.0, 1678.0], [473.0, 1615.0], [472.0, 1548.0], [480.0, 523.0], [487.0, 531.5], [492.0, 1698.0], [490.0, 1379.0], [484.0, 1558.0], [500.0, 1680.607308820205], [498.0, 1461.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}, {"data": [[498.4386995515684, 1679.797713004477]], "isOverall": false, "label": "Detail Game Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 19664.483333333334, "minX": 1.60814832E12, "maxY": 1.7307634116666667E7, "series": [{"data": [[1.60814838E12, 1.7307634116666667E7], [1.6081485E12, 1.6736986583333334E7], [1.60814832E12, 1.01322013E7], [1.60814844E12, 1.7285599516666666E7], [1.60814862E12, 6090633.416666667], [1.60814856E12, 1.6373827316666666E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.60814838E12, 55949.55], [1.6081485E12, 54114.01666666667], [1.60814832E12, 32164.116666666665], [1.60814844E12, 55873.73333333333], [1.60814862E12, 19664.483333333334], [1.60814856E12, 52942.55]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814862E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1561.2391033623926, "minX": 1.60814832E12, "maxY": 2050.6474068917537, "series": [{"data": [[1.60814838E12, 1593.0489510489542], [1.6081485E12, 1654.0445544554425], [1.60814832E12, 2050.6474068917537], [1.60814844E12, 1584.7205144974928], [1.60814862E12, 1561.2391033623926], [1.60814856E12, 1717.10610263523]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60814838E12, 1660.616521739133], [1.6081485E12, 1710.846934174934], [1.60814832E12, 1644.6898632341135], [1.60814844E12, 1675.6119500984905], [1.60814862E12, 1700.3489681050664], [1.60814856E12, 1742.7988505747126]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60814838E12, 1661.183784965039], [1.6081485E12, 1703.941813261162], [1.60814832E12, 1662.307633587786], [1.60814844E12, 1637.5345994324362], [1.60814862E12, 1636.8224705152086], [1.60814856E12, 1731.4280782508627]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60814838E12, 1650.4402091047689], [1.6081485E12, 1713.1368254685042], [1.60814832E12, 1705.3282051282044], [1.60814844E12, 1647.770892428537], [1.60814862E12, 1640.2801961986524], [1.60814856E12, 1709.4690959409609]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814862E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1115.5018679950201, "minX": 1.60814832E12, "maxY": 1608.7497389488353, "series": [{"data": [[1.60814838E12, 1146.3006993007064], [1.6081485E12, 1194.1685418541863], [1.60814832E12, 1608.7497389488353], [1.60814844E12, 1135.4096359276166], [1.60814862E12, 1115.5018679950201], [1.60814856E12, 1249.4156264447515]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60814838E12, 1222.3350000000003], [1.6081485E12, 1272.863165013526], [1.60814832E12, 1217.2220434432836], [1.60814844E12, 1233.0404902604487], [1.60814862E12, 1246.6998123827389], [1.60814856E12, 1299.7197701149403]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60814838E12, 1209.7100087412555], [1.6081485E12, 1242.6080288678431], [1.60814832E12, 1232.2866412213768], [1.60814844E12, 1188.026195153898], [1.60814862E12, 1185.9056486654224], [1.60814856E12, 1265.5983889528209]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60814838E12, 1159.3267262034392], [1.6081485E12, 1212.541205689773], [1.60814832E12, 1229.0684981684994], [1.60814844E12, 1156.9535238926442], [1.60814862E12, 1144.8626609442076], [1.60814856E12, 1216.5627306273043]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814862E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 127.30593813501908, "minX": 1.60814832E12, "maxY": 243.32370344587486, "series": [{"data": [[1.60814838E12, 165.79545454545476], [1.6081485E12, 177.0438793879392], [1.60814832E12, 243.32370344587486], [1.60814844E12, 165.86810551558742], [1.60814862E12, 154.44146948941452], [1.60814856E12, 183.13938973647728]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60814838E12, 141.98782608695697], [1.6081485E12, 128.98038773669984], [1.60814832E12, 198.23008849557505], [1.60814844E12, 142.80717881374446], [1.60814862E12, 154.0600375234523], [1.60814856E12, 131.30114942528763]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60814838E12, 167.7690122377628], [1.6081485E12, 175.31935047361307], [1.60814832E12, 197.15801526717544], [1.60814844E12, 161.78912901113307], [1.60814862E12, 151.34202358783372], [1.60814856E12, 179.69896432681216]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60814838E12, 134.95469396645623], [1.6081485E12, 127.30593813501908], [1.60814832E12, 195.76703296703315], [1.60814844E12, 136.04691250272748], [1.60814862E12, 145.9901900674432], [1.60814856E12, 129.78297970479696]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814862E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 518.0, "minX": 1.60814832E12, "maxY": 17255.0, "series": [{"data": [[1.60814838E12, 5832.0], [1.6081485E12, 5219.0], [1.60814832E12, 17255.0], [1.60814844E12, 5205.0], [1.60814862E12, 4695.0], [1.60814856E12, 4251.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.60814838E12, 518.0], [1.6081485E12, 519.0], [1.60814832E12, 519.0], [1.60814844E12, 522.0], [1.60814862E12, 522.0], [1.60814856E12, 520.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.60814838E12, 2269.0], [1.6081485E12, 2246.0], [1.60814832E12, 2638.0], [1.60814844E12, 2328.0], [1.60814862E12, 2235.0], [1.60814856E12, 2221.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.60814838E12, 3072.0], [1.6081485E12, 3213.9900000000016], [1.60814832E12, 5737.799999999956], [1.60814844E12, 3282.9900000000016], [1.60814862E12, 2983.980000000003], [1.60814856E12, 2879.980000000003]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.60814838E12, 2522.9500000000007], [1.6081485E12, 2526.9500000000007], [1.60814832E12, 3013.0], [1.60814844E12, 2614.9500000000007], [1.60814862E12, 2409.9500000000007], [1.60814856E12, 2384.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814862E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1561.0, "minX": 107.0, "maxY": 1818.0, "series": [{"data": [[295.0, 1735.0], [289.0, 1818.0], [305.0, 1612.0], [178.0, 1678.0], [107.0, 1561.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 305.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1090.0, "minX": 107.0, "maxY": 1309.0, "series": [{"data": [[295.0, 1240.0], [289.0, 1309.0], [305.0, 1141.0], [178.0, 1168.0], [107.0, 1090.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 305.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 99.11666666666666, "minX": 1.60814832E12, "maxY": 305.71666666666664, "series": [{"data": [[1.60814838E12, 305.71666666666664], [1.6081485E12, 295.71666666666664], [1.60814832E12, 186.81666666666666], [1.60814844E12, 305.3333333333333], [1.60814862E12, 99.11666666666666], [1.60814856E12, 289.28333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814862E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 107.45, "minX": 1.60814832E12, "maxY": 305.71666666666664, "series": [{"data": [[1.60814838E12, 305.71666666666664], [1.6081485E12, 295.71666666666664], [1.60814832E12, 178.48333333333332], [1.60814844E12, 305.3333333333333], [1.60814862E12, 107.45], [1.60814856E12, 289.28333333333336]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814862E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 26.65, "minX": 1.60814832E12, "maxY": 76.66666666666667, "series": [{"data": [[1.60814838E12, 76.26666666666667], [1.6081485E12, 73.9], [1.60814832E12, 43.666666666666664], [1.60814844E12, 76.35], [1.60814862E12, 26.85], [1.60814856E12, 72.41666666666667]], "isOverall": false, "label": "Category Page-success", "isController": false}, {"data": [[1.60814838E12, 76.66666666666667], [1.6081485E12, 73.93333333333334], [1.60814832E12, 41.43333333333333], [1.60814844E12, 76.15], [1.60814862E12, 26.65], [1.60814856E12, 72.5]], "isOverall": false, "label": "Detail Category Page-success", "isController": false}, {"data": [[1.60814838E12, 76.51666666666667], [1.6081485E12, 73.81666666666666], [1.60814832E12, 45.5], [1.60814844E12, 76.38333333333334], [1.60814862E12, 27.183333333333334], [1.60814856E12, 72.26666666666667]], "isOverall": false, "label": "Detail Game Page-success", "isController": false}, {"data": [[1.60814838E12, 76.26666666666667], [1.6081485E12, 74.06666666666666], [1.60814832E12, 47.88333333333333], [1.60814844E12, 76.45], [1.60814862E12, 26.766666666666666], [1.60814856E12, 72.1]], "isOverall": false, "label": "HomePage-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814862E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
