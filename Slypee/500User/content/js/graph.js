/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? 0 : 0;
        var yOffset = options.yaxis.mode === "time" ? 0 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 264.0, "minX": 0.0, "maxY": 16714.0, "series": [{"data": [[0.0, 1107.0], [0.1, 1107.0], [0.2, 1128.0], [0.3, 1128.0], [0.4, 1130.0], [0.5, 1130.0], [0.6, 1130.0], [0.7, 1134.0], [0.8, 1140.0], [0.9, 1140.0], [1.0, 1184.0], [1.1, 1184.0], [1.2, 1249.0], [1.3, 1249.0], [1.4, 1258.0], [1.5, 1258.0], [1.6, 1415.0], [1.7, 1415.0], [1.8, 1463.0], [1.9, 1463.0], [2.0, 1482.0], [2.1, 1482.0], [2.2, 1515.0], [2.3, 1515.0], [2.4, 1519.0], [2.5, 1519.0], [2.6, 1533.0], [2.7, 1533.0], [2.8, 1533.0], [2.9, 1539.0], [3.0, 1539.0], [3.1, 1546.0], [3.2, 1546.0], [3.3, 2166.0], [3.4, 2166.0], [3.5, 2468.0], [3.6, 2468.0], [3.7, 2500.0], [3.8, 2500.0], [3.9, 2592.0], [4.0, 2592.0], [4.1, 2621.0], [4.2, 2621.0], [4.3, 2639.0], [4.4, 2639.0], [4.5, 2641.0], [4.6, 2641.0], [4.7, 2655.0], [4.8, 2655.0], [4.9, 2787.0], [5.0, 2787.0], [5.1, 2872.0], [5.2, 2872.0], [5.3, 2958.0], [5.4, 2958.0], [5.5, 3023.0], [5.6, 3023.0], [5.7, 3069.0], [5.8, 3069.0], [5.9, 3109.0], [6.0, 3109.0], [6.1, 3116.0], [6.2, 3116.0], [6.3, 3124.0], [6.4, 3124.0], [6.5, 3186.0], [6.6, 3186.0], [6.7, 3214.0], [6.8, 3214.0], [6.9, 3222.0], [7.0, 3222.0], [7.1, 3289.0], [7.2, 3289.0], [7.3, 3309.0], [7.4, 3309.0], [7.5, 3315.0], [7.6, 3315.0], [7.7, 3389.0], [7.8, 3389.0], [7.9, 3402.0], [8.0, 3402.0], [8.1, 3446.0], [8.2, 3446.0], [8.3, 3450.0], [8.4, 3450.0], [8.5, 3492.0], [8.6, 3492.0], [8.7, 3496.0], [8.8, 3632.0], [8.9, 3632.0], [9.0, 3643.0], [9.1, 3643.0], [9.2, 3644.0], [9.3, 3644.0], [9.4, 3702.0], [9.5, 3702.0], [9.6, 3739.0], [9.7, 3739.0], [9.8, 3748.0], [9.9, 3748.0], [10.0, 3844.0], [10.1, 3844.0], [10.2, 3879.0], [10.3, 3879.0], [10.4, 3928.0], [10.5, 3928.0], [10.6, 3951.0], [10.7, 3951.0], [10.8, 3974.0], [10.9, 3974.0], [11.0, 3998.0], [11.1, 3998.0], [11.2, 4032.0], [11.3, 4032.0], [11.4, 4074.0], [11.5, 4074.0], [11.6, 4075.0], [11.7, 4075.0], [11.8, 4076.0], [11.9, 4076.0], [12.0, 4081.0], [12.1, 4081.0], [12.2, 4084.0], [12.3, 4084.0], [12.4, 4084.0], [12.5, 4084.0], [12.6, 4091.0], [12.7, 4091.0], [12.8, 4109.0], [12.9, 4109.0], [13.0, 4154.0], [13.1, 4154.0], [13.2, 4177.0], [13.3, 4177.0], [13.4, 4181.0], [13.5, 4181.0], [13.6, 4194.0], [13.7, 4194.0], [13.8, 4198.0], [13.9, 4198.0], [14.0, 4222.0], [14.1, 4222.0], [14.2, 4257.0], [14.3, 4257.0], [14.4, 4286.0], [14.5, 4286.0], [14.6, 4329.0], [14.7, 4329.0], [14.8, 4357.0], [14.9, 4357.0], [15.0, 4380.0], [15.1, 4380.0], [15.2, 4382.0], [15.3, 4382.0], [15.4, 4421.0], [15.5, 4421.0], [15.6, 4437.0], [15.7, 4437.0], [15.8, 4439.0], [15.9, 4439.0], [16.0, 4499.0], [16.1, 4499.0], [16.2, 4526.0], [16.3, 4526.0], [16.4, 4529.0], [16.5, 4529.0], [16.6, 4541.0], [16.7, 4541.0], [16.8, 4549.0], [16.9, 4549.0], [17.0, 4563.0], [17.1, 4563.0], [17.2, 4584.0], [17.3, 4584.0], [17.4, 4623.0], [17.5, 4623.0], [17.6, 4665.0], [17.7, 4665.0], [17.8, 4671.0], [17.9, 4671.0], [18.0, 4675.0], [18.1, 4675.0], [18.2, 4688.0], [18.3, 4688.0], [18.4, 4695.0], [18.5, 4695.0], [18.6, 4713.0], [18.7, 4713.0], [18.8, 4733.0], [18.9, 4733.0], [19.0, 4745.0], [19.1, 4745.0], [19.2, 4782.0], [19.3, 4782.0], [19.4, 4786.0], [19.5, 4786.0], [19.6, 4792.0], [19.7, 4792.0], [19.8, 4812.0], [19.9, 4812.0], [20.0, 4827.0], [20.1, 4827.0], [20.2, 4846.0], [20.3, 4846.0], [20.4, 4882.0], [20.5, 4882.0], [20.6, 4893.0], [20.7, 4893.0], [20.8, 4898.0], [20.9, 4898.0], [21.0, 4918.0], [21.1, 4918.0], [21.2, 4919.0], [21.3, 4919.0], [21.4, 4935.0], [21.5, 4935.0], [21.6, 4951.0], [21.7, 4951.0], [21.8, 4952.0], [21.9, 4952.0], [22.0, 4952.0], [22.1, 4952.0], [22.2, 4959.0], [22.3, 4959.0], [22.4, 4962.0], [22.5, 4962.0], [22.6, 4967.0], [22.7, 4967.0], [22.8, 4974.0], [22.9, 4974.0], [23.0, 4977.0], [23.1, 4977.0], [23.2, 4978.0], [23.3, 4978.0], [23.4, 4999.0], [23.5, 4999.0], [23.6, 5008.0], [23.7, 5008.0], [23.8, 5011.0], [23.9, 5011.0], [24.0, 5014.0], [24.1, 5014.0], [24.2, 5029.0], [24.3, 5029.0], [24.4, 5057.0], [24.5, 5057.0], [24.6, 5066.0], [24.7, 5066.0], [24.8, 5074.0], [24.9, 5074.0], [25.0, 5098.0], [25.1, 5098.0], [25.2, 5111.0], [25.3, 5111.0], [25.4, 5118.0], [25.5, 5118.0], [25.6, 5130.0], [25.7, 5130.0], [25.8, 5134.0], [25.9, 5134.0], [26.0, 5141.0], [26.1, 5141.0], [26.2, 5149.0], [26.3, 5149.0], [26.4, 5150.0], [26.5, 5150.0], [26.6, 5150.0], [26.7, 5150.0], [26.8, 5150.0], [26.9, 5150.0], [27.0, 5150.0], [27.1, 5150.0], [27.2, 5152.0], [27.3, 5152.0], [27.4, 5152.0], [27.5, 5152.0], [27.6, 5156.0], [27.7, 5156.0], [27.8, 5157.0], [27.9, 5157.0], [28.0, 5163.0], [28.1, 5163.0], [28.2, 5169.0], [28.3, 5169.0], [28.4, 5171.0], [28.5, 5171.0], [28.6, 5176.0], [28.7, 5176.0], [28.8, 5208.0], [28.9, 5208.0], [29.0, 5223.0], [29.1, 5223.0], [29.2, 5224.0], [29.3, 5224.0], [29.4, 5226.0], [29.5, 5226.0], [29.6, 5243.0], [29.7, 5243.0], [29.8, 5254.0], [29.9, 5254.0], [30.0, 5278.0], [30.1, 5278.0], [30.2, 5279.0], [30.3, 5279.0], [30.4, 5294.0], [30.5, 5294.0], [30.6, 5304.0], [30.7, 5304.0], [30.8, 5309.0], [30.9, 5309.0], [31.0, 5325.0], [31.1, 5325.0], [31.2, 5331.0], [31.3, 5331.0], [31.4, 5336.0], [31.5, 5336.0], [31.6, 5341.0], [31.7, 5341.0], [31.8, 5344.0], [31.9, 5344.0], [32.0, 5345.0], [32.1, 5345.0], [32.2, 5351.0], [32.3, 5351.0], [32.4, 5351.0], [32.5, 5351.0], [32.6, 5352.0], [32.7, 5352.0], [32.8, 5356.0], [32.9, 5356.0], [33.0, 5360.0], [33.1, 5360.0], [33.2, 5361.0], [33.3, 5361.0], [33.4, 5364.0], [33.5, 5364.0], [33.6, 5369.0], [33.7, 5369.0], [33.8, 5391.0], [33.9, 5391.0], [34.0, 5396.0], [34.1, 5396.0], [34.2, 5445.0], [34.3, 5445.0], [34.4, 5451.0], [34.5, 5451.0], [34.6, 5452.0], [34.7, 5452.0], [34.8, 5452.0], [34.9, 5452.0], [35.0, 5457.0], [35.1, 5457.0], [35.2, 5462.0], [35.3, 5462.0], [35.4, 5464.0], [35.5, 5464.0], [35.6, 5478.0], [35.7, 5478.0], [35.8, 5479.0], [35.9, 5479.0], [36.0, 5491.0], [36.1, 5491.0], [36.2, 5492.0], [36.3, 5492.0], [36.4, 5513.0], [36.5, 5513.0], [36.6, 5537.0], [36.7, 5537.0], [36.8, 5547.0], [36.9, 5547.0], [37.0, 5548.0], [37.1, 5548.0], [37.2, 5563.0], [37.3, 5563.0], [37.4, 5569.0], [37.5, 5569.0], [37.6, 5570.0], [37.7, 5570.0], [37.8, 5571.0], [37.9, 5571.0], [38.0, 5579.0], [38.1, 5579.0], [38.2, 5582.0], [38.3, 5582.0], [38.4, 5585.0], [38.5, 5585.0], [38.6, 5639.0], [38.7, 5639.0], [38.8, 5639.0], [38.9, 5650.0], [39.0, 5650.0], [39.1, 5651.0], [39.2, 5651.0], [39.3, 5658.0], [39.4, 5658.0], [39.5, 5665.0], [39.6, 5665.0], [39.7, 5665.0], [39.8, 5665.0], [39.9, 5666.0], [40.0, 5666.0], [40.1, 5689.0], [40.2, 5689.0], [40.3, 5696.0], [40.4, 5696.0], [40.5, 5697.0], [40.6, 5697.0], [40.7, 5699.0], [40.8, 5699.0], [40.9, 5702.0], [41.0, 5702.0], [41.1, 5705.0], [41.2, 5705.0], [41.3, 5711.0], [41.4, 5711.0], [41.5, 5713.0], [41.6, 5713.0], [41.7, 5714.0], [41.8, 5714.0], [41.9, 5715.0], [42.0, 5715.0], [42.1, 5723.0], [42.2, 5723.0], [42.3, 5723.0], [42.4, 5723.0], [42.5, 5723.0], [42.6, 5723.0], [42.7, 5724.0], [42.8, 5724.0], [42.9, 5730.0], [43.0, 5730.0], [43.1, 5735.0], [43.2, 5735.0], [43.3, 5748.0], [43.4, 5748.0], [43.5, 5748.0], [43.6, 5748.0], [43.7, 5760.0], [43.8, 5760.0], [43.9, 5779.0], [44.0, 5779.0], [44.1, 5803.0], [44.2, 5803.0], [44.3, 5812.0], [44.4, 5812.0], [44.5, 5917.0], [44.6, 5917.0], [44.7, 5917.0], [44.8, 5917.0], [44.9, 5936.0], [45.0, 5936.0], [45.1, 5941.0], [45.2, 5941.0], [45.3, 5955.0], [45.4, 5955.0], [45.5, 5959.0], [45.6, 5959.0], [45.7, 5971.0], [45.8, 5971.0], [45.9, 5994.0], [46.0, 5994.0], [46.1, 5999.0], [46.2, 5999.0], [46.3, 6011.0], [46.4, 6011.0], [46.5, 6016.0], [46.6, 6016.0], [46.7, 6022.0], [46.8, 6022.0], [46.9, 6022.0], [47.0, 6022.0], [47.1, 6023.0], [47.2, 6023.0], [47.3, 6033.0], [47.4, 6033.0], [47.5, 6037.0], [47.6, 6037.0], [47.7, 6054.0], [47.8, 6054.0], [47.9, 6063.0], [48.0, 6063.0], [48.1, 6068.0], [48.2, 6068.0], [48.3, 6076.0], [48.4, 6076.0], [48.5, 6091.0], [48.6, 6091.0], [48.7, 6096.0], [48.8, 6096.0], [48.9, 6107.0], [49.0, 6107.0], [49.1, 6116.0], [49.2, 6116.0], [49.3, 6117.0], [49.4, 6117.0], [49.5, 6142.0], [49.6, 6142.0], [49.7, 6152.0], [49.8, 6152.0], [49.9, 6367.0], [50.0, 6367.0], [50.1, 6373.0], [50.2, 6373.0], [50.3, 6379.0], [50.4, 6379.0], [50.5, 6384.0], [50.6, 6384.0], [50.7, 6388.0], [50.8, 6388.0], [50.9, 6390.0], [51.0, 6390.0], [51.1, 6393.0], [51.2, 6393.0], [51.3, 6399.0], [51.4, 6399.0], [51.5, 6440.0], [51.6, 6440.0], [51.7, 6632.0], [51.8, 6632.0], [51.9, 6640.0], [52.0, 6640.0], [52.1, 6648.0], [52.2, 6648.0], [52.3, 6654.0], [52.4, 6654.0], [52.5, 6658.0], [52.6, 6658.0], [52.7, 6680.0], [52.8, 6680.0], [52.9, 6685.0], [53.0, 6685.0], [53.1, 6688.0], [53.2, 6688.0], [53.3, 6704.0], [53.4, 6704.0], [53.5, 6705.0], [53.6, 6705.0], [53.7, 6707.0], [53.8, 6707.0], [53.9, 6717.0], [54.0, 6717.0], [54.1, 8006.0], [54.2, 8006.0], [54.3, 8013.0], [54.4, 8013.0], [54.5, 8019.0], [54.6, 8019.0], [54.7, 8021.0], [54.8, 8021.0], [54.9, 8035.0], [55.0, 8035.0], [55.1, 8054.0], [55.2, 8054.0], [55.3, 8106.0], [55.4, 8106.0], [55.5, 8146.0], [55.6, 8146.0], [55.7, 8168.0], [55.8, 8168.0], [55.9, 8194.0], [56.0, 8194.0], [56.1, 8217.0], [56.2, 8217.0], [56.3, 8250.0], [56.4, 8250.0], [56.5, 8251.0], [56.6, 8251.0], [56.7, 8252.0], [56.8, 8252.0], [56.9, 8262.0], [57.0, 8262.0], [57.1, 8269.0], [57.2, 8269.0], [57.3, 8283.0], [57.4, 8283.0], [57.5, 8290.0], [57.6, 8290.0], [57.7, 8300.0], [57.8, 8300.0], [57.9, 8319.0], [58.0, 8319.0], [58.1, 8320.0], [58.2, 8320.0], [58.3, 8323.0], [58.4, 8323.0], [58.5, 8323.0], [58.6, 8323.0], [58.7, 8324.0], [58.8, 8324.0], [58.9, 8325.0], [59.0, 8325.0], [59.1, 8340.0], [59.2, 8340.0], [59.3, 8343.0], [59.4, 8343.0], [59.5, 8345.0], [59.6, 8345.0], [59.7, 8362.0], [59.8, 8362.0], [59.9, 8363.0], [60.0, 8363.0], [60.1, 8388.0], [60.2, 8388.0], [60.3, 8401.0], [60.4, 8401.0], [60.5, 8402.0], [60.6, 8402.0], [60.7, 8413.0], [60.8, 8413.0], [60.9, 8424.0], [61.0, 8424.0], [61.1, 8428.0], [61.2, 8428.0], [61.3, 8431.0], [61.4, 8431.0], [61.5, 8445.0], [61.6, 8445.0], [61.7, 8468.0], [61.8, 8468.0], [61.9, 8476.0], [62.0, 8476.0], [62.1, 8482.0], [62.2, 8482.0], [62.3, 8507.0], [62.4, 8507.0], [62.5, 8585.0], [62.6, 8585.0], [62.7, 8590.0], [62.8, 8590.0], [62.9, 8620.0], [63.0, 8620.0], [63.1, 8898.0], [63.2, 8898.0], [63.3, 8916.0], [63.4, 8916.0], [63.5, 8965.0], [63.6, 8965.0], [63.7, 9041.0], [63.8, 9041.0], [63.9, 9078.0], [64.0, 9078.0], [64.1, 9111.0], [64.2, 9111.0], [64.3, 9111.0], [64.4, 9111.0], [64.5, 9112.0], [64.6, 9112.0], [64.7, 9136.0], [64.8, 9136.0], [64.9, 9145.0], [65.0, 9145.0], [65.1, 9152.0], [65.2, 9152.0], [65.3, 9156.0], [65.4, 9156.0], [65.5, 9162.0], [65.6, 9162.0], [65.7, 9183.0], [65.8, 9183.0], [65.9, 9185.0], [66.0, 9185.0], [66.1, 9189.0], [66.2, 9189.0], [66.3, 9213.0], [66.4, 9213.0], [66.5, 9238.0], [66.6, 9238.0], [66.7, 9273.0], [66.8, 9273.0], [66.9, 9305.0], [67.0, 9305.0], [67.1, 9306.0], [67.2, 9306.0], [67.3, 9308.0], [67.4, 9308.0], [67.5, 9320.0], [67.6, 9320.0], [67.7, 9373.0], [67.8, 9373.0], [67.9, 9410.0], [68.0, 9410.0], [68.1, 9435.0], [68.2, 9435.0], [68.3, 9443.0], [68.4, 9443.0], [68.5, 9448.0], [68.6, 9448.0], [68.7, 9454.0], [68.8, 9454.0], [68.9, 9493.0], [69.0, 9493.0], [69.1, 9497.0], [69.2, 9497.0], [69.3, 9506.0], [69.4, 9506.0], [69.5, 9551.0], [69.6, 9551.0], [69.7, 9578.0], [69.8, 9578.0], [69.9, 9758.0], [70.0, 9758.0], [70.1, 9782.0], [70.2, 9782.0], [70.3, 9869.0], [70.4, 9869.0], [70.5, 9896.0], [70.6, 9896.0], [70.7, 9900.0], [70.8, 9900.0], [70.9, 9923.0], [71.0, 9923.0], [71.1, 9930.0], [71.2, 9930.0], [71.3, 9967.0], [71.4, 9967.0], [71.5, 9976.0], [71.6, 9976.0], [71.7, 10253.0], [71.8, 10253.0], [71.9, 10288.0], [72.0, 10288.0], [72.1, 10297.0], [72.2, 10297.0], [72.3, 10312.0], [72.4, 10312.0], [72.5, 10317.0], [72.6, 10317.0], [72.7, 10325.0], [72.8, 10325.0], [72.9, 10348.0], [73.0, 10348.0], [73.1, 10376.0], [73.2, 10376.0], [73.3, 10384.0], [73.4, 10384.0], [73.5, 10389.0], [73.6, 10389.0], [73.7, 10406.0], [73.8, 10406.0], [73.9, 10411.0], [74.0, 10411.0], [74.1, 10411.0], [74.2, 10411.0], [74.3, 10414.0], [74.4, 10414.0], [74.5, 10420.0], [74.6, 10420.0], [74.7, 10422.0], [74.8, 10422.0], [74.9, 10426.0], [75.0, 10426.0], [75.1, 10441.0], [75.2, 10441.0], [75.3, 10457.0], [75.4, 10457.0], [75.5, 10464.0], [75.6, 10464.0], [75.7, 10470.0], [75.8, 10470.0], [75.9, 10500.0], [76.0, 10500.0], [76.1, 10514.0], [76.2, 10514.0], [76.3, 10528.0], [76.4, 10528.0], [76.5, 10554.0], [76.6, 10554.0], [76.7, 10560.0], [76.8, 10560.0], [76.9, 10577.0], [77.0, 10577.0], [77.1, 10613.0], [77.2, 10613.0], [77.3, 10617.0], [77.4, 10617.0], [77.5, 10720.0], [77.6, 10720.0], [77.7, 11490.0], [77.8, 11490.0], [77.9, 11550.0], [78.0, 11550.0], [78.1, 11633.0], [78.2, 11633.0], [78.3, 11639.0], [78.4, 11639.0], [78.5, 13708.0], [78.6, 13708.0], [78.7, 13716.0], [78.8, 13716.0], [78.9, 13718.0], [79.0, 13718.0], [79.1, 13732.0], [79.2, 13732.0], [79.3, 13735.0], [79.4, 13735.0], [79.5, 13735.0], [79.6, 13735.0], [79.7, 13742.0], [79.8, 13742.0], [79.9, 13746.0], [80.0, 13746.0], [80.1, 13749.0], [80.2, 13749.0], [80.3, 13749.0], [80.4, 13749.0], [80.5, 13750.0], [80.6, 13750.0], [80.7, 13751.0], [80.8, 13751.0], [80.9, 13751.0], [81.0, 13751.0], [81.1, 13757.0], [81.2, 13757.0], [81.3, 13760.0], [81.4, 13760.0], [81.5, 13802.0], [81.6, 13802.0], [81.7, 13828.0], [81.8, 13828.0], [81.9, 13854.0], [82.0, 13854.0], [82.1, 13903.0], [82.2, 13903.0], [82.3, 13911.0], [82.4, 13911.0], [82.5, 13914.0], [82.6, 13914.0], [82.7, 13931.0], [82.8, 13931.0], [82.9, 13951.0], [83.0, 13951.0], [83.1, 13954.0], [83.2, 13954.0], [83.3, 13955.0], [83.4, 13955.0], [83.5, 13955.0], [83.6, 13955.0], [83.7, 13960.0], [83.8, 13960.0], [83.9, 13963.0], [84.0, 13963.0], [84.1, 13966.0], [84.2, 13966.0], [84.3, 13967.0], [84.4, 13967.0], [84.5, 13978.0], [84.6, 13978.0], [84.7, 13981.0], [84.8, 13981.0], [84.9, 13984.0], [85.0, 13984.0], [85.1, 13990.0], [85.2, 13990.0], [85.3, 13998.0], [85.4, 13998.0], [85.5, 14000.0], [85.6, 14000.0], [85.7, 14007.0], [85.8, 14007.0], [85.9, 14011.0], [86.0, 14011.0], [86.1, 14024.0], [86.2, 14024.0], [86.3, 14027.0], [86.4, 14027.0], [86.5, 14045.0], [86.6, 14045.0], [86.7, 14046.0], [86.8, 14046.0], [86.9, 14071.0], [87.0, 14071.0], [87.1, 14072.0], [87.2, 14072.0], [87.3, 14088.0], [87.4, 14088.0], [87.5, 14709.0], [87.6, 14709.0], [87.7, 14718.0], [87.8, 14718.0], [87.9, 14726.0], [88.0, 14726.0], [88.1, 14736.0], [88.2, 14736.0], [88.3, 14739.0], [88.4, 14739.0], [88.5, 14739.0], [88.6, 14739.0], [88.7, 14747.0], [88.8, 14747.0], [88.9, 14761.0], [89.0, 14761.0], [89.1, 14767.0], [89.2, 14767.0], [89.3, 14780.0], [89.4, 14780.0], [89.5, 14787.0], [89.6, 14787.0], [89.7, 14790.0], [89.8, 14790.0], [89.9, 14797.0], [90.0, 14797.0], [90.1, 14809.0], [90.2, 14809.0], [90.3, 14819.0], [90.4, 14819.0], [90.5, 14897.0], [90.6, 14897.0], [90.7, 14913.0], [90.8, 14913.0], [90.9, 14923.0], [91.0, 14923.0], [91.1, 14925.0], [91.2, 14925.0], [91.3, 14932.0], [91.4, 14932.0], [91.5, 14973.0], [91.6, 14973.0], [91.7, 14978.0], [91.8, 14978.0], [91.9, 14979.0], [92.0, 14979.0], [92.1, 14982.0], [92.2, 14982.0], [92.3, 14983.0], [92.4, 14983.0], [92.5, 14987.0], [92.6, 14987.0], [92.7, 14994.0], [92.8, 14994.0], [92.9, 15005.0], [93.0, 15005.0], [93.1, 15009.0], [93.2, 15009.0], [93.3, 15012.0], [93.4, 15012.0], [93.5, 15016.0], [93.6, 15016.0], [93.7, 15018.0], [93.8, 15018.0], [93.9, 15020.0], [94.0, 15020.0], [94.1, 15021.0], [94.2, 15021.0], [94.3, 15022.0], [94.4, 15022.0], [94.5, 15027.0], [94.6, 15027.0], [94.7, 15028.0], [94.8, 15028.0], [94.9, 15051.0], [95.0, 15051.0], [95.1, 15059.0], [95.2, 15059.0], [95.3, 15065.0], [95.4, 15065.0], [95.5, 15069.0], [95.6, 15069.0], [95.7, 15102.0], [95.8, 15102.0], [95.9, 15108.0], [96.0, 15108.0], [96.1, 15114.0], [96.2, 15114.0], [96.3, 16449.0], [96.4, 16449.0], [96.5, 16502.0], [96.6, 16502.0], [96.7, 16503.0], [96.8, 16503.0], [96.9, 16510.0], [97.0, 16510.0], [97.1, 16513.0], [97.2, 16513.0], [97.3, 16518.0], [97.4, 16518.0], [97.5, 16522.0], [97.6, 16522.0], [97.7, 16524.0], [97.8, 16524.0], [97.9, 16541.0], [98.0, 16541.0], [98.1, 16545.0], [98.2, 16545.0], [98.3, 16550.0], [98.4, 16550.0], [98.5, 16570.0], [98.6, 16570.0], [98.7, 16629.0], [98.8, 16629.0], [98.9, 16643.0], [99.0, 16643.0], [99.1, 16653.0], [99.2, 16653.0], [99.3, 16654.0], [99.4, 16654.0], [99.5, 16658.0], [99.6, 16658.0], [99.7, 16710.0], [99.8, 16710.0], [99.9, 16714.0], [100.0, 16714.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 265.0], [0.1, 265.0], [0.2, 265.0], [0.3, 265.0], [0.4, 265.0], [0.5, 265.0], [0.6, 265.0], [0.7, 265.0], [0.8, 266.0], [0.9, 266.0], [1.0, 266.0], [1.1, 266.0], [1.2, 266.0], [1.3, 266.0], [1.4, 266.0], [1.5, 266.0], [1.6, 266.0], [1.7, 266.0], [1.8, 266.0], [1.9, 266.0], [2.0, 266.0], [2.1, 266.0], [2.2, 266.0], [2.3, 266.0], [2.4, 266.0], [2.5, 266.0], [2.6, 266.0], [2.7, 266.0], [2.8, 266.0], [2.9, 266.0], [3.0, 266.0], [3.1, 266.0], [3.2, 266.0], [3.3, 266.0], [3.4, 266.0], [3.5, 266.0], [3.6, 266.0], [3.7, 266.0], [3.8, 267.0], [3.9, 267.0], [4.0, 267.0], [4.1, 267.0], [4.2, 267.0], [4.3, 267.0], [4.4, 267.0], [4.5, 267.0], [4.6, 267.0], [4.7, 267.0], [4.8, 267.0], [4.9, 267.0], [5.0, 267.0], [5.1, 267.0], [5.2, 267.0], [5.3, 267.0], [5.4, 267.0], [5.5, 267.0], [5.6, 268.0], [5.7, 268.0], [5.8, 268.0], [5.9, 268.0], [6.0, 268.0], [6.1, 268.0], [6.2, 268.0], [6.3, 268.0], [6.4, 268.0], [6.5, 268.0], [6.6, 268.0], [6.7, 268.0], [6.8, 268.0], [6.9, 268.0], [7.0, 268.0], [7.1, 268.0], [7.2, 268.0], [7.3, 268.0], [7.4, 268.0], [7.5, 268.0], [7.6, 268.0], [7.7, 268.0], [7.8, 268.0], [7.9, 268.0], [8.0, 268.0], [8.1, 268.0], [8.2, 268.0], [8.3, 268.0], [8.4, 268.0], [8.5, 268.0], [8.6, 268.0], [8.7, 268.0], [8.8, 268.0], [8.9, 268.0], [9.0, 268.0], [9.1, 268.0], [9.2, 268.0], [9.3, 268.0], [9.4, 268.0], [9.5, 268.0], [9.6, 269.0], [9.7, 269.0], [9.8, 269.0], [9.9, 269.0], [10.0, 269.0], [10.1, 269.0], [10.2, 269.0], [10.3, 269.0], [10.4, 269.0], [10.5, 269.0], [10.6, 269.0], [10.7, 269.0], [10.8, 269.0], [10.9, 269.0], [11.0, 269.0], [11.1, 269.0], [11.2, 269.0], [11.3, 269.0], [11.4, 269.0], [11.5, 269.0], [11.6, 269.0], [11.7, 269.0], [11.8, 269.0], [11.9, 269.0], [12.0, 269.0], [12.1, 269.0], [12.2, 269.0], [12.3, 269.0], [12.4, 270.0], [12.5, 270.0], [12.6, 270.0], [12.7, 270.0], [12.8, 270.0], [12.9, 270.0], [13.0, 270.0], [13.1, 270.0], [13.2, 270.0], [13.3, 270.0], [13.4, 270.0], [13.5, 270.0], [13.6, 270.0], [13.7, 270.0], [13.8, 270.0], [13.9, 270.0], [14.0, 270.0], [14.1, 270.0], [14.2, 270.0], [14.3, 270.0], [14.4, 270.0], [14.5, 270.0], [14.6, 270.0], [14.7, 270.0], [14.8, 270.0], [14.9, 270.0], [15.0, 270.0], [15.1, 270.0], [15.2, 271.0], [15.3, 271.0], [15.4, 271.0], [15.5, 271.0], [15.6, 271.0], [15.7, 271.0], [15.8, 271.0], [15.9, 271.0], [16.0, 271.0], [16.1, 271.0], [16.2, 271.0], [16.3, 271.0], [16.4, 271.0], [16.5, 271.0], [16.6, 271.0], [16.7, 271.0], [16.8, 271.0], [16.9, 271.0], [17.0, 271.0], [17.1, 271.0], [17.2, 272.0], [17.3, 272.0], [17.4, 272.0], [17.5, 272.0], [17.6, 272.0], [17.7, 272.0], [17.8, 272.0], [17.9, 272.0], [18.0, 272.0], [18.1, 272.0], [18.2, 272.0], [18.3, 272.0], [18.4, 272.0], [18.5, 272.0], [18.6, 272.0], [18.7, 272.0], [18.8, 273.0], [18.9, 273.0], [19.0, 273.0], [19.1, 273.0], [19.2, 273.0], [19.3, 273.0], [19.4, 273.0], [19.5, 273.0], [19.6, 273.0], [19.7, 273.0], [19.8, 273.0], [19.9, 273.0], [20.0, 273.0], [20.1, 273.0], [20.2, 273.0], [20.3, 273.0], [20.4, 273.0], [20.5, 273.0], [20.6, 273.0], [20.7, 273.0], [20.8, 273.0], [20.9, 273.0], [21.0, 273.0], [21.1, 273.0], [21.2, 273.0], [21.3, 273.0], [21.4, 273.0], [21.5, 273.0], [21.6, 273.0], [21.7, 273.0], [21.8, 274.0], [21.9, 274.0], [22.0, 274.0], [22.1, 274.0], [22.2, 274.0], [22.3, 274.0], [22.4, 274.0], [22.5, 274.0], [22.6, 274.0], [22.7, 274.0], [22.8, 275.0], [22.9, 275.0], [23.0, 276.0], [23.1, 276.0], [23.2, 276.0], [23.3, 276.0], [23.4, 276.0], [23.5, 276.0], [23.6, 276.0], [23.7, 276.0], [23.8, 276.0], [23.9, 276.0], [24.0, 277.0], [24.1, 277.0], [24.2, 277.0], [24.3, 277.0], [24.4, 277.0], [24.5, 277.0], [24.6, 277.0], [24.7, 277.0], [24.8, 278.0], [24.9, 278.0], [25.0, 279.0], [25.1, 279.0], [25.2, 279.0], [25.3, 279.0], [25.4, 279.0], [25.5, 279.0], [25.6, 280.0], [25.7, 280.0], [25.8, 280.0], [25.9, 280.0], [26.0, 281.0], [26.1, 281.0], [26.2, 281.0], [26.3, 281.0], [26.4, 281.0], [26.5, 281.0], [26.6, 281.0], [26.7, 281.0], [26.8, 282.0], [26.9, 282.0], [27.0, 283.0], [27.1, 283.0], [27.2, 284.0], [27.3, 284.0], [27.4, 284.0], [27.5, 284.0], [27.6, 285.0], [27.7, 285.0], [27.8, 285.0], [27.9, 285.0], [28.0, 285.0], [28.1, 285.0], [28.2, 285.0], [28.3, 285.0], [28.4, 286.0], [28.5, 286.0], [28.6, 290.0], [28.7, 290.0], [28.8, 290.0], [28.9, 290.0], [29.0, 290.0], [29.1, 290.0], [29.2, 292.0], [29.3, 292.0], [29.4, 292.0], [29.5, 292.0], [29.6, 292.0], [29.7, 292.0], [29.8, 292.0], [29.9, 292.0], [30.0, 292.0], [30.1, 292.0], [30.2, 294.0], [30.3, 294.0], [30.4, 295.0], [30.5, 295.0], [30.6, 295.0], [30.7, 295.0], [30.8, 296.0], [30.9, 296.0], [31.0, 297.0], [31.1, 297.0], [31.2, 298.0], [31.3, 298.0], [31.4, 298.0], [31.5, 298.0], [31.6, 300.0], [31.7, 300.0], [31.8, 300.0], [31.9, 300.0], [32.0, 300.0], [32.1, 300.0], [32.2, 301.0], [32.3, 301.0], [32.4, 301.0], [32.5, 301.0], [32.6, 303.0], [32.7, 303.0], [32.8, 305.0], [32.9, 305.0], [33.0, 306.0], [33.1, 306.0], [33.2, 307.0], [33.3, 307.0], [33.4, 307.0], [33.5, 309.0], [33.6, 309.0], [33.7, 310.0], [33.8, 310.0], [33.9, 310.0], [34.0, 310.0], [34.1, 311.0], [34.2, 311.0], [34.3, 313.0], [34.4, 313.0], [34.5, 315.0], [34.6, 315.0], [34.7, 315.0], [34.8, 315.0], [34.9, 316.0], [35.0, 316.0], [35.1, 317.0], [35.2, 317.0], [35.3, 318.0], [35.4, 318.0], [35.5, 320.0], [35.6, 320.0], [35.7, 321.0], [35.8, 321.0], [35.9, 324.0], [36.0, 324.0], [36.1, 325.0], [36.2, 325.0], [36.3, 325.0], [36.4, 325.0], [36.5, 325.0], [36.6, 325.0], [36.7, 326.0], [36.8, 326.0], [36.9, 326.0], [37.0, 326.0], [37.1, 326.0], [37.2, 326.0], [37.3, 327.0], [37.4, 327.0], [37.5, 327.0], [37.6, 327.0], [37.7, 327.0], [37.8, 327.0], [37.9, 327.0], [38.0, 327.0], [38.1, 329.0], [38.2, 329.0], [38.3, 329.0], [38.4, 329.0], [38.5, 329.0], [38.6, 329.0], [38.7, 329.0], [38.8, 329.0], [38.9, 330.0], [39.0, 330.0], [39.1, 330.0], [39.2, 330.0], [39.3, 332.0], [39.4, 332.0], [39.5, 332.0], [39.6, 332.0], [39.7, 332.0], [39.8, 332.0], [39.9, 332.0], [40.0, 332.0], [40.1, 333.0], [40.2, 333.0], [40.3, 333.0], [40.4, 333.0], [40.5, 334.0], [40.6, 334.0], [40.7, 335.0], [40.8, 335.0], [40.9, 335.0], [41.0, 335.0], [41.1, 336.0], [41.2, 336.0], [41.3, 336.0], [41.4, 336.0], [41.5, 336.0], [41.6, 336.0], [41.7, 337.0], [41.8, 337.0], [41.9, 337.0], [42.0, 337.0], [42.1, 337.0], [42.2, 337.0], [42.3, 337.0], [42.4, 337.0], [42.5, 337.0], [42.6, 337.0], [42.7, 337.0], [42.8, 337.0], [42.9, 337.0], [43.0, 337.0], [43.1, 338.0], [43.2, 338.0], [43.3, 339.0], [43.4, 339.0], [43.5, 339.0], [43.6, 339.0], [43.7, 339.0], [43.8, 339.0], [43.9, 339.0], [44.0, 339.0], [44.1, 339.0], [44.2, 339.0], [44.3, 340.0], [44.4, 340.0], [44.5, 340.0], [44.6, 340.0], [44.7, 342.0], [44.8, 342.0], [44.9, 342.0], [45.0, 342.0], [45.1, 344.0], [45.2, 344.0], [45.3, 345.0], [45.4, 345.0], [45.5, 345.0], [45.6, 345.0], [45.7, 346.0], [45.8, 346.0], [45.9, 346.0], [46.0, 346.0], [46.1, 347.0], [46.2, 347.0], [46.3, 349.0], [46.4, 349.0], [46.5, 350.0], [46.6, 350.0], [46.7, 351.0], [46.8, 351.0], [46.9, 352.0], [47.0, 352.0], [47.1, 353.0], [47.2, 353.0], [47.3, 355.0], [47.4, 355.0], [47.5, 356.0], [47.6, 356.0], [47.7, 356.0], [47.8, 356.0], [47.9, 357.0], [48.0, 357.0], [48.1, 358.0], [48.2, 358.0], [48.3, 358.0], [48.4, 358.0], [48.5, 359.0], [48.6, 359.0], [48.7, 361.0], [48.8, 361.0], [48.9, 363.0], [49.0, 363.0], [49.1, 364.0], [49.2, 364.0], [49.3, 364.0], [49.4, 364.0], [49.5, 365.0], [49.6, 365.0], [49.7, 366.0], [49.8, 366.0], [49.9, 367.0], [50.0, 367.0], [50.1, 367.0], [50.2, 367.0], [50.3, 368.0], [50.4, 368.0], [50.5, 368.0], [50.6, 368.0], [50.7, 368.0], [50.8, 368.0], [50.9, 369.0], [51.0, 369.0], [51.1, 370.0], [51.2, 370.0], [51.3, 371.0], [51.4, 371.0], [51.5, 371.0], [51.6, 371.0], [51.7, 372.0], [51.8, 372.0], [51.9, 373.0], [52.0, 373.0], [52.1, 373.0], [52.2, 373.0], [52.3, 375.0], [52.4, 375.0], [52.5, 375.0], [52.6, 375.0], [52.7, 376.0], [52.8, 376.0], [52.9, 376.0], [53.0, 376.0], [53.1, 376.0], [53.2, 376.0], [53.3, 378.0], [53.4, 378.0], [53.5, 380.0], [53.6, 380.0], [53.7, 384.0], [53.8, 384.0], [53.9, 385.0], [54.0, 385.0], [54.1, 385.0], [54.2, 385.0], [54.3, 386.0], [54.4, 386.0], [54.5, 386.0], [54.6, 386.0], [54.7, 388.0], [54.8, 388.0], [54.9, 391.0], [55.0, 391.0], [55.1, 391.0], [55.2, 391.0], [55.3, 392.0], [55.4, 392.0], [55.5, 396.0], [55.6, 396.0], [55.7, 398.0], [55.8, 398.0], [55.9, 399.0], [56.0, 399.0], [56.1, 400.0], [56.2, 400.0], [56.3, 400.0], [56.4, 400.0], [56.5, 401.0], [56.6, 401.0], [56.7, 401.0], [56.8, 401.0], [56.9, 402.0], [57.0, 402.0], [57.1, 403.0], [57.2, 403.0], [57.3, 403.0], [57.4, 403.0], [57.5, 404.0], [57.6, 404.0], [57.7, 405.0], [57.8, 405.0], [57.9, 406.0], [58.0, 406.0], [58.1, 407.0], [58.2, 407.0], [58.3, 409.0], [58.4, 409.0], [58.5, 410.0], [58.6, 410.0], [58.7, 412.0], [58.8, 412.0], [58.9, 412.0], [59.0, 412.0], [59.1, 415.0], [59.2, 415.0], [59.3, 419.0], [59.4, 419.0], [59.5, 419.0], [59.6, 419.0], [59.7, 424.0], [59.8, 424.0], [59.9, 425.0], [60.0, 425.0], [60.1, 425.0], [60.2, 425.0], [60.3, 426.0], [60.4, 426.0], [60.5, 427.0], [60.6, 427.0], [60.7, 433.0], [60.8, 433.0], [60.9, 434.0], [61.0, 434.0], [61.1, 435.0], [61.2, 435.0], [61.3, 436.0], [61.4, 436.0], [61.5, 437.0], [61.6, 437.0], [61.7, 438.0], [61.8, 438.0], [61.9, 452.0], [62.0, 452.0], [62.1, 452.0], [62.2, 452.0], [62.3, 457.0], [62.4, 457.0], [62.5, 463.0], [62.6, 463.0], [62.7, 476.0], [62.8, 476.0], [62.9, 476.0], [63.0, 476.0], [63.1, 478.0], [63.2, 478.0], [63.3, 480.0], [63.4, 480.0], [63.5, 487.0], [63.6, 487.0], [63.7, 487.0], [63.8, 487.0], [63.9, 489.0], [64.0, 489.0], [64.1, 492.0], [64.2, 492.0], [64.3, 493.0], [64.4, 493.0], [64.5, 509.0], [64.6, 509.0], [64.7, 511.0], [64.8, 511.0], [64.9, 524.0], [65.0, 524.0], [65.1, 524.0], [65.2, 524.0], [65.3, 543.0], [65.4, 543.0], [65.5, 545.0], [65.6, 545.0], [65.7, 545.0], [65.8, 545.0], [65.9, 557.0], [66.0, 557.0], [66.1, 558.0], [66.2, 558.0], [66.3, 559.0], [66.4, 559.0], [66.5, 565.0], [66.6, 565.0], [66.7, 566.0], [66.8, 566.0], [66.9, 566.0], [67.0, 566.0], [67.1, 567.0], [67.2, 567.0], [67.3, 571.0], [67.4, 571.0], [67.5, 572.0], [67.6, 572.0], [67.7, 576.0], [67.8, 576.0], [67.9, 577.0], [68.0, 577.0], [68.1, 580.0], [68.2, 580.0], [68.3, 581.0], [68.4, 581.0], [68.5, 585.0], [68.6, 585.0], [68.7, 587.0], [68.8, 587.0], [68.9, 587.0], [69.0, 587.0], [69.1, 592.0], [69.2, 592.0], [69.3, 592.0], [69.4, 592.0], [69.5, 1039.0], [69.6, 1039.0], [69.7, 1040.0], [69.8, 1040.0], [69.9, 1040.0], [70.0, 1040.0], [70.1, 1041.0], [70.2, 1041.0], [70.3, 1048.0], [70.4, 1048.0], [70.5, 1048.0], [70.6, 1048.0], [70.7, 1048.0], [70.8, 1048.0], [70.9, 1049.0], [71.0, 1049.0], [71.1, 1054.0], [71.2, 1054.0], [71.3, 1054.0], [71.4, 1054.0], [71.5, 1056.0], [71.6, 1056.0], [71.7, 1057.0], [71.8, 1057.0], [71.9, 1063.0], [72.0, 1063.0], [72.1, 1079.0], [72.2, 1079.0], [72.3, 1080.0], [72.4, 1080.0], [72.5, 1089.0], [72.6, 1089.0], [72.7, 1091.0], [72.8, 1091.0], [72.9, 1095.0], [73.0, 1095.0], [73.1, 1195.0], [73.2, 1195.0], [73.3, 1196.0], [73.4, 1196.0], [73.5, 1247.0], [73.6, 1247.0], [73.7, 1270.0], [73.8, 1270.0], [73.9, 1299.0], [74.0, 1299.0], [74.1, 1307.0], [74.2, 1307.0], [74.3, 1316.0], [74.4, 1316.0], [74.5, 1341.0], [74.6, 1341.0], [74.7, 1346.0], [74.8, 1346.0], [74.9, 1347.0], [75.0, 1347.0], [75.1, 1348.0], [75.2, 1348.0], [75.3, 1348.0], [75.4, 1348.0], [75.5, 1350.0], [75.6, 1350.0], [75.7, 1353.0], [75.8, 1353.0], [75.9, 1356.0], [76.0, 1356.0], [76.1, 1356.0], [76.2, 1356.0], [76.3, 1357.0], [76.4, 1357.0], [76.5, 1359.0], [76.6, 1359.0], [76.7, 1388.0], [76.8, 1388.0], [76.9, 1400.0], [77.0, 1400.0], [77.1, 1401.0], [77.2, 1401.0], [77.3, 1403.0], [77.4, 1403.0], [77.5, 1404.0], [77.6, 1404.0], [77.7, 1407.0], [77.8, 1407.0], [77.9, 1416.0], [78.0, 1416.0], [78.1, 1416.0], [78.2, 1416.0], [78.3, 1432.0], [78.4, 1432.0], [78.5, 1435.0], [78.6, 1435.0], [78.7, 1437.0], [78.8, 1437.0], [78.9, 1438.0], [79.0, 1438.0], [79.1, 1440.0], [79.2, 1440.0], [79.3, 1442.0], [79.4, 1442.0], [79.5, 1443.0], [79.6, 1443.0], [79.7, 1444.0], [79.8, 1444.0], [79.9, 1459.0], [80.0, 1459.0], [80.1, 1479.0], [80.2, 1479.0], [80.3, 1493.0], [80.4, 1493.0], [80.5, 1498.0], [80.6, 1498.0], [80.7, 1503.0], [80.8, 1503.0], [80.9, 1510.0], [81.0, 1510.0], [81.1, 1530.0], [81.2, 1530.0], [81.3, 1538.0], [81.4, 1538.0], [81.5, 1540.0], [81.6, 1540.0], [81.7, 1543.0], [81.8, 1543.0], [81.9, 1544.0], [82.0, 1544.0], [82.1, 1545.0], [82.2, 1545.0], [82.3, 1549.0], [82.4, 1549.0], [82.5, 1551.0], [82.6, 1551.0], [82.7, 1551.0], [82.8, 1551.0], [82.9, 1552.0], [83.0, 1552.0], [83.1, 1560.0], [83.2, 1560.0], [83.3, 1571.0], [83.4, 1571.0], [83.5, 1578.0], [83.6, 1578.0], [83.7, 1581.0], [83.8, 1581.0], [83.9, 1590.0], [84.0, 1590.0], [84.1, 1590.0], [84.2, 1590.0], [84.3, 1592.0], [84.4, 1592.0], [84.5, 1593.0], [84.6, 1593.0], [84.7, 1601.0], [84.8, 1601.0], [84.9, 1606.0], [85.0, 1606.0], [85.1, 1606.0], [85.2, 1606.0], [85.3, 1608.0], [85.4, 1608.0], [85.5, 1608.0], [85.6, 1608.0], [85.7, 1614.0], [85.8, 1614.0], [85.9, 1616.0], [86.0, 1616.0], [86.1, 1617.0], [86.2, 1617.0], [86.3, 1619.0], [86.4, 1619.0], [86.5, 1621.0], [86.6, 1621.0], [86.7, 1623.0], [86.8, 1623.0], [86.9, 1629.0], [87.0, 1629.0], [87.1, 1633.0], [87.2, 1633.0], [87.3, 1633.0], [87.4, 1633.0], [87.5, 1690.0], [87.6, 1690.0], [87.7, 1701.0], [87.8, 1701.0], [87.9, 1706.0], [88.0, 1706.0], [88.1, 1713.0], [88.2, 1713.0], [88.3, 1713.0], [88.4, 1713.0], [88.5, 1724.0], [88.6, 1724.0], [88.7, 1725.0], [88.8, 1725.0], [88.9, 1733.0], [89.0, 1733.0], [89.1, 1733.0], [89.2, 1733.0], [89.3, 1735.0], [89.4, 1735.0], [89.5, 1749.0], [89.6, 1749.0], [89.7, 1780.0], [89.8, 1780.0], [89.9, 1783.0], [90.0, 1783.0], [90.1, 1785.0], [90.2, 1785.0], [90.3, 1800.0], [90.4, 1800.0], [90.5, 1837.0], [90.6, 1837.0], [90.7, 1839.0], [90.8, 1839.0], [90.9, 1844.0], [91.0, 1844.0], [91.1, 1854.0], [91.2, 1854.0], [91.3, 1857.0], [91.4, 1857.0], [91.5, 1861.0], [91.6, 1861.0], [91.7, 1866.0], [91.8, 1866.0], [91.9, 1877.0], [92.0, 1877.0], [92.1, 1878.0], [92.2, 1878.0], [92.3, 1885.0], [92.4, 1885.0], [92.5, 1888.0], [92.6, 1888.0], [92.7, 1890.0], [92.8, 1890.0], [92.9, 1897.0], [93.0, 1897.0], [93.1, 1904.0], [93.2, 1904.0], [93.3, 1905.0], [93.4, 1905.0], [93.5, 1912.0], [93.6, 1912.0], [93.7, 1916.0], [93.8, 1916.0], [93.9, 1928.0], [94.0, 1928.0], [94.1, 1930.0], [94.2, 1930.0], [94.3, 1931.0], [94.4, 1931.0], [94.5, 1936.0], [94.6, 1936.0], [94.7, 1944.0], [94.8, 1944.0], [94.9, 1945.0], [95.0, 1945.0], [95.1, 2011.0], [95.2, 2011.0], [95.3, 2067.0], [95.4, 2067.0], [95.5, 2076.0], [95.6, 2076.0], [95.7, 2172.0], [95.8, 2172.0], [95.9, 2177.0], [96.0, 2177.0], [96.1, 2199.0], [96.2, 2199.0], [96.3, 2264.0], [96.4, 2264.0], [96.5, 2279.0], [96.6, 2279.0], [96.7, 2288.0], [96.8, 2288.0], [96.9, 2311.0], [97.0, 2311.0], [97.1, 2321.0], [97.2, 2321.0], [97.3, 2351.0], [97.4, 2351.0], [97.5, 2361.0], [97.6, 2361.0], [97.7, 2371.0], [97.8, 2371.0], [97.9, 2443.0], [98.0, 2443.0], [98.1, 2444.0], [98.2, 2444.0], [98.3, 2451.0], [98.4, 2451.0], [98.5, 2464.0], [98.6, 2464.0], [98.7, 2488.0], [98.8, 2488.0], [98.9, 2749.0], [99.0, 2749.0], [99.1, 2767.0], [99.2, 2767.0], [99.3, 4005.0], [99.4, 4005.0], [99.5, 4244.0], [99.6, 4244.0], [99.7, 4274.0], [99.8, 4274.0], [99.9, 13846.0], [100.0, 13846.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[0.0, 264.0], [0.1, 264.0], [0.2, 265.0], [0.3, 265.0], [0.4, 265.0], [0.5, 265.0], [0.6, 265.0], [0.7, 265.0], [0.8, 265.0], [0.9, 265.0], [1.0, 265.0], [1.1, 265.0], [1.2, 266.0], [1.3, 266.0], [1.4, 266.0], [1.5, 266.0], [1.6, 266.0], [1.7, 266.0], [1.8, 266.0], [1.9, 266.0], [2.0, 266.0], [2.1, 266.0], [2.2, 266.0], [2.3, 266.0], [2.4, 266.0], [2.5, 266.0], [2.6, 266.0], [2.7, 266.0], [2.8, 266.0], [2.9, 266.0], [3.0, 266.0], [3.1, 266.0], [3.2, 267.0], [3.3, 267.0], [3.4, 267.0], [3.5, 267.0], [3.6, 267.0], [3.7, 267.0], [3.8, 267.0], [3.9, 267.0], [4.0, 267.0], [4.1, 267.0], [4.2, 267.0], [4.3, 267.0], [4.4, 267.0], [4.5, 267.0], [4.6, 267.0], [4.7, 267.0], [4.8, 267.0], [4.9, 267.0], [5.0, 267.0], [5.1, 267.0], [5.2, 267.0], [5.3, 267.0], [5.4, 268.0], [5.5, 268.0], [5.6, 268.0], [5.7, 268.0], [5.8, 268.0], [5.9, 268.0], [6.0, 268.0], [6.1, 268.0], [6.2, 268.0], [6.3, 268.0], [6.4, 268.0], [6.5, 268.0], [6.6, 268.0], [6.7, 268.0], [6.8, 268.0], [6.9, 269.0], [7.0, 269.0], [7.1, 269.0], [7.2, 269.0], [7.3, 269.0], [7.4, 269.0], [7.5, 269.0], [7.6, 269.0], [7.7, 269.0], [7.8, 269.0], [7.9, 269.0], [8.0, 269.0], [8.1, 269.0], [8.2, 269.0], [8.3, 269.0], [8.4, 269.0], [8.5, 269.0], [8.6, 269.0], [8.7, 269.0], [8.8, 269.0], [8.9, 269.0], [9.0, 269.0], [9.1, 269.0], [9.2, 269.0], [9.3, 269.0], [9.4, 270.0], [9.5, 270.0], [9.6, 270.0], [9.7, 270.0], [9.8, 270.0], [9.9, 270.0], [10.0, 270.0], [10.1, 270.0], [10.2, 270.0], [10.3, 270.0], [10.4, 270.0], [10.5, 270.0], [10.6, 270.0], [10.7, 270.0], [10.8, 270.0], [10.9, 270.0], [11.0, 271.0], [11.1, 271.0], [11.2, 271.0], [11.3, 271.0], [11.4, 271.0], [11.5, 271.0], [11.6, 271.0], [11.7, 271.0], [11.8, 271.0], [11.9, 271.0], [12.0, 271.0], [12.1, 271.0], [12.2, 271.0], [12.3, 271.0], [12.4, 271.0], [12.5, 271.0], [12.6, 271.0], [12.7, 271.0], [12.8, 271.0], [12.9, 271.0], [13.0, 272.0], [13.1, 272.0], [13.2, 272.0], [13.3, 272.0], [13.4, 272.0], [13.5, 272.0], [13.6, 272.0], [13.7, 272.0], [13.8, 272.0], [13.9, 272.0], [14.0, 272.0], [14.1, 272.0], [14.2, 272.0], [14.3, 272.0], [14.4, 272.0], [14.5, 272.0], [14.6, 272.0], [14.7, 272.0], [14.8, 272.0], [14.9, 272.0], [15.0, 272.0], [15.1, 272.0], [15.2, 273.0], [15.3, 273.0], [15.4, 273.0], [15.5, 273.0], [15.6, 273.0], [15.7, 273.0], [15.8, 273.0], [15.9, 273.0], [16.0, 273.0], [16.1, 273.0], [16.2, 273.0], [16.3, 273.0], [16.4, 274.0], [16.5, 274.0], [16.6, 274.0], [16.7, 274.0], [16.8, 274.0], [16.9, 274.0], [17.0, 275.0], [17.1, 275.0], [17.2, 275.0], [17.3, 275.0], [17.4, 275.0], [17.5, 275.0], [17.6, 276.0], [17.7, 276.0], [17.8, 276.0], [17.9, 276.0], [18.0, 276.0], [18.1, 276.0], [18.2, 276.0], [18.3, 276.0], [18.4, 276.0], [18.5, 276.0], [18.6, 277.0], [18.7, 277.0], [18.8, 277.0], [18.9, 277.0], [19.0, 278.0], [19.1, 278.0], [19.2, 278.0], [19.3, 278.0], [19.4, 278.0], [19.5, 278.0], [19.6, 278.0], [19.7, 278.0], [19.8, 279.0], [19.9, 279.0], [20.0, 279.0], [20.1, 279.0], [20.2, 279.0], [20.3, 279.0], [20.4, 279.0], [20.5, 279.0], [20.6, 279.0], [20.7, 279.0], [20.8, 280.0], [20.9, 280.0], [21.0, 281.0], [21.1, 281.0], [21.2, 281.0], [21.3, 281.0], [21.4, 283.0], [21.5, 283.0], [21.6, 283.0], [21.7, 283.0], [21.8, 283.0], [21.9, 283.0], [22.0, 284.0], [22.1, 284.0], [22.2, 285.0], [22.3, 285.0], [22.4, 285.0], [22.5, 285.0], [22.6, 285.0], [22.7, 285.0], [22.8, 286.0], [22.9, 286.0], [23.0, 288.0], [23.1, 288.0], [23.2, 290.0], [23.3, 290.0], [23.4, 290.0], [23.5, 290.0], [23.6, 291.0], [23.7, 291.0], [23.8, 291.0], [23.9, 291.0], [24.0, 291.0], [24.1, 291.0], [24.2, 291.0], [24.3, 291.0], [24.4, 291.0], [24.5, 291.0], [24.6, 292.0], [24.7, 292.0], [24.8, 292.0], [24.9, 292.0], [25.0, 292.0], [25.1, 292.0], [25.2, 292.0], [25.3, 292.0], [25.4, 294.0], [25.5, 294.0], [25.6, 294.0], [25.7, 294.0], [25.8, 295.0], [25.9, 295.0], [26.0, 295.0], [26.1, 295.0], [26.2, 296.0], [26.3, 296.0], [26.4, 296.0], [26.5, 296.0], [26.6, 296.0], [26.7, 296.0], [26.8, 298.0], [26.9, 298.0], [27.0, 299.0], [27.1, 299.0], [27.2, 301.0], [27.3, 301.0], [27.4, 302.0], [27.5, 302.0], [27.6, 302.0], [27.7, 302.0], [27.8, 304.0], [27.9, 304.0], [28.0, 304.0], [28.1, 304.0], [28.2, 308.0], [28.3, 308.0], [28.4, 308.0], [28.5, 308.0], [28.6, 308.0], [28.7, 308.0], [28.8, 308.0], [28.9, 308.0], [29.0, 308.0], [29.1, 308.0], [29.2, 309.0], [29.3, 309.0], [29.4, 309.0], [29.5, 309.0], [29.6, 310.0], [29.7, 310.0], [29.8, 310.0], [29.9, 310.0], [30.0, 311.0], [30.1, 311.0], [30.2, 311.0], [30.3, 311.0], [30.4, 311.0], [30.5, 311.0], [30.6, 312.0], [30.7, 312.0], [30.8, 313.0], [30.9, 313.0], [31.0, 313.0], [31.1, 313.0], [31.2, 314.0], [31.3, 314.0], [31.4, 314.0], [31.5, 314.0], [31.6, 314.0], [31.7, 314.0], [31.8, 314.0], [31.9, 314.0], [32.0, 315.0], [32.1, 315.0], [32.2, 316.0], [32.3, 316.0], [32.4, 317.0], [32.5, 317.0], [32.6, 317.0], [32.7, 317.0], [32.8, 320.0], [32.9, 320.0], [33.0, 321.0], [33.1, 321.0], [33.2, 321.0], [33.3, 321.0], [33.4, 321.0], [33.5, 321.0], [33.6, 321.0], [33.7, 321.0], [33.8, 321.0], [33.9, 321.0], [34.0, 322.0], [34.1, 322.0], [34.2, 322.0], [34.3, 322.0], [34.4, 322.0], [34.5, 322.0], [34.6, 322.0], [34.7, 322.0], [34.8, 323.0], [34.9, 323.0], [35.0, 324.0], [35.1, 324.0], [35.2, 324.0], [35.3, 324.0], [35.4, 325.0], [35.5, 325.0], [35.6, 325.0], [35.7, 325.0], [35.8, 325.0], [35.9, 325.0], [36.0, 326.0], [36.1, 326.0], [36.2, 327.0], [36.3, 327.0], [36.4, 327.0], [36.5, 327.0], [36.6, 328.0], [36.7, 328.0], [36.8, 328.0], [36.9, 328.0], [37.0, 328.0], [37.1, 328.0], [37.2, 328.0], [37.3, 328.0], [37.4, 329.0], [37.5, 329.0], [37.6, 329.0], [37.7, 329.0], [37.8, 331.0], [37.9, 331.0], [38.0, 331.0], [38.1, 331.0], [38.2, 331.0], [38.3, 331.0], [38.4, 331.0], [38.5, 331.0], [38.6, 332.0], [38.7, 332.0], [38.8, 332.0], [38.9, 332.0], [39.0, 332.0], [39.1, 332.0], [39.2, 336.0], [39.3, 336.0], [39.4, 336.0], [39.5, 336.0], [39.6, 337.0], [39.7, 337.0], [39.8, 337.0], [39.9, 337.0], [40.0, 338.0], [40.1, 338.0], [40.2, 338.0], [40.3, 338.0], [40.4, 338.0], [40.5, 338.0], [40.6, 338.0], [40.7, 338.0], [40.8, 339.0], [40.9, 339.0], [41.0, 340.0], [41.1, 340.0], [41.2, 341.0], [41.3, 341.0], [41.4, 342.0], [41.5, 342.0], [41.6, 342.0], [41.7, 342.0], [41.8, 343.0], [41.9, 343.0], [42.0, 343.0], [42.1, 343.0], [42.2, 343.0], [42.3, 343.0], [42.4, 344.0], [42.5, 344.0], [42.6, 344.0], [42.7, 344.0], [42.8, 344.0], [42.9, 344.0], [43.0, 347.0], [43.1, 347.0], [43.2, 348.0], [43.3, 348.0], [43.4, 348.0], [43.5, 348.0], [43.6, 348.0], [43.7, 348.0], [43.8, 349.0], [43.9, 349.0], [44.0, 350.0], [44.1, 350.0], [44.2, 350.0], [44.3, 350.0], [44.4, 352.0], [44.5, 352.0], [44.6, 352.0], [44.7, 352.0], [44.8, 353.0], [44.9, 353.0], [45.0, 354.0], [45.1, 354.0], [45.2, 354.0], [45.3, 354.0], [45.4, 355.0], [45.5, 355.0], [45.6, 355.0], [45.7, 355.0], [45.8, 356.0], [45.9, 356.0], [46.0, 357.0], [46.1, 357.0], [46.2, 358.0], [46.3, 358.0], [46.4, 358.0], [46.5, 359.0], [46.6, 359.0], [46.7, 361.0], [46.8, 361.0], [46.9, 362.0], [47.0, 362.0], [47.1, 362.0], [47.2, 362.0], [47.3, 362.0], [47.4, 362.0], [47.5, 363.0], [47.6, 363.0], [47.7, 367.0], [47.8, 367.0], [47.9, 368.0], [48.0, 368.0], [48.1, 371.0], [48.2, 371.0], [48.3, 371.0], [48.4, 371.0], [48.5, 372.0], [48.6, 372.0], [48.7, 374.0], [48.8, 374.0], [48.9, 374.0], [49.0, 374.0], [49.1, 377.0], [49.2, 377.0], [49.3, 379.0], [49.4, 379.0], [49.5, 382.0], [49.6, 382.0], [49.7, 382.0], [49.8, 382.0], [49.9, 384.0], [50.0, 384.0], [50.1, 391.0], [50.2, 391.0], [50.3, 392.0], [50.4, 392.0], [50.5, 394.0], [50.6, 394.0], [50.7, 396.0], [50.8, 396.0], [50.9, 400.0], [51.0, 400.0], [51.1, 408.0], [51.2, 408.0], [51.3, 409.0], [51.4, 409.0], [51.5, 410.0], [51.6, 410.0], [51.7, 411.0], [51.8, 411.0], [51.9, 419.0], [52.0, 419.0], [52.1, 421.0], [52.2, 421.0], [52.3, 428.0], [52.4, 428.0], [52.5, 433.0], [52.6, 433.0], [52.7, 439.0], [52.8, 439.0], [52.9, 440.0], [53.0, 440.0], [53.1, 449.0], [53.2, 449.0], [53.3, 451.0], [53.4, 451.0], [53.5, 454.0], [53.6, 454.0], [53.7, 460.0], [53.8, 460.0], [53.9, 461.0], [54.0, 461.0], [54.1, 464.0], [54.2, 464.0], [54.3, 464.0], [54.4, 464.0], [54.5, 467.0], [54.6, 467.0], [54.7, 472.0], [54.8, 472.0], [54.9, 474.0], [55.0, 474.0], [55.1, 478.0], [55.2, 478.0], [55.3, 481.0], [55.4, 481.0], [55.5, 487.0], [55.6, 487.0], [55.7, 488.0], [55.8, 488.0], [55.9, 489.0], [56.0, 489.0], [56.1, 492.0], [56.2, 492.0], [56.3, 492.0], [56.4, 492.0], [56.5, 496.0], [56.6, 496.0], [56.7, 498.0], [56.8, 498.0], [56.9, 499.0], [57.0, 499.0], [57.1, 500.0], [57.2, 500.0], [57.3, 500.0], [57.4, 500.0], [57.5, 501.0], [57.6, 501.0], [57.7, 505.0], [57.8, 505.0], [57.9, 505.0], [58.0, 505.0], [58.1, 507.0], [58.2, 507.0], [58.3, 508.0], [58.4, 508.0], [58.5, 509.0], [58.6, 509.0], [58.7, 509.0], [58.8, 509.0], [58.9, 511.0], [59.0, 511.0], [59.1, 512.0], [59.2, 512.0], [59.3, 512.0], [59.4, 512.0], [59.5, 513.0], [59.6, 513.0], [59.7, 513.0], [59.8, 513.0], [59.9, 515.0], [60.0, 515.0], [60.1, 516.0], [60.2, 516.0], [60.3, 516.0], [60.4, 516.0], [60.5, 517.0], [60.6, 517.0], [60.7, 520.0], [60.8, 520.0], [60.9, 520.0], [61.0, 520.0], [61.1, 527.0], [61.2, 527.0], [61.3, 527.0], [61.4, 527.0], [61.5, 528.0], [61.6, 528.0], [61.7, 529.0], [61.8, 529.0], [61.9, 530.0], [62.0, 530.0], [62.1, 538.0], [62.2, 538.0], [62.3, 540.0], [62.4, 540.0], [62.5, 543.0], [62.6, 543.0], [62.7, 543.0], [62.8, 543.0], [62.9, 564.0], [63.0, 564.0], [63.1, 1040.0], [63.2, 1040.0], [63.3, 1042.0], [63.4, 1042.0], [63.5, 1043.0], [63.6, 1043.0], [63.7, 1045.0], [63.8, 1045.0], [63.9, 1046.0], [64.0, 1046.0], [64.1, 1046.0], [64.2, 1046.0], [64.3, 1048.0], [64.4, 1048.0], [64.5, 1049.0], [64.6, 1049.0], [64.7, 1054.0], [64.8, 1054.0], [64.9, 1063.0], [65.0, 1063.0], [65.1, 1066.0], [65.2, 1066.0], [65.3, 1069.0], [65.4, 1069.0], [65.5, 1076.0], [65.6, 1076.0], [65.7, 1096.0], [65.8, 1096.0], [65.9, 1181.0], [66.0, 1181.0], [66.1, 1190.0], [66.2, 1190.0], [66.3, 1194.0], [66.4, 1194.0], [66.5, 1209.0], [66.6, 1209.0], [66.7, 1219.0], [66.8, 1219.0], [66.9, 1222.0], [67.0, 1222.0], [67.1, 1223.0], [67.2, 1223.0], [67.3, 1225.0], [67.4, 1225.0], [67.5, 1227.0], [67.6, 1227.0], [67.7, 1251.0], [67.8, 1251.0], [67.9, 1261.0], [68.0, 1261.0], [68.1, 1274.0], [68.2, 1274.0], [68.3, 1282.0], [68.4, 1282.0], [68.5, 1334.0], [68.6, 1334.0], [68.7, 1388.0], [68.8, 1388.0], [68.9, 1393.0], [69.0, 1393.0], [69.1, 1406.0], [69.2, 1406.0], [69.3, 1448.0], [69.4, 1448.0], [69.5, 1469.0], [69.6, 1469.0], [69.7, 1498.0], [69.8, 1498.0], [69.9, 1515.0], [70.0, 1515.0], [70.1, 1560.0], [70.2, 1560.0], [70.3, 1591.0], [70.4, 1591.0], [70.5, 1602.0], [70.6, 1602.0], [70.7, 1657.0], [70.8, 1657.0], [70.9, 1657.0], [71.0, 1657.0], [71.1, 1660.0], [71.2, 1660.0], [71.3, 1688.0], [71.4, 1688.0], [71.5, 1690.0], [71.6, 1690.0], [71.7, 1694.0], [71.8, 1694.0], [71.9, 1705.0], [72.0, 1705.0], [72.1, 1706.0], [72.2, 1706.0], [72.3, 1712.0], [72.4, 1712.0], [72.5, 1717.0], [72.6, 1717.0], [72.7, 1718.0], [72.8, 1718.0], [72.9, 1734.0], [73.0, 1734.0], [73.1, 1739.0], [73.2, 1739.0], [73.3, 1749.0], [73.4, 1749.0], [73.5, 1758.0], [73.6, 1758.0], [73.7, 1760.0], [73.8, 1760.0], [73.9, 1760.0], [74.0, 1760.0], [74.1, 1776.0], [74.2, 1776.0], [74.3, 1790.0], [74.4, 1790.0], [74.5, 1804.0], [74.6, 1804.0], [74.7, 1808.0], [74.8, 1808.0], [74.9, 1814.0], [75.0, 1814.0], [75.1, 1820.0], [75.2, 1820.0], [75.3, 1830.0], [75.4, 1830.0], [75.5, 1832.0], [75.6, 1832.0], [75.7, 1835.0], [75.8, 1835.0], [75.9, 1837.0], [76.0, 1837.0], [76.1, 1844.0], [76.2, 1844.0], [76.3, 1847.0], [76.4, 1847.0], [76.5, 1850.0], [76.6, 1850.0], [76.7, 1851.0], [76.8, 1851.0], [76.9, 1852.0], [77.0, 1852.0], [77.1, 1853.0], [77.2, 1853.0], [77.3, 1854.0], [77.4, 1854.0], [77.5, 1858.0], [77.6, 1858.0], [77.7, 1864.0], [77.8, 1864.0], [77.9, 1864.0], [78.0, 1864.0], [78.1, 1868.0], [78.2, 1868.0], [78.3, 1871.0], [78.4, 1871.0], [78.5, 1873.0], [78.6, 1873.0], [78.7, 1874.0], [78.8, 1874.0], [78.9, 1874.0], [79.0, 1874.0], [79.1, 1876.0], [79.2, 1876.0], [79.3, 1879.0], [79.4, 1879.0], [79.5, 1880.0], [79.6, 1880.0], [79.7, 1881.0], [79.8, 1881.0], [79.9, 1883.0], [80.0, 1883.0], [80.1, 1883.0], [80.2, 1883.0], [80.3, 1884.0], [80.4, 1884.0], [80.5, 1884.0], [80.6, 1884.0], [80.7, 1885.0], [80.8, 1885.0], [80.9, 1886.0], [81.0, 1886.0], [81.1, 1886.0], [81.2, 1886.0], [81.3, 1892.0], [81.4, 1892.0], [81.5, 1894.0], [81.6, 1894.0], [81.7, 1897.0], [81.8, 1897.0], [81.9, 1898.0], [82.0, 1898.0], [82.1, 1899.0], [82.2, 1899.0], [82.3, 1899.0], [82.4, 1899.0], [82.5, 1899.0], [82.6, 1899.0], [82.7, 1904.0], [82.8, 1904.0], [82.9, 1904.0], [83.0, 1904.0], [83.1, 1905.0], [83.2, 1905.0], [83.3, 1906.0], [83.4, 1906.0], [83.5, 1908.0], [83.6, 1908.0], [83.7, 1909.0], [83.8, 1909.0], [83.9, 1910.0], [84.0, 1910.0], [84.1, 1915.0], [84.2, 1915.0], [84.3, 1915.0], [84.4, 1915.0], [84.5, 1916.0], [84.6, 1916.0], [84.7, 1918.0], [84.8, 1918.0], [84.9, 1919.0], [85.0, 1919.0], [85.1, 1920.0], [85.2, 1920.0], [85.3, 1929.0], [85.4, 1929.0], [85.5, 1929.0], [85.6, 1929.0], [85.7, 1933.0], [85.8, 1933.0], [85.9, 1937.0], [86.0, 1937.0], [86.1, 1944.0], [86.2, 1944.0], [86.3, 1948.0], [86.4, 1948.0], [86.5, 1948.0], [86.6, 1948.0], [86.7, 1950.0], [86.8, 1950.0], [86.9, 1951.0], [87.0, 1951.0], [87.1, 1952.0], [87.2, 1952.0], [87.3, 1953.0], [87.4, 1953.0], [87.5, 1953.0], [87.6, 1953.0], [87.7, 1955.0], [87.8, 1955.0], [87.9, 1955.0], [88.0, 1955.0], [88.1, 1960.0], [88.2, 1960.0], [88.3, 1961.0], [88.4, 1961.0], [88.5, 1961.0], [88.6, 1961.0], [88.7, 1962.0], [88.8, 1962.0], [88.9, 1965.0], [89.0, 1965.0], [89.1, 1971.0], [89.2, 1971.0], [89.3, 1971.0], [89.4, 1971.0], [89.5, 1972.0], [89.6, 1972.0], [89.7, 1974.0], [89.8, 1974.0], [89.9, 1974.0], [90.0, 1974.0], [90.1, 1975.0], [90.2, 1975.0], [90.3, 1978.0], [90.4, 1978.0], [90.5, 1980.0], [90.6, 1980.0], [90.7, 1981.0], [90.8, 1981.0], [90.9, 1986.0], [91.0, 1986.0], [91.1, 1987.0], [91.2, 1987.0], [91.3, 1990.0], [91.4, 1990.0], [91.5, 1992.0], [91.6, 1992.0], [91.7, 1993.0], [91.8, 1993.0], [91.9, 1993.0], [92.0, 1993.0], [92.1, 1994.0], [92.2, 1994.0], [92.3, 1997.0], [92.4, 1997.0], [92.5, 2000.0], [92.6, 2000.0], [92.7, 2021.0], [92.8, 2021.0], [92.9, 2026.0], [93.0, 2026.0], [93.1, 2033.0], [93.2, 2033.0], [93.3, 2040.0], [93.4, 2040.0], [93.5, 2052.0], [93.6, 2052.0], [93.7, 2068.0], [93.8, 2068.0], [93.9, 2116.0], [94.0, 2116.0], [94.1, 2182.0], [94.2, 2182.0], [94.3, 2309.0], [94.4, 2309.0], [94.5, 2338.0], [94.6, 2338.0], [94.7, 2352.0], [94.8, 2352.0], [94.9, 2420.0], [95.0, 2420.0], [95.1, 2567.0], [95.2, 2567.0], [95.3, 2590.0], [95.4, 2590.0], [95.5, 2591.0], [95.6, 2591.0], [95.7, 2627.0], [95.8, 2627.0], [95.9, 2656.0], [96.0, 2656.0], [96.1, 2737.0], [96.2, 2737.0], [96.3, 2845.0], [96.4, 2845.0], [96.5, 2846.0], [96.6, 2846.0], [96.7, 2894.0], [96.8, 2894.0], [96.9, 2923.0], [97.0, 2923.0], [97.1, 2944.0], [97.2, 2944.0], [97.3, 2945.0], [97.4, 2945.0], [97.5, 2946.0], [97.6, 2946.0], [97.7, 2949.0], [97.8, 2949.0], [97.9, 2997.0], [98.0, 2997.0], [98.1, 3173.0], [98.2, 3173.0], [98.3, 3296.0], [98.4, 3296.0], [98.5, 3849.0], [98.6, 3849.0], [98.7, 4094.0], [98.8, 4094.0], [98.9, 4096.0], [99.0, 4096.0], [99.1, 4103.0], [99.2, 4103.0], [99.3, 4114.0], [99.4, 4114.0], [99.5, 4704.0], [99.6, 4704.0], [99.7, 5461.0], [99.8, 5461.0], [99.9, 14128.0], [100.0, 14128.0]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[0.0, 529.0], [0.1, 529.0], [0.2, 529.0], [0.3, 529.0], [0.4, 530.0], [0.5, 530.0], [0.6, 530.0], [0.7, 538.0], [0.8, 538.0], [0.9, 538.0], [1.0, 538.0], [1.1, 538.0], [1.2, 538.0], [1.3, 539.0], [1.4, 539.0], [1.5, 540.0], [1.6, 541.0], [1.7, 541.0], [1.8, 545.0], [1.9, 545.0], [2.0, 547.0], [2.1, 547.0], [2.2, 548.0], [2.3, 548.0], [2.4, 548.0], [2.5, 549.0], [2.6, 549.0], [2.7, 553.0], [2.8, 553.0], [2.9, 560.0], [3.0, 560.0], [3.1, 563.0], [3.2, 563.0], [3.3, 1031.0], [3.4, 1031.0], [3.5, 1032.0], [3.6, 1032.0], [3.7, 1033.0], [3.8, 1033.0], [3.9, 1037.0], [4.0, 1037.0], [4.1, 1038.0], [4.2, 1038.0], [4.3, 1038.0], [4.4, 1038.0], [4.5, 1041.0], [4.6, 1041.0], [4.7, 1042.0], [4.8, 1042.0], [4.9, 1043.0], [5.0, 1043.0], [5.1, 1043.0], [5.2, 1043.0], [5.3, 1044.0], [5.4, 1044.0], [5.5, 1044.0], [5.6, 1044.0], [5.7, 1044.0], [5.8, 1044.0], [5.9, 1044.0], [6.0, 1044.0], [6.1, 1045.0], [6.2, 1045.0], [6.3, 1046.0], [6.4, 1046.0], [6.5, 1046.0], [6.6, 1046.0], [6.7, 1046.0], [6.8, 1046.0], [6.9, 1050.0], [7.0, 1050.0], [7.1, 1050.0], [7.2, 1050.0], [7.3, 1051.0], [7.4, 1051.0], [7.5, 1053.0], [7.6, 1053.0], [7.7, 1054.0], [7.8, 1054.0], [7.9, 1054.0], [8.0, 1054.0], [8.1, 1054.0], [8.2, 1054.0], [8.3, 1055.0], [8.4, 1055.0], [8.5, 1056.0], [8.6, 1056.0], [8.7, 1056.0], [8.8, 1056.0], [8.9, 1058.0], [9.0, 1058.0], [9.1, 1062.0], [9.2, 1062.0], [9.3, 1067.0], [9.4, 1071.0], [9.5, 1071.0], [9.6, 1073.0], [9.7, 1073.0], [9.8, 1078.0], [9.9, 1078.0], [10.0, 1080.0], [10.1, 1080.0], [10.2, 1080.0], [10.3, 1080.0], [10.4, 1082.0], [10.5, 1082.0], [10.6, 1082.0], [10.7, 1082.0], [10.8, 1084.0], [10.9, 1084.0], [11.0, 1084.0], [11.1, 1084.0], [11.2, 1085.0], [11.3, 1085.0], [11.4, 1085.0], [11.5, 1085.0], [11.6, 1085.0], [11.7, 1085.0], [11.8, 1085.0], [11.9, 1085.0], [12.0, 1086.0], [12.1, 1086.0], [12.2, 1089.0], [12.3, 1089.0], [12.4, 1092.0], [12.5, 1092.0], [12.6, 1092.0], [12.7, 1092.0], [12.8, 1092.0], [12.9, 1092.0], [13.0, 1094.0], [13.1, 1094.0], [13.2, 1095.0], [13.3, 1095.0], [13.4, 1096.0], [13.5, 1096.0], [13.6, 1096.0], [13.7, 1096.0], [13.8, 1096.0], [13.9, 1096.0], [14.0, 1097.0], [14.1, 1097.0], [14.2, 1098.0], [14.3, 1098.0], [14.4, 1098.0], [14.5, 1098.0], [14.6, 1103.0], [14.7, 1103.0], [14.8, 1103.0], [14.9, 1103.0], [15.0, 1107.0], [15.1, 1107.0], [15.2, 1108.0], [15.3, 1108.0], [15.4, 1109.0], [15.5, 1109.0], [15.6, 1112.0], [15.7, 1112.0], [15.8, 1114.0], [15.9, 1114.0], [16.0, 1117.0], [16.1, 1117.0], [16.2, 1117.0], [16.3, 1117.0], [16.4, 1119.0], [16.5, 1119.0], [16.6, 1121.0], [16.7, 1121.0], [16.8, 1123.0], [16.9, 1123.0], [17.0, 1123.0], [17.1, 1123.0], [17.2, 1124.0], [17.3, 1124.0], [17.4, 1124.0], [17.5, 1124.0], [17.6, 1124.0], [17.7, 1124.0], [17.8, 1126.0], [17.9, 1126.0], [18.0, 1129.0], [18.1, 1129.0], [18.2, 1132.0], [18.3, 1132.0], [18.4, 1135.0], [18.5, 1135.0], [18.6, 1136.0], [18.7, 1136.0], [18.8, 1136.0], [18.9, 1136.0], [19.0, 1136.0], [19.1, 1136.0], [19.2, 1137.0], [19.3, 1137.0], [19.4, 1138.0], [19.5, 1138.0], [19.6, 1139.0], [19.7, 1139.0], [19.8, 1139.0], [19.9, 1139.0], [20.0, 1139.0], [20.1, 1139.0], [20.2, 1140.0], [20.3, 1140.0], [20.4, 1140.0], [20.5, 1140.0], [20.6, 1141.0], [20.7, 1141.0], [20.8, 1144.0], [20.9, 1144.0], [21.0, 1144.0], [21.1, 1144.0], [21.2, 1145.0], [21.3, 1145.0], [21.4, 1148.0], [21.5, 1148.0], [21.6, 1148.0], [21.7, 1148.0], [21.8, 1150.0], [21.9, 1150.0], [22.0, 1151.0], [22.1, 1151.0], [22.2, 1151.0], [22.3, 1151.0], [22.4, 1152.0], [22.5, 1152.0], [22.6, 1155.0], [22.7, 1155.0], [22.8, 1155.0], [22.9, 1155.0], [23.0, 1156.0], [23.1, 1156.0], [23.2, 1159.0], [23.3, 1159.0], [23.4, 1160.0], [23.5, 1160.0], [23.6, 1160.0], [23.7, 1160.0], [23.8, 1161.0], [23.9, 1161.0], [24.0, 1161.0], [24.1, 1161.0], [24.2, 1163.0], [24.3, 1163.0], [24.4, 1163.0], [24.5, 1163.0], [24.6, 1164.0], [24.7, 1164.0], [24.8, 1166.0], [24.9, 1166.0], [25.0, 1166.0], [25.1, 1166.0], [25.2, 1167.0], [25.3, 1167.0], [25.4, 1167.0], [25.5, 1167.0], [25.6, 1169.0], [25.7, 1169.0], [25.8, 1174.0], [25.9, 1174.0], [26.0, 1175.0], [26.1, 1175.0], [26.2, 1177.0], [26.3, 1177.0], [26.4, 1178.0], [26.5, 1178.0], [26.6, 1180.0], [26.7, 1180.0], [26.8, 1181.0], [26.9, 1181.0], [27.0, 1182.0], [27.1, 1182.0], [27.2, 1184.0], [27.3, 1184.0], [27.4, 1186.0], [27.5, 1186.0], [27.6, 1186.0], [27.7, 1186.0], [27.8, 1187.0], [27.9, 1187.0], [28.0, 1187.0], [28.1, 1187.0], [28.2, 1189.0], [28.3, 1189.0], [28.4, 1189.0], [28.5, 1189.0], [28.6, 1190.0], [28.7, 1190.0], [28.8, 1190.0], [28.9, 1190.0], [29.0, 1192.0], [29.1, 1192.0], [29.2, 1193.0], [29.3, 1193.0], [29.4, 1195.0], [29.5, 1195.0], [29.6, 1195.0], [29.7, 1195.0], [29.8, 1196.0], [29.9, 1196.0], [30.0, 1200.0], [30.1, 1200.0], [30.2, 1202.0], [30.3, 1202.0], [30.4, 1204.0], [30.5, 1204.0], [30.6, 1207.0], [30.7, 1207.0], [30.8, 1208.0], [30.9, 1208.0], [31.0, 1208.0], [31.1, 1208.0], [31.2, 1242.0], [31.3, 1242.0], [31.4, 1245.0], [31.5, 1245.0], [31.6, 1249.0], [31.7, 1249.0], [31.8, 1252.0], [31.9, 1252.0], [32.0, 1252.0], [32.1, 1252.0], [32.2, 1260.0], [32.3, 1260.0], [32.4, 1269.0], [32.5, 1269.0], [32.6, 1277.0], [32.7, 1277.0], [32.8, 1279.0], [32.9, 1279.0], [33.0, 1282.0], [33.1, 1282.0], [33.2, 1297.0], [33.3, 1297.0], [33.4, 1302.0], [33.5, 1302.0], [33.6, 1317.0], [33.7, 1317.0], [33.8, 1317.0], [33.9, 1317.0], [34.0, 1324.0], [34.1, 1324.0], [34.2, 1324.0], [34.3, 1324.0], [34.4, 1324.0], [34.5, 1324.0], [34.6, 1325.0], [34.7, 1325.0], [34.8, 1339.0], [34.9, 1339.0], [35.0, 1341.0], [35.1, 1341.0], [35.2, 1350.0], [35.3, 1350.0], [35.4, 1355.0], [35.5, 1355.0], [35.6, 1356.0], [35.7, 1356.0], [35.8, 1360.0], [35.9, 1360.0], [36.0, 1363.0], [36.1, 1363.0], [36.2, 1370.0], [36.3, 1370.0], [36.4, 1380.0], [36.5, 1380.0], [36.6, 1382.0], [36.7, 1382.0], [36.8, 1399.0], [36.9, 1399.0], [37.0, 1406.0], [37.1, 1406.0], [37.2, 1406.0], [37.3, 1406.0], [37.4, 1414.0], [37.5, 1414.0], [37.6, 1417.0], [37.7, 1417.0], [37.8, 1417.0], [37.9, 1425.0], [38.0, 1425.0], [38.1, 1425.0], [38.2, 1427.0], [38.3, 1427.0], [38.4, 1427.0], [38.5, 1430.0], [38.6, 1430.0], [38.7, 1431.0], [38.8, 1431.0], [38.9, 1431.0], [39.0, 1431.0], [39.1, 1437.0], [39.2, 1437.0], [39.3, 1437.0], [39.4, 1437.0], [39.5, 1448.0], [39.6, 1448.0], [39.7, 1464.0], [39.8, 1464.0], [39.9, 1475.0], [40.0, 1475.0], [40.1, 1483.0], [40.2, 1483.0], [40.3, 1484.0], [40.4, 1484.0], [40.5, 1492.0], [40.6, 1492.0], [40.7, 1535.0], [40.8, 1535.0], [40.9, 1545.0], [41.0, 1545.0], [41.1, 1574.0], [41.2, 1574.0], [41.3, 1575.0], [41.4, 1575.0], [41.5, 1582.0], [41.6, 1582.0], [41.7, 1609.0], [41.8, 1609.0], [41.9, 1628.0], [42.0, 1628.0], [42.1, 1649.0], [42.2, 1649.0], [42.3, 1701.0], [42.4, 1701.0], [42.5, 1701.0], [42.6, 1701.0], [42.7, 1703.0], [42.8, 1703.0], [42.9, 1717.0], [43.0, 1717.0], [43.1, 1725.0], [43.2, 1725.0], [43.3, 1731.0], [43.4, 1731.0], [43.5, 1734.0], [43.6, 1734.0], [43.7, 1734.0], [43.8, 1734.0], [43.9, 1741.0], [44.0, 1741.0], [44.1, 1743.0], [44.2, 1743.0], [44.3, 1749.0], [44.4, 1749.0], [44.5, 1749.0], [44.6, 1749.0], [44.7, 1756.0], [44.8, 1756.0], [44.9, 1764.0], [45.0, 1764.0], [45.1, 1768.0], [45.2, 1768.0], [45.3, 1772.0], [45.4, 1772.0], [45.5, 1778.0], [45.6, 1778.0], [45.7, 1783.0], [45.8, 1783.0], [45.9, 1783.0], [46.0, 1783.0], [46.1, 1796.0], [46.2, 1796.0], [46.3, 1803.0], [46.4, 1803.0], [46.5, 1804.0], [46.6, 1804.0], [46.7, 1807.0], [46.8, 1807.0], [46.9, 1810.0], [47.0, 1810.0], [47.1, 1814.0], [47.2, 1814.0], [47.3, 1818.0], [47.4, 1818.0], [47.5, 1823.0], [47.6, 1823.0], [47.7, 1830.0], [47.8, 1830.0], [47.9, 1830.0], [48.0, 1830.0], [48.1, 1835.0], [48.2, 1835.0], [48.3, 1839.0], [48.4, 1839.0], [48.5, 1842.0], [48.6, 1842.0], [48.7, 1845.0], [48.8, 1845.0], [48.9, 1851.0], [49.0, 1851.0], [49.1, 1859.0], [49.2, 1859.0], [49.3, 1862.0], [49.4, 1862.0], [49.5, 1863.0], [49.6, 1863.0], [49.7, 1866.0], [49.8, 1866.0], [49.9, 1867.0], [50.0, 1867.0], [50.1, 1874.0], [50.2, 1874.0], [50.3, 1874.0], [50.4, 1874.0], [50.5, 1877.0], [50.6, 1877.0], [50.7, 1878.0], [50.8, 1878.0], [50.9, 1879.0], [51.0, 1879.0], [51.1, 1881.0], [51.2, 1881.0], [51.3, 1881.0], [51.4, 1881.0], [51.5, 1881.0], [51.6, 1881.0], [51.7, 1882.0], [51.8, 1882.0], [51.9, 1884.0], [52.0, 1884.0], [52.1, 1885.0], [52.2, 1885.0], [52.3, 1886.0], [52.4, 1886.0], [52.5, 1887.0], [52.6, 1887.0], [52.7, 1889.0], [52.8, 1889.0], [52.9, 1891.0], [53.0, 1891.0], [53.1, 1894.0], [53.2, 1894.0], [53.3, 1895.0], [53.4, 1895.0], [53.5, 1896.0], [53.6, 1896.0], [53.7, 1897.0], [53.8, 1897.0], [53.9, 1898.0], [54.0, 1898.0], [54.1, 1899.0], [54.2, 1899.0], [54.3, 1901.0], [54.4, 1901.0], [54.5, 1905.0], [54.6, 1905.0], [54.7, 1909.0], [54.8, 1909.0], [54.9, 1911.0], [55.0, 1911.0], [55.1, 1912.0], [55.2, 1912.0], [55.3, 1913.0], [55.4, 1913.0], [55.5, 1914.0], [55.6, 1914.0], [55.7, 1916.0], [55.8, 1916.0], [55.9, 1920.0], [56.0, 1920.0], [56.1, 1921.0], [56.2, 1921.0], [56.3, 1924.0], [56.4, 1924.0], [56.5, 1926.0], [56.6, 1926.0], [56.7, 1927.0], [56.8, 1927.0], [56.9, 1935.0], [57.0, 1935.0], [57.1, 1939.0], [57.2, 1939.0], [57.3, 1941.0], [57.4, 1941.0], [57.5, 1943.0], [57.6, 1943.0], [57.7, 1945.0], [57.8, 1945.0], [57.9, 1946.0], [58.0, 1946.0], [58.1, 1947.0], [58.2, 1947.0], [58.3, 1950.0], [58.4, 1950.0], [58.5, 1952.0], [58.6, 1952.0], [58.7, 1954.0], [58.8, 1954.0], [58.9, 1955.0], [59.0, 1955.0], [59.1, 1956.0], [59.2, 1956.0], [59.3, 1961.0], [59.4, 1961.0], [59.5, 1961.0], [59.6, 1961.0], [59.7, 1961.0], [59.8, 1961.0], [59.9, 1962.0], [60.0, 1962.0], [60.1, 1962.0], [60.2, 1962.0], [60.3, 1963.0], [60.4, 1963.0], [60.5, 1969.0], [60.6, 1969.0], [60.7, 1970.0], [60.8, 1970.0], [60.9, 1971.0], [61.0, 1971.0], [61.1, 1973.0], [61.2, 1973.0], [61.3, 1974.0], [61.4, 1974.0], [61.5, 1975.0], [61.6, 1975.0], [61.7, 1980.0], [61.8, 1980.0], [61.9, 1980.0], [62.0, 1980.0], [62.1, 1981.0], [62.2, 1981.0], [62.3, 1982.0], [62.4, 1982.0], [62.5, 1982.0], [62.6, 1982.0], [62.7, 1982.0], [62.8, 1982.0], [62.9, 1983.0], [63.0, 1983.0], [63.1, 1988.0], [63.2, 1988.0], [63.3, 1988.0], [63.4, 1988.0], [63.5, 1990.0], [63.6, 1990.0], [63.7, 1993.0], [63.8, 1993.0], [63.9, 1995.0], [64.0, 1995.0], [64.1, 1997.0], [64.2, 1997.0], [64.3, 1999.0], [64.4, 1999.0], [64.5, 2004.0], [64.6, 2004.0], [64.7, 2007.0], [64.8, 2007.0], [64.9, 2011.0], [65.0, 2011.0], [65.1, 2013.0], [65.2, 2013.0], [65.3, 2016.0], [65.4, 2016.0], [65.5, 2019.0], [65.6, 2019.0], [65.7, 2046.0], [65.8, 2046.0], [65.9, 2046.0], [66.0, 2046.0], [66.1, 2052.0], [66.2, 2052.0], [66.3, 2056.0], [66.4, 2056.0], [66.5, 2067.0], [66.6, 2067.0], [66.7, 2079.0], [66.8, 2079.0], [66.9, 2079.0], [67.0, 2079.0], [67.1, 2089.0], [67.2, 2089.0], [67.3, 2091.0], [67.4, 2091.0], [67.5, 2104.0], [67.6, 2104.0], [67.7, 2133.0], [67.8, 2133.0], [67.9, 2143.0], [68.0, 2143.0], [68.1, 2144.0], [68.2, 2144.0], [68.3, 2148.0], [68.4, 2148.0], [68.5, 2202.0], [68.6, 2202.0], [68.7, 2210.0], [68.8, 2210.0], [68.9, 2213.0], [69.0, 2213.0], [69.1, 2222.0], [69.2, 2222.0], [69.3, 2222.0], [69.4, 2222.0], [69.5, 2225.0], [69.6, 2225.0], [69.7, 2227.0], [69.8, 2227.0], [69.9, 2239.0], [70.0, 2239.0], [70.1, 2243.0], [70.2, 2243.0], [70.3, 2246.0], [70.4, 2246.0], [70.5, 2248.0], [70.6, 2248.0], [70.7, 2252.0], [70.8, 2252.0], [70.9, 2259.0], [71.0, 2259.0], [71.1, 2260.0], [71.2, 2260.0], [71.3, 2260.0], [71.4, 2260.0], [71.5, 2261.0], [71.6, 2261.0], [71.7, 2264.0], [71.8, 2264.0], [71.9, 2265.0], [72.0, 2265.0], [72.1, 2267.0], [72.2, 2267.0], [72.3, 2276.0], [72.4, 2276.0], [72.5, 2276.0], [72.6, 2276.0], [72.7, 2281.0], [72.8, 2281.0], [72.9, 2296.0], [73.0, 2296.0], [73.1, 2308.0], [73.2, 2308.0], [73.3, 2313.0], [73.4, 2313.0], [73.5, 2313.0], [73.6, 2313.0], [73.7, 2317.0], [73.8, 2317.0], [73.9, 2327.0], [74.0, 2327.0], [74.1, 2332.0], [74.2, 2332.0], [74.3, 2333.0], [74.4, 2333.0], [74.5, 2347.0], [74.6, 2347.0], [74.7, 2359.0], [74.8, 2359.0], [74.9, 2369.0], [75.0, 2369.0], [75.1, 2371.0], [75.2, 2371.0], [75.3, 2372.0], [75.4, 2372.0], [75.5, 2424.0], [75.6, 2424.0], [75.7, 2434.0], [75.8, 2434.0], [75.9, 2450.0], [76.0, 2450.0], [76.1, 2451.0], [76.2, 2451.0], [76.3, 2470.0], [76.4, 2470.0], [76.5, 2471.0], [76.6, 2471.0], [76.7, 2527.0], [76.8, 2527.0], [76.9, 2528.0], [77.0, 2528.0], [77.1, 2538.0], [77.2, 2538.0], [77.3, 2540.0], [77.4, 2540.0], [77.5, 2550.0], [77.6, 2550.0], [77.7, 2552.0], [77.8, 2552.0], [77.9, 2558.0], [78.0, 2558.0], [78.1, 2558.0], [78.2, 2558.0], [78.3, 2572.0], [78.4, 2572.0], [78.5, 2573.0], [78.6, 2573.0], [78.7, 2573.0], [78.8, 2573.0], [78.9, 2578.0], [79.0, 2578.0], [79.1, 2581.0], [79.2, 2581.0], [79.3, 2599.0], [79.4, 2599.0], [79.5, 2601.0], [79.6, 2601.0], [79.7, 2608.0], [79.8, 2608.0], [79.9, 2610.0], [80.0, 2610.0], [80.1, 2620.0], [80.2, 2620.0], [80.3, 2621.0], [80.4, 2621.0], [80.5, 2633.0], [80.6, 2633.0], [80.7, 2640.0], [80.8, 2640.0], [80.9, 2643.0], [81.0, 2643.0], [81.1, 2645.0], [81.2, 2645.0], [81.3, 2651.0], [81.4, 2651.0], [81.5, 2653.0], [81.6, 2653.0], [81.7, 2655.0], [81.8, 2655.0], [81.9, 2659.0], [82.0, 2659.0], [82.1, 2661.0], [82.2, 2661.0], [82.3, 2661.0], [82.4, 2661.0], [82.5, 2664.0], [82.6, 2664.0], [82.7, 2667.0], [82.8, 2667.0], [82.9, 2667.0], [83.0, 2667.0], [83.1, 2685.0], [83.2, 2685.0], [83.3, 2686.0], [83.4, 2686.0], [83.5, 2691.0], [83.6, 2691.0], [83.7, 2738.0], [83.8, 2738.0], [83.9, 2797.0], [84.0, 2797.0], [84.1, 2799.0], [84.2, 2799.0], [84.3, 2818.0], [84.4, 2818.0], [84.5, 2820.0], [84.6, 2820.0], [84.7, 2823.0], [84.8, 2823.0], [84.9, 2833.0], [85.0, 2833.0], [85.1, 2864.0], [85.2, 2864.0], [85.3, 2888.0], [85.4, 2888.0], [85.5, 2905.0], [85.6, 2905.0], [85.7, 2908.0], [85.8, 2908.0], [85.9, 2911.0], [86.0, 2911.0], [86.1, 2919.0], [86.2, 2919.0], [86.3, 2932.0], [86.4, 2932.0], [86.5, 2938.0], [86.6, 2938.0], [86.7, 2997.0], [86.8, 2997.0], [86.9, 3000.0], [87.0, 3000.0], [87.1, 3029.0], [87.2, 3029.0], [87.3, 3050.0], [87.4, 3050.0], [87.5, 3060.0], [87.6, 3060.0], [87.7, 3103.0], [87.8, 3103.0], [87.9, 3129.0], [88.0, 3129.0], [88.1, 3220.0], [88.2, 3220.0], [88.3, 3225.0], [88.4, 3225.0], [88.5, 3237.0], [88.6, 3237.0], [88.7, 3239.0], [88.8, 3239.0], [88.9, 3275.0], [89.0, 3275.0], [89.1, 3291.0], [89.2, 3291.0], [89.3, 3296.0], [89.4, 3296.0], [89.5, 3302.0], [89.6, 3302.0], [89.7, 3309.0], [89.8, 3309.0], [89.9, 3318.0], [90.0, 3318.0], [90.1, 3345.0], [90.2, 3345.0], [90.3, 3372.0], [90.4, 3372.0], [90.5, 3386.0], [90.6, 3386.0], [90.7, 3408.0], [90.8, 3408.0], [90.9, 3430.0], [91.0, 3430.0], [91.1, 3467.0], [91.2, 3467.0], [91.3, 3494.0], [91.4, 3494.0], [91.5, 3496.0], [91.6, 3496.0], [91.7, 3555.0], [91.8, 3555.0], [91.9, 3573.0], [92.0, 3573.0], [92.1, 3594.0], [92.2, 3594.0], [92.3, 3633.0], [92.4, 3633.0], [92.5, 3641.0], [92.6, 3641.0], [92.7, 3664.0], [92.8, 3664.0], [92.9, 3669.0], [93.0, 3669.0], [93.1, 3670.0], [93.2, 3670.0], [93.3, 3670.0], [93.4, 3670.0], [93.5, 3678.0], [93.6, 3678.0], [93.7, 3733.0], [93.8, 3733.0], [93.9, 3739.0], [94.0, 3739.0], [94.1, 3889.0], [94.2, 3889.0], [94.3, 3958.0], [94.4, 3958.0], [94.5, 3988.0], [94.6, 3988.0], [94.7, 4204.0], [94.8, 4204.0], [94.9, 4851.0], [95.0, 4851.0], [95.1, 4879.0], [95.2, 4879.0], [95.3, 4955.0], [95.4, 4955.0], [95.5, 4966.0], [95.6, 4966.0], [95.7, 4971.0], [95.8, 4971.0], [95.9, 4980.0], [96.0, 4980.0], [96.1, 4986.0], [96.2, 4986.0], [96.3, 4986.0], [96.4, 4986.0], [96.5, 4992.0], [96.6, 4992.0], [96.7, 4998.0], [96.8, 4998.0], [96.9, 5004.0], [97.0, 5004.0], [97.1, 5004.0], [97.2, 5004.0], [97.3, 5066.0], [97.4, 5066.0], [97.5, 5066.0], [97.6, 5066.0], [97.7, 5076.0], [97.8, 5076.0], [97.9, 5164.0], [98.0, 5164.0], [98.1, 5242.0], [98.2, 5242.0], [98.3, 7579.0], [98.4, 7579.0], [98.5, 7659.0], [98.6, 7659.0], [98.7, 8045.0], [98.8, 8045.0], [98.9, 8170.0], [99.0, 8170.0], [99.1, 8176.0], [99.2, 8176.0], [99.3, 8282.0], [99.4, 8282.0], [99.5, 8310.0], [99.6, 8310.0], [99.7, 8380.0], [99.8, 8380.0], [99.9, 13739.0], [100.0, 13739.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 322.0, "series": [{"data": [[8500.0, 7.0], [9000.0, 28.0], [9500.0, 12.0], [10000.0, 21.0], [10500.0, 9.0], [11000.0, 1.0], [11500.0, 3.0], [13500.0, 35.0], [14000.0, 10.0], [14500.0, 27.0], [15000.0, 17.0], [1000.0, 11.0], [16000.0, 1.0], [16500.0, 18.0], [1500.0, 5.0], [2000.0, 2.0], [2500.0, 9.0], [3000.0, 17.0], [3500.0, 12.0], [4000.0, 25.0], [4500.0, 37.0], [5000.0, 64.0], [5500.0, 49.0], [6000.0, 27.0], [6500.0, 12.0], [8000.0, 41.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 322.0], [2500.0, 2.0], [1500.0, 72.0], [13500.0, 1.0], [4000.0, 3.0], [2000.0, 19.0], [1000.0, 56.0], [500.0, 25.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[0.0, 285.0], [4500.0, 1.0], [5000.0, 1.0], [2500.0, 15.0], [1500.0, 113.0], [3000.0, 2.0], [3500.0, 1.0], [14000.0, 1.0], [4000.0, 4.0], [2000.0, 13.0], [1000.0, 34.0], [500.0, 30.0]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[2500.0, 51.0], [3000.0, 24.0], [13500.0, 1.0], [3500.0, 15.0], [4000.0, 1.0], [1000.0, 187.0], [4500.0, 10.0], [5000.0, 7.0], [1500.0, 119.0], [7500.0, 2.0], [500.0, 16.0], [2000.0, 61.0], [8000.0, 6.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 500, "maxX": 16500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 357.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1034.0, "series": [{"data": [[1.0, 357.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[0.0, 609.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 1034.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 318.3604999999998, "minX": 1.6081452E12, "maxY": 318.3604999999998, "series": [{"data": [[1.6081452E12, 318.3604999999998]], "isOverall": false, "label": "Slypee", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6081452E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 265.0, "minX": 1.0, "maxY": 16595.076923076926, "series": [{"data": [[19.0, 16595.076923076926], [75.0, 16545.0], [76.0, 16528.0], [87.0, 16502.0], [86.0, 16541.0], [111.0, 14315.191489361705], [110.0, 14519.658536585363], [113.0, 13751.0], [215.0, 11633.0], [226.0, 11639.0], [238.0, 11550.0], [232.0, 11490.0], [253.0, 10617.0], [249.0, 10720.0], [264.0, 10554.0], [258.0, 10577.0], [256.0, 10613.0], [335.0, 10457.0], [333.0, 10528.0], [346.0, 1207.5], [348.0, 1249.0], [349.0, 1533.0], [350.0, 1395.5714285714284], [340.0, 10270.5], [339.0, 10372.7], [338.0, 10416.5], [337.0, 10459.142857142857], [352.0, 1546.0], [365.0, 9236.0], [364.0, 9238.0], [363.0, 9410.0], [382.0, 8468.0], [380.0, 9631.8], [379.0, 9608.555555555557], [375.0, 9544.0], [374.0, 9111.0], [370.0, 9159.0], [397.0, 8324.0], [388.0, 8590.0], [386.0, 9439.0], [385.0, 9461.833333333334], [409.0, 9306.0], [405.0, 8629.5], [420.0, 8157.0], [417.0, 9260.5], [441.0, 9041.0], [440.0, 9127.5], [463.0, 8036.285714285715], [452.0, 8898.0], [449.0, 8916.0], [478.0, 8298.111111111111], [477.0, 8363.0], [476.0, 8395.0], [475.0, 8421.666666666666], [473.0, 8476.0], [470.0, 8431.0], [467.0, 8445.0], [464.0, 8548.5], [495.0, 4496.136690647482], [494.0, 4878.8], [492.0, 5861.714285714284], [482.0, 8336.666666666666], [481.0, 8269.25], [500.0, 2333.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[379.4760000000003, 8064.962000000003]], "isOverall": false, "label": "HomePage-Aggregated", "isController": false}, {"data": [[2.0, 269.0], [3.0, 265.0], [4.0, 268.0], [5.0, 271.0], [6.0, 270.0], [7.0, 268.0], [8.0, 265.0], [9.0, 271.0], [10.0, 267.0], [11.0, 266.0], [12.0, 267.0], [13.0, 266.0], [14.0, 269.0], [15.0, 273.0], [16.0, 268.0], [17.0, 269.0], [18.0, 268.0], [19.0, 267.0], [20.0, 369.0], [21.0, 339.0], [22.0, 380.0], [23.0, 338.0], [24.0, 339.0], [25.0, 388.0], [26.0, 378.0], [27.0, 345.0], [28.0, 344.0], [29.0, 346.0], [30.0, 337.0], [33.0, 350.0], [32.0, 368.0], [35.0, 337.0], [34.0, 350.0], [37.0, 365.0], [36.0, 337.0], [39.0, 337.0], [38.0, 337.0], [41.0, 329.0], [40.0, 376.0], [43.0, 339.0], [42.0, 334.0], [45.0, 327.0], [44.0, 326.0], [47.0, 325.0], [46.0, 361.0], [49.0, 315.0], [48.0, 321.0], [51.0, 318.0], [50.0, 325.0], [53.0, 342.0], [52.0, 327.0], [55.0, 332.0], [54.0, 329.0], [57.0, 332.0], [56.0, 327.0], [59.0, 307.0], [58.0, 320.0], [61.0, 332.0], [60.0, 313.0], [63.0, 265.0], [62.0, 265.0], [67.0, 284.0], [66.0, 271.0], [65.0, 272.0], [64.0, 273.0], [71.0, 281.0], [70.0, 272.0], [69.0, 268.0], [68.0, 270.0], [75.0, 268.0], [74.0, 268.0], [73.0, 273.0], [72.0, 272.0], [79.0, 580.0], [78.0, 572.0], [77.0, 592.0], [76.0, 266.0], [83.0, 581.0], [82.0, 585.0], [81.0, 565.0], [80.0, 587.0], [87.0, 571.0], [86.0, 566.0], [85.0, 567.0], [84.0, 576.0], [91.0, 558.0], [90.0, 587.0], [89.0, 592.0], [88.0, 566.0], [95.0, 543.0], [94.0, 545.0], [93.0, 557.0], [92.0, 577.0], [99.0, 509.0], [98.0, 524.0], [97.0, 524.0], [96.0, 545.0], [103.0, 489.0], [102.0, 492.0], [101.0, 478.0], [100.0, 511.0], [107.0, 266.0], [106.0, 267.0], [105.0, 487.0], [104.0, 487.0], [111.0, 13846.0], [110.0, 1195.0], [109.0, 269.0], [108.0, 269.0], [115.0, 267.0], [114.0, 268.0], [113.0, 268.0], [112.0, 268.0], [119.0, 266.0], [118.0, 268.0], [117.0, 269.0], [116.0, 270.0], [123.0, 270.0], [122.0, 266.0], [121.0, 270.0], [120.0, 266.0], [127.0, 269.0], [126.0, 273.0], [125.0, 266.0], [124.0, 269.0], [135.0, 309.0], [134.0, 306.0], [133.0, 311.0], [132.0, 284.0], [131.0, 273.0], [130.0, 269.0], [129.0, 266.0], [128.0, 266.0], [143.0, 292.0], [142.0, 292.0], [141.0, 292.0], [140.0, 283.0], [139.0, 298.0], [138.0, 273.0], [137.0, 297.0], [136.0, 292.0], [151.0, 1040.0], [150.0, 1040.0], [149.0, 268.0], [148.0, 270.0], [147.0, 268.0], [146.0, 270.0], [145.0, 270.0], [144.0, 285.0], [159.0, 412.0], [158.0, 434.0], [157.0, 419.0], [156.0, 452.0], [155.0, 427.0], [154.0, 415.0], [153.0, 1056.0], [152.0, 270.0], [167.0, 425.0], [166.0, 407.0], [165.0, 366.0], [164.0, 419.0], [163.0, 1057.0], [162.0, 315.0], [161.0, 384.0], [160.0, 326.0], [175.0, 435.0], [174.0, 438.0], [173.0, 404.0], [172.0, 353.0], [171.0, 437.0], [170.0, 400.0], [169.0, 296.0], [168.0, 295.0], [183.0, 375.0], [182.0, 425.0], [181.0, 358.0], [180.0, 412.0], [179.0, 290.0], [178.0, 386.0], [177.0, 391.0], [176.0, 346.0], [191.0, 349.0], [190.0, 340.0], [189.0, 364.0], [188.0, 359.0], [187.0, 355.0], [186.0, 310.0], [185.0, 399.0], [184.0, 405.0], [199.0, 268.0], [198.0, 1357.0], [197.0, 270.0], [196.0, 1416.0], [195.0, 1353.0], [194.0, 268.0], [193.0, 272.0], [192.0, 1054.0], [207.0, 269.0], [206.0, 1356.0], [205.0, 1039.0], [204.0, 1341.0], [203.0, 1359.0], [202.0, 1048.0], [201.0, 1350.0], [200.0, 273.0], [215.0, 1080.0], [214.0, 1089.0], [213.0, 1347.0], [212.0, 1316.0], [211.0, 1307.0], [210.0, 266.0], [209.0, 1299.0], [208.0, 267.0], [223.0, 276.0], [222.0, 1048.0], [221.0, 269.0], [220.0, 1063.0], [219.0, 268.0], [218.0, 1048.0], [217.0, 271.0], [216.0, 1079.0], [231.0, 272.0], [230.0, 276.0], [229.0, 276.0], [228.0, 272.0], [227.0, 275.0], [226.0, 1041.0], [225.0, 1247.0], [224.0, 1270.0], [239.0, 1196.0], [238.0, 294.0], [237.0, 347.0], [236.0, 310.0], [235.0, 345.0], [234.0, 351.0], [233.0, 342.0], [232.0, 281.0], [247.0, 1054.0], [246.0, 271.0], [245.0, 273.0], [244.0, 271.0], [243.0, 286.0], [242.0, 280.0], [241.0, 295.0], [240.0, 1095.0], [255.0, 1438.0], [254.0, 268.0], [253.0, 273.0], [250.0, 1091.0], [249.0, 268.0], [248.0, 1049.0], [270.0, 290.0], [271.0, 1356.0], [269.0, 285.0], [268.0, 559.0], [267.0, 277.0], [266.0, 301.0], [265.0, 1403.0], [264.0, 1348.0], [263.0, 1444.0], [257.0, 271.0], [256.0, 271.0], [259.0, 301.0], [258.0, 1590.0], [262.0, 1437.0], [261.0, 1435.0], [260.0, 1440.0], [286.0, 1530.0], [287.0, 1498.0], [285.0, 1401.0], [284.0, 1400.0], [283.0, 368.0], [282.0, 1442.0], [281.0, 403.0], [280.0, 424.0], [279.0, 1432.0], [273.0, 1346.0], [272.0, 1348.0], [275.0, 340.0], [274.0, 493.0], [278.0, 436.0], [277.0, 433.0], [276.0, 480.0], [302.0, 270.0], [303.0, 1540.0], [301.0, 1545.0], [300.0, 1388.0], [299.0, 2451.0], [298.0, 1407.0], [297.0, 279.0], [296.0, 266.0], [295.0, 1443.0], [289.0, 1416.0], [288.0, 1404.0], [291.0, 1503.0], [290.0, 1493.0], [294.0, 1459.0], [293.0, 1479.0], [292.0, 1510.0], [318.0, 1619.0], [319.0, 1629.0], [317.0, 1621.0], [316.0, 401.0], [315.0, 335.0], [314.0, 1633.0], [313.0, 1616.0], [312.0, 1544.0], [311.0, 1551.0], [305.0, 2444.0], [304.0, 1538.0], [307.0, 1571.0], [306.0, 1560.0], [310.0, 476.0], [309.0, 457.0], [308.0, 1549.0], [334.0, 2488.0], [335.0, 1733.0], [333.0, 270.0], [332.0, 2351.0], [331.0, 1733.0], [330.0, 1780.0], [329.0, 2361.0], [328.0, 1749.0], [327.0, 1724.0], [321.0, 1608.0], [320.0, 1617.0], [323.0, 1785.0], [322.0, 1590.0], [326.0, 1581.0], [325.0, 2371.0], [324.0, 1592.0], [350.0, 1633.0], [351.0, 1701.0], [349.0, 1690.0], [348.0, 1857.0], [347.0, 2443.0], [346.0, 1606.0], [345.0, 1783.0], [344.0, 1614.0], [343.0, 279.0], [337.0, 273.0], [336.0, 1735.0], [339.0, 376.0], [338.0, 2464.0], [342.0, 1601.0], [341.0, 1623.0], [340.0, 2321.0], [366.0, 2279.0], [367.0, 1928.0], [365.0, 2264.0], [364.0, 2288.0], [363.0, 2311.0], [362.0, 285.0], [361.0, 1552.0], [360.0, 1543.0], [359.0, 1551.0], [353.0, 1578.0], [352.0, 1606.0], [355.0, 1608.0], [354.0, 1725.0], [358.0, 1713.0], [357.0, 1706.0], [356.0, 1593.0], [382.0, 274.0], [383.0, 402.0], [381.0, 290.0], [380.0, 2011.0], [379.0, 274.0], [378.0, 2067.0], [377.0, 279.0], [376.0, 300.0], [375.0, 1888.0], [369.0, 1944.0], [368.0, 2172.0], [371.0, 2076.0], [370.0, 1945.0], [374.0, 1800.0], [373.0, 1713.0], [372.0, 1885.0], [398.0, 1866.0], [399.0, 1897.0], [397.0, 325.0], [396.0, 1878.0], [395.0, 1936.0], [394.0, 1904.0], [393.0, 1930.0], [392.0, 1912.0], [391.0, 1890.0], [385.0, 401.0], [384.0, 403.0], [387.0, 376.0], [386.0, 356.0], [390.0, 1916.0], [389.0, 1931.0], [388.0, 356.0], [414.0, 1839.0], [415.0, 463.0], [413.0, 385.0], [412.0, 367.0], [411.0, 272.0], [410.0, 400.0], [409.0, 452.0], [408.0, 406.0], [407.0, 392.0], [401.0, 300.0], [400.0, 1877.0], [403.0, 1854.0], [402.0, 300.0], [406.0, 476.0], [405.0, 1837.0], [404.0, 1844.0], [430.0, 391.0], [431.0, 273.0], [429.0, 375.0], [428.0, 371.0], [427.0, 292.0], [426.0, 385.0], [425.0, 269.0], [424.0, 271.0], [423.0, 335.0], [417.0, 339.0], [416.0, 336.0], [419.0, 281.0], [418.0, 277.0], [422.0, 329.0], [421.0, 333.0], [420.0, 368.0], [446.0, 280.0], [447.0, 332.0], [445.0, 386.0], [444.0, 396.0], [443.0, 409.0], [442.0, 410.0], [441.0, 285.0], [440.0, 273.0], [439.0, 364.0], [433.0, 373.0], [432.0, 371.0], [435.0, 373.0], [434.0, 367.0], [438.0, 330.0], [437.0, 372.0], [436.0, 352.0], [462.0, 281.0], [463.0, 317.0], [461.0, 267.0], [460.0, 273.0], [459.0, 274.0], [458.0, 270.0], [457.0, 269.0], [456.0, 266.0], [455.0, 268.0], [449.0, 269.0], [448.0, 327.0], [451.0, 303.0], [450.0, 305.0], [454.0, 277.0], [453.0, 266.0], [452.0, 298.0], [478.0, 339.0], [479.0, 273.0], [477.0, 276.0], [476.0, 426.0], [475.0, 337.0], [474.0, 398.0], [473.0, 336.0], [472.0, 268.0], [471.0, 316.0], [465.0, 333.0], [464.0, 1861.0], [467.0, 324.0], [466.0, 330.0], [470.0, 329.0], [469.0, 336.0], [468.0, 358.0], [494.0, 4244.0], [495.0, 4005.0], [493.0, 4274.0], [492.0, 2177.0], [491.0, 2199.0], [490.0, 1905.0], [489.0, 271.0], [488.0, 326.0], [487.0, 370.0], [481.0, 2767.0], [480.0, 267.0], [483.0, 273.0], [482.0, 2749.0], [486.0, 357.0], [485.0, 274.0], [484.0, 278.0], [500.0, 267.0], [499.0, 266.0], [498.0, 282.0], [497.0, 276.0], [496.0, 277.0], [1.0, 270.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[250.50999999999985, 775.6139999999997]], "isOverall": false, "label": "Detail Category Page-Aggregated", "isController": false}, {"data": [[13.0, 268.8461538461538], [19.0, 268.3333333333333], [76.0, 516.0], [83.0, 540.0], [81.0, 530.0], [87.0, 528.7142857142858], [90.0, 498.0], [89.0, 514.0], [88.0, 528.0], [94.0, 500.0], [93.0, 497.3333333333333], [92.0, 497.3333333333333], [98.0, 487.0], [96.0, 497.375], [103.0, 411.0], [102.0, 454.6666666666667], [100.0, 453.0], [105.0, 615.0], [104.0, 418.0], [111.0, 14128.0], [110.0, 319.3939393939393], [113.0, 1044.0], [118.0, 266.0], [123.0, 265.5], [120.0, 462.5], [125.0, 612.4], [159.0, 294.0], [153.0, 270.0], [152.0, 268.6666666666667], [170.0, 363.0], [169.0, 338.0], [183.0, 351.0], [179.0, 358.0], [176.0, 338.0], [191.0, 324.5], [189.0, 343.5], [185.0, 332.5], [184.0, 344.4], [193.0, 272.0], [219.0, 1043.0], [217.0, 1047.0], [216.0, 1071.0], [231.0, 537.3333333333334], [230.0, 1096.0], [229.0, 275.0], [226.0, 918.6666666666667], [225.0, 1282.0], [239.0, 580.0], [238.0, 411.44444444444446], [237.0, 340.5], [236.0, 310.0], [234.0, 345.0], [233.0, 556.25], [246.0, 536.3333333333333], [243.0, 271.5], [242.0, 281.0], [241.0, 291.0], [240.0, 274.3333333333333], [253.0, 267.5], [250.0, 626.6], [248.0, 268.0], [268.0, 274.5], [267.0, 830.5], [264.0, 1210.25], [263.0, 292.0], [260.0, 1251.0], [256.0, 271.0], [286.0, 3173.0], [285.0, 1388.0], [284.0, 2420.0], [282.0, 664.0], [279.0, 276.6666666666667], [276.0, 750.6666666666666], [295.0, 1448.0], [293.0, 1469.0], [292.0, 1498.0], [289.0, 1515.0], [313.0, 408.0], [312.0, 406.5], [306.0, 1560.0], [332.0, 647.0], [331.0, 1729.2], [330.0, 1657.0], [329.0, 1694.0], [328.0, 1715.0], [326.0, 3296.0], [325.0, 1760.0], [322.0, 1758.0], [348.0, 1657.0], [344.0, 278.5], [340.0, 1406.6], [339.0, 571.4444444444443], [338.0, 270.0], [337.0, 270.0], [336.0, 271.0], [358.0, 987.5], [354.0, 1591.0], [353.0, 1668.0], [381.0, 2182.0], [380.0, 2627.0], [379.0, 1993.0], [375.0, 1717.0], [373.0, 1690.0], [398.0, 1933.0], [390.0, 2116.0], [389.0, 2474.5], [385.0, 2410.0], [415.0, 1109.0], [411.0, 2997.0], [409.0, 1937.0], [406.0, 268.0], [405.0, 2060.0], [402.0, 1880.0], [431.0, 278.3333333333333], [423.0, 731.25], [421.0, 1639.5], [420.0, 993.0], [419.0, 368.0], [417.0, 1612.0], [447.0, 359.0], [446.0, 365.25], [445.0, 1871.0], [444.0, 1376.6666666666667], [443.0, 1891.0], [441.0, 1409.3333333333333], [440.0, 1776.4444444444443], [437.0, 647.6], [460.0, 1438.8], [463.0, 1467.2631578947367], [462.0, 871.0], [461.0, 272.0], [458.0, 271.5], [454.0, 1835.0], [452.0, 270.3333333333333], [451.0, 1884.0], [449.0, 1773.9375000000002], [448.0, 1598.3333333333333], [478.0, 287.0], [479.0, 1847.0], [477.0, 279.5], [475.0, 933.5], [471.0, 308.0], [470.0, 313.0], [469.0, 308.0], [467.0, 1899.0], [464.0, 1676.4444444444443], [495.0, 4101.75], [492.0, 5082.5], [490.0, 1668.3000000000002], [489.0, 344.0], [488.0, 864.0], [487.0, 334.2222222222222], [486.0, 324.0], [485.0, 884.1666666666667], [484.0, 2015.0], [482.0, 1935.75], [481.0, 1988.0], [499.0, 266.0], [500.0, 290.125]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[305.0860000000003, 959.2900000000001]], "isOverall": false, "label": "Category Page-Aggregated", "isController": false}, {"data": [[19.0, 1043.5263157894735], [110.0, 1276.204545454545], [109.0, 1180.5], [113.0, 8173.0], [123.0, 1071.0], [126.0, 1048.5], [125.0, 1126.6666666666667], [124.0, 1048.5], [129.0, 1053.0], [191.0, 8310.0], [195.0, 1356.0], [194.0, 1380.0], [203.0, 1249.0], [214.0, 1324.0], [209.0, 1339.0], [208.0, 1260.0], [223.0, 1269.0], [221.0, 1252.0], [220.0, 1279.0], [231.0, 1108.0], [230.0, 1093.25], [229.0, 1084.0], [228.0, 1103.0], [226.0, 1156.6], [238.0, 1202.0], [236.0, 1195.0], [240.0, 1139.0], [253.0, 2887.0000000000005], [250.0, 1245.0], [249.0, 1195.0], [271.0, 1350.0], [270.0, 1355.0], [267.0, 1410.0], [264.0, 1285.25], [263.0, 1333.0], [259.0, 1317.0], [258.0, 1339.888888888889], [256.0, 1177.0], [285.0, 1425.0], [282.0, 1422.0], [280.0, 1431.0], [277.0, 1431.0], [276.0, 1417.0], [292.0, 1446.6666666666667], [313.0, 1540.0], [307.0, 1582.0], [306.0, 1574.5], [331.0, 2347.0], [329.0, 2359.0], [328.0, 2424.0], [325.0, 2172.6666666666665], [321.0, 1807.0], [347.0, 1869.0], [341.0, 2313.0], [340.0, 3843.0], [339.0, 2858.5], [337.0, 2470.0], [336.0, 2471.0], [366.0, 1881.5], [363.0, 1775.5], [358.0, 1618.5], [356.0, 5003.5], [354.0, 1683.0], [353.0, 1731.0], [377.0, 2428.6666666666665], [375.0, 3938.5], [374.0, 1948.6666666666667], [373.0, 2597.0], [371.0, 1895.5], [370.0, 1982.0], [369.0, 1858.0], [390.0, 3220.0], [385.0, 2938.0], [413.0, 4851.0], [405.0, 3060.0], [428.0, 1941.0], [423.0, 1978.5], [421.0, 4304.75], [432.0, 529.0], [435.0, 530.0], [436.0, 543.0], [437.0, 543.5714285714286], [438.0, 554.0], [439.0, 2004.0], [444.0, 1878.75], [443.0, 1916.0], [442.0, 1896.0], [441.0, 1901.6666666666667], [463.0, 3185.0833333333335], [462.0, 2537.0], [461.0, 1989.0], [458.0, 1881.0], [449.0, 2349.444444444445], [448.0, 2235.125], [478.0, 1835.0], [479.0, 3555.0], [477.0, 1939.0], [475.0, 2224.3333333333335], [473.0, 1983.0], [471.0, 2452.0], [470.0, 1898.0], [465.0, 1955.0], [464.0, 1884.5555555555557], [494.0, 3740.6666666666665], [492.0, 2769.282828282829], [491.0, 2009.625], [490.0, 2516.5937499999995], [489.0, 1897.0], [488.0, 2925.5], [487.0, 1935.0], [485.0, 1972.6249999999998], [482.0, 2604.5], [481.0, 2232.5]], "isOverall": false, "label": "Detail Game Page", "isController": false}, {"data": [[338.36999999999995, 2052.488]], "isOverall": false, "label": "Detail Game Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 5658.333333333333, "minX": 1.6081452E12, "maxY": 1887975.0, "series": [{"data": [[1.6081452E12, 1887975.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6081452E12, 5658.333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6081452E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 775.6139999999997, "minX": 1.6081452E12, "maxY": 8064.962000000003, "series": [{"data": [[1.6081452E12, 8064.962000000003]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.6081452E12, 775.6139999999997]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.6081452E12, 959.2900000000001]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.6081452E12, 2052.488]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6081452E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 612.5659999999999, "minX": 1.6081452E12, "maxY": 7551.559999999998, "series": [{"data": [[1.6081452E12, 7551.559999999998]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.6081452E12, 612.5659999999999]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.6081452E12, 761.5100000000004]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.6081452E12, 1541.605999999999]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6081452E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 83.47399999999993, "minX": 1.6081452E12, "maxY": 2354.734, "series": [{"data": [[1.6081452E12, 2354.734]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.6081452E12, 83.47399999999993]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.6081452E12, 118.02999999999999]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.6081452E12, 375.4900000000001]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6081452E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 264.0, "minX": 1.6081452E12, "maxY": 16714.0, "series": [{"data": [[1.6081452E12, 16714.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6081452E12, 264.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6081452E12, 8411.900000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6081452E12, 15113.94]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6081452E12, 13749.95]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6081452E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1601.5, "minX": 33.0, "maxY": 1601.5, "series": [{"data": [[33.0, 1601.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 33.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1095.0, "minX": 33.0, "maxY": 1095.0, "series": [{"data": [[33.0, 1095.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 33.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.6081452E12, "maxY": 33.333333333333336, "series": [{"data": [[1.6081452E12, 33.333333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6081452E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.6081452E12, "maxY": 33.333333333333336, "series": [{"data": [[1.6081452E12, 33.333333333333336]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6081452E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 8.333333333333334, "minX": 1.6081452E12, "maxY": 8.333333333333334, "series": [{"data": [[1.6081452E12, 8.333333333333334]], "isOverall": false, "label": "Category Page-success", "isController": false}, {"data": [[1.6081452E12, 8.333333333333334]], "isOverall": false, "label": "Detail Category Page-success", "isController": false}, {"data": [[1.6081452E12, 8.333333333333334]], "isOverall": false, "label": "Detail Game Page-success", "isController": false}, {"data": [[1.6081452E12, 8.333333333333334]], "isOverall": false, "label": "HomePage-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6081452E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
