/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? 0 : 0;
        var yOffset = options.yaxis.mode === "time" ? 0 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 265.0, "minX": 0.0, "maxY": 4480.0, "series": [{"data": [[0.0, 1082.0], [0.1, 1082.0], [0.2, 1082.0], [0.3, 1082.0], [0.4, 1082.0], [0.5, 1082.0], [0.6, 1082.0], [0.7, 1082.0], [0.8, 1082.0], [0.9, 1082.0], [1.0, 1109.0], [1.1, 1109.0], [1.2, 1109.0], [1.3, 1109.0], [1.4, 1109.0], [1.5, 1109.0], [1.6, 1109.0], [1.7, 1109.0], [1.8, 1109.0], [1.9, 1109.0], [2.0, 1140.0], [2.1, 1140.0], [2.2, 1140.0], [2.3, 1140.0], [2.4, 1140.0], [2.5, 1140.0], [2.6, 1140.0], [2.7, 1140.0], [2.8, 1140.0], [2.9, 1140.0], [3.0, 1175.0], [3.1, 1175.0], [3.2, 1175.0], [3.3, 1175.0], [3.4, 1175.0], [3.5, 1175.0], [3.6, 1175.0], [3.7, 1175.0], [3.8, 1175.0], [3.9, 1175.0], [4.0, 1196.0], [4.1, 1196.0], [4.2, 1196.0], [4.3, 1196.0], [4.4, 1196.0], [4.5, 1196.0], [4.6, 1196.0], [4.7, 1196.0], [4.8, 1196.0], [4.9, 1196.0], [5.0, 1196.0], [5.1, 1196.0], [5.2, 1196.0], [5.3, 1196.0], [5.4, 1196.0], [5.5, 1196.0], [5.6, 1196.0], [5.7, 1196.0], [5.8, 1196.0], [5.9, 1196.0], [6.0, 1197.0], [6.1, 1197.0], [6.2, 1197.0], [6.3, 1197.0], [6.4, 1197.0], [6.5, 1197.0], [6.6, 1197.0], [6.7, 1197.0], [6.8, 1197.0], [6.9, 1197.0], [7.0, 1198.0], [7.1, 1198.0], [7.2, 1198.0], [7.3, 1198.0], [7.4, 1198.0], [7.5, 1198.0], [7.6, 1198.0], [7.7, 1198.0], [7.8, 1198.0], [7.9, 1198.0], [8.0, 1199.0], [8.1, 1199.0], [8.2, 1199.0], [8.3, 1199.0], [8.4, 1199.0], [8.5, 1199.0], [8.6, 1199.0], [8.7, 1199.0], [8.8, 1199.0], [8.9, 1199.0], [9.0, 1202.0], [9.1, 1202.0], [9.2, 1202.0], [9.3, 1202.0], [9.4, 1202.0], [9.5, 1202.0], [9.6, 1202.0], [9.7, 1202.0], [9.8, 1202.0], [9.9, 1202.0], [10.0, 1208.0], [10.1, 1208.0], [10.2, 1208.0], [10.3, 1208.0], [10.4, 1208.0], [10.5, 1208.0], [10.6, 1208.0], [10.7, 1208.0], [10.8, 1208.0], [10.9, 1208.0], [11.0, 1209.0], [11.1, 1209.0], [11.2, 1209.0], [11.3, 1209.0], [11.4, 1209.0], [11.5, 1209.0], [11.6, 1209.0], [11.7, 1209.0], [11.8, 1209.0], [11.9, 1209.0], [12.0, 1213.0], [12.1, 1213.0], [12.2, 1213.0], [12.3, 1213.0], [12.4, 1213.0], [12.5, 1213.0], [12.6, 1213.0], [12.7, 1213.0], [12.8, 1213.0], [12.9, 1213.0], [13.0, 1215.0], [13.1, 1215.0], [13.2, 1215.0], [13.3, 1215.0], [13.4, 1215.0], [13.5, 1215.0], [13.6, 1215.0], [13.7, 1215.0], [13.8, 1215.0], [13.9, 1215.0], [14.0, 1216.0], [14.1, 1216.0], [14.2, 1216.0], [14.3, 1216.0], [14.4, 1216.0], [14.5, 1216.0], [14.6, 1216.0], [14.7, 1216.0], [14.8, 1216.0], [14.9, 1216.0], [15.0, 1691.0], [15.1, 1691.0], [15.2, 1691.0], [15.3, 1691.0], [15.4, 1691.0], [15.5, 1691.0], [15.6, 1691.0], [15.7, 1691.0], [15.8, 1691.0], [15.9, 1691.0], [16.0, 2604.0], [16.1, 2604.0], [16.2, 2604.0], [16.3, 2604.0], [16.4, 2604.0], [16.5, 2604.0], [16.6, 2604.0], [16.7, 2604.0], [16.8, 2604.0], [16.9, 2604.0], [17.0, 2638.0], [17.1, 2638.0], [17.2, 2638.0], [17.3, 2638.0], [17.4, 2638.0], [17.5, 2638.0], [17.6, 2638.0], [17.7, 2638.0], [17.8, 2638.0], [17.9, 2638.0], [18.0, 2860.0], [18.1, 2860.0], [18.2, 2860.0], [18.3, 2860.0], [18.4, 2860.0], [18.5, 2860.0], [18.6, 2860.0], [18.7, 2860.0], [18.8, 2860.0], [18.9, 2860.0], [19.0, 2865.0], [19.1, 2865.0], [19.2, 2865.0], [19.3, 2865.0], [19.4, 2865.0], [19.5, 2865.0], [19.6, 2865.0], [19.7, 2865.0], [19.8, 2865.0], [19.9, 2865.0], [20.0, 2879.0], [20.1, 2879.0], [20.2, 2879.0], [20.3, 2879.0], [20.4, 2879.0], [20.5, 2879.0], [20.6, 2879.0], [20.7, 2879.0], [20.8, 2879.0], [20.9, 2879.0], [21.0, 2897.0], [21.1, 2897.0], [21.2, 2897.0], [21.3, 2897.0], [21.4, 2897.0], [21.5, 2897.0], [21.6, 2897.0], [21.7, 2897.0], [21.8, 2897.0], [21.9, 2897.0], [22.0, 2918.0], [22.1, 2918.0], [22.2, 2918.0], [22.3, 2918.0], [22.4, 2918.0], [22.5, 2918.0], [22.6, 2918.0], [22.7, 2918.0], [22.8, 2918.0], [22.9, 2918.0], [23.0, 2922.0], [23.1, 2922.0], [23.2, 2922.0], [23.3, 2922.0], [23.4, 2922.0], [23.5, 2922.0], [23.6, 2922.0], [23.7, 2922.0], [23.8, 2922.0], [23.9, 2922.0], [24.0, 2935.0], [24.1, 2935.0], [24.2, 2935.0], [24.3, 2935.0], [24.4, 2935.0], [24.5, 2935.0], [24.6, 2935.0], [24.7, 2935.0], [24.8, 2935.0], [24.9, 2935.0], [25.0, 2938.0], [25.1, 2938.0], [25.2, 2938.0], [25.3, 2938.0], [25.4, 2938.0], [25.5, 2938.0], [25.6, 2938.0], [25.7, 2938.0], [25.8, 2938.0], [25.9, 2938.0], [26.0, 2952.0], [26.1, 2952.0], [26.2, 2952.0], [26.3, 2952.0], [26.4, 2952.0], [26.5, 2952.0], [26.6, 2952.0], [26.7, 2952.0], [26.8, 2952.0], [26.9, 2952.0], [27.0, 2961.0], [27.1, 2961.0], [27.2, 2961.0], [27.3, 2961.0], [27.4, 2961.0], [27.5, 2961.0], [27.6, 2961.0], [27.7, 2961.0], [27.8, 2961.0], [27.9, 2961.0], [28.0, 2992.0], [28.1, 2992.0], [28.2, 2992.0], [28.3, 2992.0], [28.4, 2992.0], [28.5, 2992.0], [28.6, 2992.0], [28.7, 2992.0], [28.8, 2992.0], [28.9, 2992.0], [29.0, 3043.0], [29.1, 3043.0], [29.2, 3043.0], [29.3, 3043.0], [29.4, 3043.0], [29.5, 3043.0], [29.6, 3043.0], [29.7, 3043.0], [29.8, 3043.0], [29.9, 3043.0], [30.0, 3065.0], [30.1, 3065.0], [30.2, 3065.0], [30.3, 3065.0], [30.4, 3065.0], [30.5, 3065.0], [30.6, 3065.0], [30.7, 3065.0], [30.8, 3065.0], [30.9, 3065.0], [31.0, 3124.0], [31.1, 3124.0], [31.2, 3124.0], [31.3, 3124.0], [31.4, 3124.0], [31.5, 3124.0], [31.6, 3124.0], [31.7, 3124.0], [31.8, 3124.0], [31.9, 3124.0], [32.0, 3138.0], [32.1, 3138.0], [32.2, 3138.0], [32.3, 3138.0], [32.4, 3138.0], [32.5, 3138.0], [32.6, 3138.0], [32.7, 3138.0], [32.8, 3138.0], [32.9, 3138.0], [33.0, 3149.0], [33.1, 3149.0], [33.2, 3149.0], [33.3, 3149.0], [33.4, 3149.0], [33.5, 3149.0], [33.6, 3149.0], [33.7, 3149.0], [33.8, 3149.0], [33.9, 3149.0], [34.0, 3185.0], [34.1, 3185.0], [34.2, 3185.0], [34.3, 3185.0], [34.4, 3185.0], [34.5, 3185.0], [34.6, 3185.0], [34.7, 3185.0], [34.8, 3185.0], [34.9, 3185.0], [35.0, 3222.0], [35.1, 3222.0], [35.2, 3222.0], [35.3, 3222.0], [35.4, 3222.0], [35.5, 3222.0], [35.6, 3222.0], [35.7, 3222.0], [35.8, 3222.0], [35.9, 3222.0], [36.0, 3354.0], [36.1, 3354.0], [36.2, 3354.0], [36.3, 3354.0], [36.4, 3354.0], [36.5, 3354.0], [36.6, 3354.0], [36.7, 3354.0], [36.8, 3354.0], [36.9, 3354.0], [37.0, 3357.0], [37.1, 3357.0], [37.2, 3357.0], [37.3, 3357.0], [37.4, 3357.0], [37.5, 3357.0], [37.6, 3357.0], [37.7, 3357.0], [37.8, 3357.0], [37.9, 3357.0], [38.0, 3363.0], [38.1, 3363.0], [38.2, 3363.0], [38.3, 3363.0], [38.4, 3363.0], [38.5, 3363.0], [38.6, 3363.0], [38.7, 3363.0], [38.8, 3363.0], [38.9, 3363.0], [39.0, 3367.0], [39.1, 3367.0], [39.2, 3367.0], [39.3, 3367.0], [39.4, 3367.0], [39.5, 3367.0], [39.6, 3367.0], [39.7, 3367.0], [39.8, 3367.0], [39.9, 3367.0], [40.0, 3380.0], [40.1, 3380.0], [40.2, 3380.0], [40.3, 3380.0], [40.4, 3380.0], [40.5, 3380.0], [40.6, 3380.0], [40.7, 3380.0], [40.8, 3380.0], [40.9, 3380.0], [41.0, 3383.0], [41.1, 3383.0], [41.2, 3383.0], [41.3, 3383.0], [41.4, 3383.0], [41.5, 3383.0], [41.6, 3383.0], [41.7, 3383.0], [41.8, 3383.0], [41.9, 3383.0], [42.0, 3393.0], [42.1, 3393.0], [42.2, 3393.0], [42.3, 3393.0], [42.4, 3393.0], [42.5, 3393.0], [42.6, 3393.0], [42.7, 3393.0], [42.8, 3393.0], [42.9, 3393.0], [43.0, 3401.0], [43.1, 3401.0], [43.2, 3401.0], [43.3, 3401.0], [43.4, 3401.0], [43.5, 3401.0], [43.6, 3401.0], [43.7, 3401.0], [43.8, 3401.0], [43.9, 3401.0], [44.0, 3413.0], [44.1, 3413.0], [44.2, 3413.0], [44.3, 3413.0], [44.4, 3413.0], [44.5, 3413.0], [44.6, 3413.0], [44.7, 3413.0], [44.8, 3413.0], [44.9, 3413.0], [45.0, 3414.0], [45.1, 3414.0], [45.2, 3414.0], [45.3, 3414.0], [45.4, 3414.0], [45.5, 3414.0], [45.6, 3414.0], [45.7, 3414.0], [45.8, 3414.0], [45.9, 3414.0], [46.0, 3416.0], [46.1, 3416.0], [46.2, 3416.0], [46.3, 3416.0], [46.4, 3416.0], [46.5, 3416.0], [46.6, 3416.0], [46.7, 3416.0], [46.8, 3416.0], [46.9, 3416.0], [47.0, 3444.0], [47.1, 3444.0], [47.2, 3444.0], [47.3, 3444.0], [47.4, 3444.0], [47.5, 3444.0], [47.6, 3444.0], [47.7, 3444.0], [47.8, 3444.0], [47.9, 3444.0], [48.0, 3463.0], [48.1, 3463.0], [48.2, 3463.0], [48.3, 3463.0], [48.4, 3463.0], [48.5, 3463.0], [48.6, 3463.0], [48.7, 3463.0], [48.8, 3463.0], [48.9, 3463.0], [49.0, 3482.0], [49.1, 3482.0], [49.2, 3482.0], [49.3, 3482.0], [49.4, 3482.0], [49.5, 3482.0], [49.6, 3482.0], [49.7, 3482.0], [49.8, 3482.0], [49.9, 3482.0], [50.0, 3489.0], [50.1, 3489.0], [50.2, 3489.0], [50.3, 3489.0], [50.4, 3489.0], [50.5, 3489.0], [50.6, 3489.0], [50.7, 3489.0], [50.8, 3489.0], [50.9, 3489.0], [51.0, 3499.0], [51.1, 3499.0], [51.2, 3499.0], [51.3, 3499.0], [51.4, 3499.0], [51.5, 3499.0], [51.6, 3499.0], [51.7, 3499.0], [51.8, 3499.0], [51.9, 3499.0], [52.0, 3503.0], [52.1, 3503.0], [52.2, 3503.0], [52.3, 3503.0], [52.4, 3503.0], [52.5, 3503.0], [52.6, 3503.0], [52.7, 3503.0], [52.8, 3503.0], [52.9, 3503.0], [53.0, 3517.0], [53.1, 3517.0], [53.2, 3517.0], [53.3, 3517.0], [53.4, 3517.0], [53.5, 3517.0], [53.6, 3517.0], [53.7, 3517.0], [53.8, 3517.0], [53.9, 3517.0], [54.0, 3529.0], [54.1, 3529.0], [54.2, 3529.0], [54.3, 3529.0], [54.4, 3529.0], [54.5, 3529.0], [54.6, 3529.0], [54.7, 3529.0], [54.8, 3529.0], [54.9, 3529.0], [55.0, 3569.0], [55.1, 3569.0], [55.2, 3569.0], [55.3, 3569.0], [55.4, 3569.0], [55.5, 3569.0], [55.6, 3569.0], [55.7, 3569.0], [55.8, 3569.0], [55.9, 3569.0], [56.0, 3634.0], [56.1, 3634.0], [56.2, 3634.0], [56.3, 3634.0], [56.4, 3634.0], [56.5, 3634.0], [56.6, 3634.0], [56.7, 3634.0], [56.8, 3634.0], [56.9, 3634.0], [57.0, 3655.0], [57.1, 3655.0], [57.2, 3655.0], [57.3, 3655.0], [57.4, 3655.0], [57.5, 3655.0], [57.6, 3655.0], [57.7, 3655.0], [57.8, 3655.0], [57.9, 3655.0], [58.0, 3780.0], [58.1, 3780.0], [58.2, 3780.0], [58.3, 3780.0], [58.4, 3780.0], [58.5, 3780.0], [58.6, 3780.0], [58.7, 3780.0], [58.8, 3780.0], [58.9, 3780.0], [59.0, 3789.0], [59.1, 3789.0], [59.2, 3789.0], [59.3, 3789.0], [59.4, 3789.0], [59.5, 3789.0], [59.6, 3789.0], [59.7, 3789.0], [59.8, 3789.0], [59.9, 3789.0], [60.0, 3806.0], [60.1, 3806.0], [60.2, 3806.0], [60.3, 3806.0], [60.4, 3806.0], [60.5, 3806.0], [60.6, 3806.0], [60.7, 3806.0], [60.8, 3806.0], [60.9, 3806.0], [61.0, 3809.0], [61.1, 3809.0], [61.2, 3809.0], [61.3, 3809.0], [61.4, 3809.0], [61.5, 3809.0], [61.6, 3809.0], [61.7, 3809.0], [61.8, 3809.0], [61.9, 3809.0], [62.0, 3809.0], [62.1, 3809.0], [62.2, 3809.0], [62.3, 3809.0], [62.4, 3809.0], [62.5, 3809.0], [62.6, 3809.0], [62.7, 3809.0], [62.8, 3809.0], [62.9, 3809.0], [63.0, 3821.0], [63.1, 3821.0], [63.2, 3821.0], [63.3, 3821.0], [63.4, 3821.0], [63.5, 3821.0], [63.6, 3821.0], [63.7, 3821.0], [63.8, 3821.0], [63.9, 3821.0], [64.0, 3830.0], [64.1, 3830.0], [64.2, 3830.0], [64.3, 3830.0], [64.4, 3830.0], [64.5, 3830.0], [64.6, 3830.0], [64.7, 3830.0], [64.8, 3830.0], [64.9, 3830.0], [65.0, 3831.0], [65.1, 3831.0], [65.2, 3831.0], [65.3, 3831.0], [65.4, 3831.0], [65.5, 3831.0], [65.6, 3831.0], [65.7, 3831.0], [65.8, 3831.0], [65.9, 3831.0], [66.0, 3840.0], [66.1, 3840.0], [66.2, 3840.0], [66.3, 3840.0], [66.4, 3840.0], [66.5, 3840.0], [66.6, 3840.0], [66.7, 3840.0], [66.8, 3840.0], [66.9, 3840.0], [67.0, 3842.0], [67.1, 3842.0], [67.2, 3842.0], [67.3, 3842.0], [67.4, 3842.0], [67.5, 3842.0], [67.6, 3842.0], [67.7, 3842.0], [67.8, 3842.0], [67.9, 3842.0], [68.0, 3855.0], [68.1, 3855.0], [68.2, 3855.0], [68.3, 3855.0], [68.4, 3855.0], [68.5, 3855.0], [68.6, 3855.0], [68.7, 3855.0], [68.8, 3855.0], [68.9, 3855.0], [69.0, 3861.0], [69.1, 3861.0], [69.2, 3861.0], [69.3, 3861.0], [69.4, 3861.0], [69.5, 3861.0], [69.6, 3861.0], [69.7, 3861.0], [69.8, 3861.0], [69.9, 3861.0], [70.0, 3861.0], [70.1, 3861.0], [70.2, 3861.0], [70.3, 3861.0], [70.4, 3861.0], [70.5, 3861.0], [70.6, 3861.0], [70.7, 3861.0], [70.8, 3861.0], [70.9, 3861.0], [71.0, 3875.0], [71.1, 3875.0], [71.2, 3875.0], [71.3, 3875.0], [71.4, 3875.0], [71.5, 3875.0], [71.6, 3875.0], [71.7, 3875.0], [71.8, 3875.0], [71.9, 3875.0], [72.0, 3884.0], [72.1, 3884.0], [72.2, 3884.0], [72.3, 3884.0], [72.4, 3884.0], [72.5, 3884.0], [72.6, 3884.0], [72.7, 3884.0], [72.8, 3884.0], [72.9, 3884.0], [73.0, 3896.0], [73.1, 3896.0], [73.2, 3896.0], [73.3, 3896.0], [73.4, 3896.0], [73.5, 3896.0], [73.6, 3896.0], [73.7, 3896.0], [73.8, 3896.0], [73.9, 3896.0], [74.0, 3898.0], [74.1, 3898.0], [74.2, 3898.0], [74.3, 3898.0], [74.4, 3898.0], [74.5, 3898.0], [74.6, 3898.0], [74.7, 3898.0], [74.8, 3898.0], [74.9, 3898.0], [75.0, 3918.0], [75.1, 3918.0], [75.2, 3918.0], [75.3, 3918.0], [75.4, 3918.0], [75.5, 3918.0], [75.6, 3918.0], [75.7, 3918.0], [75.8, 3918.0], [75.9, 3918.0], [76.0, 3935.0], [76.1, 3935.0], [76.2, 3935.0], [76.3, 3935.0], [76.4, 3935.0], [76.5, 3935.0], [76.6, 3935.0], [76.7, 3935.0], [76.8, 3935.0], [76.9, 3935.0], [77.0, 3947.0], [77.1, 3947.0], [77.2, 3947.0], [77.3, 3947.0], [77.4, 3947.0], [77.5, 3947.0], [77.6, 3947.0], [77.7, 3947.0], [77.8, 3947.0], [77.9, 3947.0], [78.0, 3956.0], [78.1, 3956.0], [78.2, 3956.0], [78.3, 3956.0], [78.4, 3956.0], [78.5, 3956.0], [78.6, 3956.0], [78.7, 3956.0], [78.8, 3956.0], [78.9, 3956.0], [79.0, 3981.0], [79.1, 3981.0], [79.2, 3981.0], [79.3, 3981.0], [79.4, 3981.0], [79.5, 3981.0], [79.6, 3981.0], [79.7, 3981.0], [79.8, 3981.0], [79.9, 3981.0], [80.0, 3984.0], [80.1, 3984.0], [80.2, 3984.0], [80.3, 3984.0], [80.4, 3984.0], [80.5, 3984.0], [80.6, 3984.0], [80.7, 3984.0], [80.8, 3984.0], [80.9, 3984.0], [81.0, 3987.0], [81.1, 3987.0], [81.2, 3987.0], [81.3, 3987.0], [81.4, 3987.0], [81.5, 3987.0], [81.6, 3987.0], [81.7, 3987.0], [81.8, 3987.0], [81.9, 3987.0], [82.0, 4001.0], [82.1, 4001.0], [82.2, 4001.0], [82.3, 4001.0], [82.4, 4001.0], [82.5, 4001.0], [82.6, 4001.0], [82.7, 4001.0], [82.8, 4001.0], [82.9, 4001.0], [83.0, 4025.0], [83.1, 4025.0], [83.2, 4025.0], [83.3, 4025.0], [83.4, 4025.0], [83.5, 4025.0], [83.6, 4025.0], [83.7, 4025.0], [83.8, 4025.0], [83.9, 4025.0], [84.0, 4031.0], [84.1, 4031.0], [84.2, 4031.0], [84.3, 4031.0], [84.4, 4031.0], [84.5, 4031.0], [84.6, 4031.0], [84.7, 4031.0], [84.8, 4031.0], [84.9, 4031.0], [85.0, 4037.0], [85.1, 4037.0], [85.2, 4037.0], [85.3, 4037.0], [85.4, 4037.0], [85.5, 4037.0], [85.6, 4037.0], [85.7, 4037.0], [85.8, 4037.0], [85.9, 4037.0], [86.0, 4043.0], [86.1, 4043.0], [86.2, 4043.0], [86.3, 4043.0], [86.4, 4043.0], [86.5, 4043.0], [86.6, 4043.0], [86.7, 4043.0], [86.8, 4043.0], [86.9, 4043.0], [87.0, 4055.0], [87.1, 4055.0], [87.2, 4055.0], [87.3, 4055.0], [87.4, 4055.0], [87.5, 4055.0], [87.6, 4055.0], [87.7, 4055.0], [87.8, 4055.0], [87.9, 4055.0], [88.0, 4233.0], [88.1, 4233.0], [88.2, 4233.0], [88.3, 4233.0], [88.4, 4233.0], [88.5, 4233.0], [88.6, 4233.0], [88.7, 4233.0], [88.8, 4233.0], [88.9, 4233.0], [89.0, 4236.0], [89.1, 4236.0], [89.2, 4236.0], [89.3, 4236.0], [89.4, 4236.0], [89.5, 4236.0], [89.6, 4236.0], [89.7, 4236.0], [89.8, 4236.0], [89.9, 4236.0], [90.0, 4244.0], [90.1, 4244.0], [90.2, 4244.0], [90.3, 4244.0], [90.4, 4244.0], [90.5, 4244.0], [90.6, 4244.0], [90.7, 4244.0], [90.8, 4244.0], [90.9, 4244.0], [91.0, 4245.0], [91.1, 4245.0], [91.2, 4245.0], [91.3, 4245.0], [91.4, 4245.0], [91.5, 4245.0], [91.6, 4245.0], [91.7, 4245.0], [91.8, 4245.0], [91.9, 4245.0], [92.0, 4289.0], [92.1, 4289.0], [92.2, 4289.0], [92.3, 4289.0], [92.4, 4289.0], [92.5, 4289.0], [92.6, 4289.0], [92.7, 4289.0], [92.8, 4289.0], [92.9, 4289.0], [93.0, 4407.0], [93.1, 4407.0], [93.2, 4407.0], [93.3, 4407.0], [93.4, 4407.0], [93.5, 4407.0], [93.6, 4407.0], [93.7, 4407.0], [93.8, 4407.0], [93.9, 4407.0], [94.0, 4413.0], [94.1, 4413.0], [94.2, 4413.0], [94.3, 4413.0], [94.4, 4413.0], [94.5, 4413.0], [94.6, 4413.0], [94.7, 4413.0], [94.8, 4413.0], [94.9, 4413.0], [95.0, 4419.0], [95.1, 4419.0], [95.2, 4419.0], [95.3, 4419.0], [95.4, 4419.0], [95.5, 4419.0], [95.6, 4419.0], [95.7, 4419.0], [95.8, 4419.0], [95.9, 4419.0], [96.0, 4434.0], [96.1, 4434.0], [96.2, 4434.0], [96.3, 4434.0], [96.4, 4434.0], [96.5, 4434.0], [96.6, 4434.0], [96.7, 4434.0], [96.8, 4434.0], [96.9, 4434.0], [97.0, 4452.0], [97.1, 4452.0], [97.2, 4452.0], [97.3, 4452.0], [97.4, 4452.0], [97.5, 4452.0], [97.6, 4452.0], [97.7, 4452.0], [97.8, 4452.0], [97.9, 4452.0], [98.0, 4453.0], [98.1, 4453.0], [98.2, 4453.0], [98.3, 4453.0], [98.4, 4453.0], [98.5, 4453.0], [98.6, 4453.0], [98.7, 4453.0], [98.8, 4453.0], [98.9, 4453.0], [99.0, 4480.0], [99.1, 4480.0], [99.2, 4480.0], [99.3, 4480.0], [99.4, 4480.0], [99.5, 4480.0], [99.6, 4480.0], [99.7, 4480.0], [99.8, 4480.0], [99.9, 4480.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 265.0], [0.1, 265.0], [0.2, 265.0], [0.3, 265.0], [0.4, 265.0], [0.5, 265.0], [0.6, 265.0], [0.7, 265.0], [0.8, 265.0], [0.9, 265.0], [1.0, 265.0], [1.1, 265.0], [1.2, 265.0], [1.3, 265.0], [1.4, 265.0], [1.5, 265.0], [1.6, 265.0], [1.7, 265.0], [1.8, 265.0], [1.9, 265.0], [2.0, 265.0], [2.1, 265.0], [2.2, 265.0], [2.3, 265.0], [2.4, 265.0], [2.5, 265.0], [2.6, 265.0], [2.7, 265.0], [2.8, 265.0], [2.9, 265.0], [3.0, 265.0], [3.1, 265.0], [3.2, 265.0], [3.3, 265.0], [3.4, 265.0], [3.5, 265.0], [3.6, 265.0], [3.7, 265.0], [3.8, 265.0], [3.9, 265.0], [4.0, 266.0], [4.1, 266.0], [4.2, 266.0], [4.3, 266.0], [4.4, 266.0], [4.5, 266.0], [4.6, 266.0], [4.7, 266.0], [4.8, 266.0], [4.9, 266.0], [5.0, 266.0], [5.1, 266.0], [5.2, 266.0], [5.3, 266.0], [5.4, 266.0], [5.5, 266.0], [5.6, 266.0], [5.7, 266.0], [5.8, 266.0], [5.9, 266.0], [6.0, 267.0], [6.1, 267.0], [6.2, 267.0], [6.3, 267.0], [6.4, 267.0], [6.5, 267.0], [6.6, 267.0], [6.7, 267.0], [6.8, 267.0], [6.9, 267.0], [7.0, 267.0], [7.1, 267.0], [7.2, 267.0], [7.3, 267.0], [7.4, 267.0], [7.5, 267.0], [7.6, 267.0], [7.7, 267.0], [7.8, 267.0], [7.9, 267.0], [8.0, 267.0], [8.1, 267.0], [8.2, 267.0], [8.3, 267.0], [8.4, 267.0], [8.5, 267.0], [8.6, 267.0], [8.7, 267.0], [8.8, 267.0], [8.9, 267.0], [9.0, 267.0], [9.1, 267.0], [9.2, 267.0], [9.3, 267.0], [9.4, 267.0], [9.5, 267.0], [9.6, 267.0], [9.7, 267.0], [9.8, 267.0], [9.9, 267.0], [10.0, 267.0], [10.1, 267.0], [10.2, 267.0], [10.3, 267.0], [10.4, 267.0], [10.5, 267.0], [10.6, 267.0], [10.7, 267.0], [10.8, 267.0], [10.9, 267.0], [11.0, 267.0], [11.1, 267.0], [11.2, 267.0], [11.3, 267.0], [11.4, 267.0], [11.5, 267.0], [11.6, 267.0], [11.7, 267.0], [11.8, 267.0], [11.9, 267.0], [12.0, 267.0], [12.1, 267.0], [12.2, 267.0], [12.3, 267.0], [12.4, 267.0], [12.5, 267.0], [12.6, 267.0], [12.7, 267.0], [12.8, 267.0], [12.9, 267.0], [13.0, 268.0], [13.1, 268.0], [13.2, 268.0], [13.3, 268.0], [13.4, 268.0], [13.5, 268.0], [13.6, 268.0], [13.7, 268.0], [13.8, 268.0], [13.9, 268.0], [14.0, 268.0], [14.1, 268.0], [14.2, 268.0], [14.3, 268.0], [14.4, 268.0], [14.5, 268.0], [14.6, 268.0], [14.7, 268.0], [14.8, 268.0], [14.9, 268.0], [15.0, 268.0], [15.1, 268.0], [15.2, 268.0], [15.3, 268.0], [15.4, 268.0], [15.5, 268.0], [15.6, 268.0], [15.7, 268.0], [15.8, 268.0], [15.9, 268.0], [16.0, 268.0], [16.1, 268.0], [16.2, 268.0], [16.3, 268.0], [16.4, 268.0], [16.5, 268.0], [16.6, 268.0], [16.7, 268.0], [16.8, 268.0], [16.9, 268.0], [17.0, 268.0], [17.1, 268.0], [17.2, 268.0], [17.3, 268.0], [17.4, 268.0], [17.5, 268.0], [17.6, 268.0], [17.7, 268.0], [17.8, 268.0], [17.9, 268.0], [18.0, 268.0], [18.1, 268.0], [18.2, 268.0], [18.3, 268.0], [18.4, 268.0], [18.5, 268.0], [18.6, 268.0], [18.7, 268.0], [18.8, 268.0], [18.9, 268.0], [19.0, 268.0], [19.1, 268.0], [19.2, 268.0], [19.3, 268.0], [19.4, 268.0], [19.5, 268.0], [19.6, 268.0], [19.7, 268.0], [19.8, 268.0], [19.9, 268.0], [20.0, 269.0], [20.1, 269.0], [20.2, 269.0], [20.3, 269.0], [20.4, 269.0], [20.5, 269.0], [20.6, 269.0], [20.7, 269.0], [20.8, 269.0], [20.9, 269.0], [21.0, 270.0], [21.1, 270.0], [21.2, 270.0], [21.3, 270.0], [21.4, 270.0], [21.5, 270.0], [21.6, 270.0], [21.7, 270.0], [21.8, 270.0], [21.9, 270.0], [22.0, 270.0], [22.1, 270.0], [22.2, 270.0], [22.3, 270.0], [22.4, 270.0], [22.5, 270.0], [22.6, 270.0], [22.7, 270.0], [22.8, 270.0], [22.9, 270.0], [23.0, 270.0], [23.1, 270.0], [23.2, 270.0], [23.3, 270.0], [23.4, 270.0], [23.5, 270.0], [23.6, 270.0], [23.7, 270.0], [23.8, 270.0], [23.9, 270.0], [24.0, 271.0], [24.1, 271.0], [24.2, 271.0], [24.3, 271.0], [24.4, 271.0], [24.5, 271.0], [24.6, 271.0], [24.7, 271.0], [24.8, 271.0], [24.9, 271.0], [25.0, 271.0], [25.1, 271.0], [25.2, 271.0], [25.3, 271.0], [25.4, 271.0], [25.5, 271.0], [25.6, 271.0], [25.7, 271.0], [25.8, 271.0], [25.9, 271.0], [26.0, 271.0], [26.1, 271.0], [26.2, 271.0], [26.3, 271.0], [26.4, 271.0], [26.5, 271.0], [26.6, 271.0], [26.7, 271.0], [26.8, 271.0], [26.9, 271.0], [27.0, 273.0], [27.1, 273.0], [27.2, 273.0], [27.3, 273.0], [27.4, 273.0], [27.5, 273.0], [27.6, 273.0], [27.7, 273.0], [27.8, 273.0], [27.9, 273.0], [28.0, 273.0], [28.1, 273.0], [28.2, 273.0], [28.3, 273.0], [28.4, 273.0], [28.5, 273.0], [28.6, 273.0], [28.7, 273.0], [28.8, 273.0], [28.9, 273.0], [29.0, 274.0], [29.1, 274.0], [29.2, 274.0], [29.3, 274.0], [29.4, 274.0], [29.5, 274.0], [29.6, 274.0], [29.7, 274.0], [29.8, 274.0], [29.9, 274.0], [30.0, 274.0], [30.1, 274.0], [30.2, 274.0], [30.3, 274.0], [30.4, 274.0], [30.5, 274.0], [30.6, 274.0], [30.7, 274.0], [30.8, 274.0], [30.9, 274.0], [31.0, 274.0], [31.1, 274.0], [31.2, 274.0], [31.3, 274.0], [31.4, 274.0], [31.5, 274.0], [31.6, 274.0], [31.7, 274.0], [31.8, 274.0], [31.9, 274.0], [32.0, 274.0], [32.1, 274.0], [32.2, 274.0], [32.3, 274.0], [32.4, 274.0], [32.5, 274.0], [32.6, 274.0], [32.7, 274.0], [32.8, 274.0], [32.9, 274.0], [33.0, 275.0], [33.1, 275.0], [33.2, 275.0], [33.3, 275.0], [33.4, 275.0], [33.5, 275.0], [33.6, 275.0], [33.7, 275.0], [33.8, 275.0], [33.9, 275.0], [34.0, 275.0], [34.1, 275.0], [34.2, 275.0], [34.3, 275.0], [34.4, 275.0], [34.5, 275.0], [34.6, 275.0], [34.7, 275.0], [34.8, 275.0], [34.9, 275.0], [35.0, 276.0], [35.1, 276.0], [35.2, 276.0], [35.3, 276.0], [35.4, 276.0], [35.5, 276.0], [35.6, 276.0], [35.7, 276.0], [35.8, 276.0], [35.9, 276.0], [36.0, 277.0], [36.1, 277.0], [36.2, 277.0], [36.3, 277.0], [36.4, 277.0], [36.5, 277.0], [36.6, 277.0], [36.7, 277.0], [36.8, 277.0], [36.9, 277.0], [37.0, 278.0], [37.1, 278.0], [37.2, 278.0], [37.3, 278.0], [37.4, 278.0], [37.5, 278.0], [37.6, 278.0], [37.7, 278.0], [37.8, 278.0], [37.9, 278.0], [38.0, 278.0], [38.1, 278.0], [38.2, 278.0], [38.3, 278.0], [38.4, 278.0], [38.5, 278.0], [38.6, 278.0], [38.7, 278.0], [38.8, 278.0], [38.9, 278.0], [39.0, 278.0], [39.1, 278.0], [39.2, 278.0], [39.3, 278.0], [39.4, 278.0], [39.5, 278.0], [39.6, 278.0], [39.7, 278.0], [39.8, 278.0], [39.9, 278.0], [40.0, 278.0], [40.1, 278.0], [40.2, 278.0], [40.3, 278.0], [40.4, 278.0], [40.5, 278.0], [40.6, 278.0], [40.7, 278.0], [40.8, 278.0], [40.9, 278.0], [41.0, 279.0], [41.1, 279.0], [41.2, 279.0], [41.3, 279.0], [41.4, 279.0], [41.5, 279.0], [41.6, 279.0], [41.7, 279.0], [41.8, 279.0], [41.9, 279.0], [42.0, 279.0], [42.1, 279.0], [42.2, 279.0], [42.3, 279.0], [42.4, 279.0], [42.5, 279.0], [42.6, 279.0], [42.7, 279.0], [42.8, 279.0], [42.9, 279.0], [43.0, 280.0], [43.1, 280.0], [43.2, 280.0], [43.3, 280.0], [43.4, 280.0], [43.5, 280.0], [43.6, 280.0], [43.7, 280.0], [43.8, 280.0], [43.9, 280.0], [44.0, 281.0], [44.1, 281.0], [44.2, 281.0], [44.3, 281.0], [44.4, 281.0], [44.5, 281.0], [44.6, 281.0], [44.7, 281.0], [44.8, 281.0], [44.9, 281.0], [45.0, 282.0], [45.1, 282.0], [45.2, 282.0], [45.3, 282.0], [45.4, 282.0], [45.5, 282.0], [45.6, 282.0], [45.7, 282.0], [45.8, 282.0], [45.9, 282.0], [46.0, 282.0], [46.1, 282.0], [46.2, 282.0], [46.3, 282.0], [46.4, 282.0], [46.5, 282.0], [46.6, 282.0], [46.7, 282.0], [46.8, 282.0], [46.9, 282.0], [47.0, 283.0], [47.1, 283.0], [47.2, 283.0], [47.3, 283.0], [47.4, 283.0], [47.5, 283.0], [47.6, 283.0], [47.7, 283.0], [47.8, 283.0], [47.9, 283.0], [48.0, 283.0], [48.1, 283.0], [48.2, 283.0], [48.3, 283.0], [48.4, 283.0], [48.5, 283.0], [48.6, 283.0], [48.7, 283.0], [48.8, 283.0], [48.9, 283.0], [49.0, 284.0], [49.1, 284.0], [49.2, 284.0], [49.3, 284.0], [49.4, 284.0], [49.5, 284.0], [49.6, 284.0], [49.7, 284.0], [49.8, 284.0], [49.9, 284.0], [50.0, 284.0], [50.1, 284.0], [50.2, 284.0], [50.3, 284.0], [50.4, 284.0], [50.5, 284.0], [50.6, 284.0], [50.7, 284.0], [50.8, 284.0], [50.9, 284.0], [51.0, 285.0], [51.1, 285.0], [51.2, 285.0], [51.3, 285.0], [51.4, 285.0], [51.5, 285.0], [51.6, 285.0], [51.7, 285.0], [51.8, 285.0], [51.9, 285.0], [52.0, 285.0], [52.1, 285.0], [52.2, 285.0], [52.3, 285.0], [52.4, 285.0], [52.5, 285.0], [52.6, 285.0], [52.7, 285.0], [52.8, 285.0], [52.9, 285.0], [53.0, 285.0], [53.1, 285.0], [53.2, 285.0], [53.3, 285.0], [53.4, 285.0], [53.5, 285.0], [53.6, 285.0], [53.7, 285.0], [53.8, 285.0], [53.9, 285.0], [54.0, 286.0], [54.1, 286.0], [54.2, 286.0], [54.3, 286.0], [54.4, 286.0], [54.5, 286.0], [54.6, 286.0], [54.7, 286.0], [54.8, 286.0], [54.9, 286.0], [55.0, 286.0], [55.1, 286.0], [55.2, 286.0], [55.3, 286.0], [55.4, 286.0], [55.5, 286.0], [55.6, 286.0], [55.7, 286.0], [55.8, 286.0], [55.9, 286.0], [56.0, 287.0], [56.1, 287.0], [56.2, 287.0], [56.3, 287.0], [56.4, 287.0], [56.5, 287.0], [56.6, 287.0], [56.7, 287.0], [56.8, 287.0], [56.9, 287.0], [57.0, 287.0], [57.1, 287.0], [57.2, 287.0], [57.3, 287.0], [57.4, 287.0], [57.5, 287.0], [57.6, 287.0], [57.7, 287.0], [57.8, 287.0], [57.9, 287.0], [58.0, 287.0], [58.1, 287.0], [58.2, 287.0], [58.3, 287.0], [58.4, 287.0], [58.5, 287.0], [58.6, 287.0], [58.7, 287.0], [58.8, 287.0], [58.9, 287.0], [59.0, 288.0], [59.1, 288.0], [59.2, 288.0], [59.3, 288.0], [59.4, 288.0], [59.5, 288.0], [59.6, 288.0], [59.7, 288.0], [59.8, 288.0], [59.9, 288.0], [60.0, 288.0], [60.1, 288.0], [60.2, 288.0], [60.3, 288.0], [60.4, 288.0], [60.5, 288.0], [60.6, 288.0], [60.7, 288.0], [60.8, 288.0], [60.9, 288.0], [61.0, 290.0], [61.1, 290.0], [61.2, 290.0], [61.3, 290.0], [61.4, 290.0], [61.5, 290.0], [61.6, 290.0], [61.7, 290.0], [61.8, 290.0], [61.9, 290.0], [62.0, 290.0], [62.1, 290.0], [62.2, 290.0], [62.3, 290.0], [62.4, 290.0], [62.5, 290.0], [62.6, 290.0], [62.7, 290.0], [62.8, 290.0], [62.9, 290.0], [63.0, 291.0], [63.1, 291.0], [63.2, 291.0], [63.3, 291.0], [63.4, 291.0], [63.5, 291.0], [63.6, 291.0], [63.7, 291.0], [63.8, 291.0], [63.9, 291.0], [64.0, 292.0], [64.1, 292.0], [64.2, 292.0], [64.3, 292.0], [64.4, 292.0], [64.5, 292.0], [64.6, 292.0], [64.7, 292.0], [64.8, 292.0], [64.9, 292.0], [65.0, 292.0], [65.1, 292.0], [65.2, 292.0], [65.3, 292.0], [65.4, 292.0], [65.5, 292.0], [65.6, 292.0], [65.7, 292.0], [65.8, 292.0], [65.9, 292.0], [66.0, 293.0], [66.1, 293.0], [66.2, 293.0], [66.3, 293.0], [66.4, 293.0], [66.5, 293.0], [66.6, 293.0], [66.7, 293.0], [66.8, 293.0], [66.9, 293.0], [67.0, 294.0], [67.1, 294.0], [67.2, 294.0], [67.3, 294.0], [67.4, 294.0], [67.5, 294.0], [67.6, 294.0], [67.7, 294.0], [67.8, 294.0], [67.9, 294.0], [68.0, 294.0], [68.1, 294.0], [68.2, 294.0], [68.3, 294.0], [68.4, 294.0], [68.5, 294.0], [68.6, 294.0], [68.7, 294.0], [68.8, 294.0], [68.9, 294.0], [69.0, 295.0], [69.1, 295.0], [69.2, 295.0], [69.3, 295.0], [69.4, 295.0], [69.5, 295.0], [69.6, 295.0], [69.7, 295.0], [69.8, 295.0], [69.9, 295.0], [70.0, 296.0], [70.1, 296.0], [70.2, 296.0], [70.3, 296.0], [70.4, 296.0], [70.5, 296.0], [70.6, 296.0], [70.7, 296.0], [70.8, 296.0], [70.9, 296.0], [71.0, 296.0], [71.1, 296.0], [71.2, 296.0], [71.3, 296.0], [71.4, 296.0], [71.5, 296.0], [71.6, 296.0], [71.7, 296.0], [71.8, 296.0], [71.9, 296.0], [72.0, 305.0], [72.1, 305.0], [72.2, 305.0], [72.3, 305.0], [72.4, 305.0], [72.5, 305.0], [72.6, 305.0], [72.7, 305.0], [72.8, 305.0], [72.9, 305.0], [73.0, 305.0], [73.1, 305.0], [73.2, 305.0], [73.3, 305.0], [73.4, 305.0], [73.5, 305.0], [73.6, 305.0], [73.7, 305.0], [73.8, 305.0], [73.9, 305.0], [74.0, 1034.0], [74.1, 1034.0], [74.2, 1034.0], [74.3, 1034.0], [74.4, 1034.0], [74.5, 1034.0], [74.6, 1034.0], [74.7, 1034.0], [74.8, 1034.0], [74.9, 1034.0], [75.0, 1034.0], [75.1, 1034.0], [75.2, 1034.0], [75.3, 1034.0], [75.4, 1034.0], [75.5, 1034.0], [75.6, 1034.0], [75.7, 1034.0], [75.8, 1034.0], [75.9, 1034.0], [76.0, 1035.0], [76.1, 1035.0], [76.2, 1035.0], [76.3, 1035.0], [76.4, 1035.0], [76.5, 1035.0], [76.6, 1035.0], [76.7, 1035.0], [76.8, 1035.0], [76.9, 1035.0], [77.0, 1039.0], [77.1, 1039.0], [77.2, 1039.0], [77.3, 1039.0], [77.4, 1039.0], [77.5, 1039.0], [77.6, 1039.0], [77.7, 1039.0], [77.8, 1039.0], [77.9, 1039.0], [78.0, 1042.0], [78.1, 1042.0], [78.2, 1042.0], [78.3, 1042.0], [78.4, 1042.0], [78.5, 1042.0], [78.6, 1042.0], [78.7, 1042.0], [78.8, 1042.0], [78.9, 1042.0], [79.0, 1043.0], [79.1, 1043.0], [79.2, 1043.0], [79.3, 1043.0], [79.4, 1043.0], [79.5, 1043.0], [79.6, 1043.0], [79.7, 1043.0], [79.8, 1043.0], [79.9, 1043.0], [80.0, 1043.0], [80.1, 1043.0], [80.2, 1043.0], [80.3, 1043.0], [80.4, 1043.0], [80.5, 1043.0], [80.6, 1043.0], [80.7, 1043.0], [80.8, 1043.0], [80.9, 1043.0], [81.0, 1047.0], [81.1, 1047.0], [81.2, 1047.0], [81.3, 1047.0], [81.4, 1047.0], [81.5, 1047.0], [81.6, 1047.0], [81.7, 1047.0], [81.8, 1047.0], [81.9, 1047.0], [82.0, 1048.0], [82.1, 1048.0], [82.2, 1048.0], [82.3, 1048.0], [82.4, 1048.0], [82.5, 1048.0], [82.6, 1048.0], [82.7, 1048.0], [82.8, 1048.0], [82.9, 1048.0], [83.0, 1053.0], [83.1, 1053.0], [83.2, 1053.0], [83.3, 1053.0], [83.4, 1053.0], [83.5, 1053.0], [83.6, 1053.0], [83.7, 1053.0], [83.8, 1053.0], [83.9, 1053.0], [84.0, 1053.0], [84.1, 1053.0], [84.2, 1053.0], [84.3, 1053.0], [84.4, 1053.0], [84.5, 1053.0], [84.6, 1053.0], [84.7, 1053.0], [84.8, 1053.0], [84.9, 1053.0], [85.0, 1056.0], [85.1, 1056.0], [85.2, 1056.0], [85.3, 1056.0], [85.4, 1056.0], [85.5, 1056.0], [85.6, 1056.0], [85.7, 1056.0], [85.8, 1056.0], [85.9, 1056.0], [86.0, 1060.0], [86.1, 1060.0], [86.2, 1060.0], [86.3, 1060.0], [86.4, 1060.0], [86.5, 1060.0], [86.6, 1060.0], [86.7, 1060.0], [86.8, 1060.0], [86.9, 1060.0], [87.0, 1062.0], [87.1, 1062.0], [87.2, 1062.0], [87.3, 1062.0], [87.4, 1062.0], [87.5, 1062.0], [87.6, 1062.0], [87.7, 1062.0], [87.8, 1062.0], [87.9, 1062.0], [88.0, 1062.0], [88.1, 1062.0], [88.2, 1062.0], [88.3, 1062.0], [88.4, 1062.0], [88.5, 1062.0], [88.6, 1062.0], [88.7, 1062.0], [88.8, 1062.0], [88.9, 1062.0], [89.0, 1065.0], [89.1, 1065.0], [89.2, 1065.0], [89.3, 1065.0], [89.4, 1065.0], [89.5, 1065.0], [89.6, 1065.0], [89.7, 1065.0], [89.8, 1065.0], [89.9, 1065.0], [90.0, 1065.0], [90.1, 1065.0], [90.2, 1065.0], [90.3, 1065.0], [90.4, 1065.0], [90.5, 1065.0], [90.6, 1065.0], [90.7, 1065.0], [90.8, 1065.0], [90.9, 1065.0], [91.0, 1067.0], [91.1, 1067.0], [91.2, 1067.0], [91.3, 1067.0], [91.4, 1067.0], [91.5, 1067.0], [91.6, 1067.0], [91.7, 1067.0], [91.8, 1067.0], [91.9, 1067.0], [92.0, 1069.0], [92.1, 1069.0], [92.2, 1069.0], [92.3, 1069.0], [92.4, 1069.0], [92.5, 1069.0], [92.6, 1069.0], [92.7, 1069.0], [92.8, 1069.0], [92.9, 1069.0], [93.0, 1078.0], [93.1, 1078.0], [93.2, 1078.0], [93.3, 1078.0], [93.4, 1078.0], [93.5, 1078.0], [93.6, 1078.0], [93.7, 1078.0], [93.8, 1078.0], [93.9, 1078.0], [94.0, 1083.0], [94.1, 1083.0], [94.2, 1083.0], [94.3, 1083.0], [94.4, 1083.0], [94.5, 1083.0], [94.6, 1083.0], [94.7, 1083.0], [94.8, 1083.0], [94.9, 1083.0], [95.0, 1083.0], [95.1, 1083.0], [95.2, 1083.0], [95.3, 1083.0], [95.4, 1083.0], [95.5, 1083.0], [95.6, 1083.0], [95.7, 1083.0], [95.8, 1083.0], [95.9, 1083.0], [96.0, 1087.0], [96.1, 1087.0], [96.2, 1087.0], [96.3, 1087.0], [96.4, 1087.0], [96.5, 1087.0], [96.6, 1087.0], [96.7, 1087.0], [96.8, 1087.0], [96.9, 1087.0], [97.0, 1313.0], [97.1, 1313.0], [97.2, 1313.0], [97.3, 1313.0], [97.4, 1313.0], [97.5, 1313.0], [97.6, 1313.0], [97.7, 1313.0], [97.8, 1313.0], [97.9, 1313.0], [98.0, 1374.0], [98.1, 1374.0], [98.2, 1374.0], [98.3, 1374.0], [98.4, 1374.0], [98.5, 1374.0], [98.6, 1374.0], [98.7, 1374.0], [98.8, 1374.0], [98.9, 1374.0], [99.0, 1384.0], [99.1, 1384.0], [99.2, 1384.0], [99.3, 1384.0], [99.4, 1384.0], [99.5, 1384.0], [99.6, 1384.0], [99.7, 1384.0], [99.8, 1384.0], [99.9, 1384.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[0.0, 265.0], [0.1, 265.0], [0.2, 265.0], [0.3, 265.0], [0.4, 265.0], [0.5, 265.0], [0.6, 265.0], [0.7, 265.0], [0.8, 265.0], [0.9, 265.0], [1.0, 265.0], [1.1, 265.0], [1.2, 265.0], [1.3, 265.0], [1.4, 265.0], [1.5, 265.0], [1.6, 265.0], [1.7, 265.0], [1.8, 265.0], [1.9, 265.0], [2.0, 266.0], [2.1, 266.0], [2.2, 266.0], [2.3, 266.0], [2.4, 266.0], [2.5, 266.0], [2.6, 266.0], [2.7, 266.0], [2.8, 266.0], [2.9, 266.0], [3.0, 266.0], [3.1, 266.0], [3.2, 266.0], [3.3, 266.0], [3.4, 266.0], [3.5, 266.0], [3.6, 266.0], [3.7, 266.0], [3.8, 266.0], [3.9, 266.0], [4.0, 266.0], [4.1, 266.0], [4.2, 266.0], [4.3, 266.0], [4.4, 266.0], [4.5, 266.0], [4.6, 266.0], [4.7, 266.0], [4.8, 266.0], [4.9, 266.0], [5.0, 267.0], [5.1, 267.0], [5.2, 267.0], [5.3, 267.0], [5.4, 267.0], [5.5, 267.0], [5.6, 267.0], [5.7, 267.0], [5.8, 267.0], [5.9, 267.0], [6.0, 267.0], [6.1, 267.0], [6.2, 267.0], [6.3, 267.0], [6.4, 267.0], [6.5, 267.0], [6.6, 267.0], [6.7, 267.0], [6.8, 267.0], [6.9, 267.0], [7.0, 268.0], [7.1, 268.0], [7.2, 268.0], [7.3, 268.0], [7.4, 268.0], [7.5, 268.0], [7.6, 268.0], [7.7, 268.0], [7.8, 268.0], [7.9, 268.0], [8.0, 268.0], [8.1, 268.0], [8.2, 268.0], [8.3, 268.0], [8.4, 268.0], [8.5, 268.0], [8.6, 268.0], [8.7, 268.0], [8.8, 268.0], [8.9, 268.0], [9.0, 268.0], [9.1, 268.0], [9.2, 268.0], [9.3, 268.0], [9.4, 268.0], [9.5, 268.0], [9.6, 268.0], [9.7, 268.0], [9.8, 268.0], [9.9, 268.0], [10.0, 269.0], [10.1, 269.0], [10.2, 269.0], [10.3, 269.0], [10.4, 269.0], [10.5, 269.0], [10.6, 269.0], [10.7, 269.0], [10.8, 269.0], [10.9, 269.0], [11.0, 270.0], [11.1, 270.0], [11.2, 270.0], [11.3, 270.0], [11.4, 270.0], [11.5, 270.0], [11.6, 270.0], [11.7, 270.0], [11.8, 270.0], [11.9, 270.0], [12.0, 270.0], [12.1, 270.0], [12.2, 270.0], [12.3, 270.0], [12.4, 270.0], [12.5, 270.0], [12.6, 270.0], [12.7, 270.0], [12.8, 270.0], [12.9, 270.0], [13.0, 271.0], [13.1, 271.0], [13.2, 271.0], [13.3, 271.0], [13.4, 271.0], [13.5, 271.0], [13.6, 271.0], [13.7, 271.0], [13.8, 271.0], [13.9, 271.0], [14.0, 272.0], [14.1, 272.0], [14.2, 272.0], [14.3, 272.0], [14.4, 272.0], [14.5, 272.0], [14.6, 272.0], [14.7, 272.0], [14.8, 272.0], [14.9, 272.0], [15.0, 274.0], [15.1, 274.0], [15.2, 274.0], [15.3, 274.0], [15.4, 274.0], [15.5, 274.0], [15.6, 274.0], [15.7, 274.0], [15.8, 274.0], [15.9, 274.0], [16.0, 275.0], [16.1, 275.0], [16.2, 275.0], [16.3, 275.0], [16.4, 275.0], [16.5, 275.0], [16.6, 275.0], [16.7, 275.0], [16.8, 275.0], [16.9, 275.0], [17.0, 275.0], [17.1, 275.0], [17.2, 275.0], [17.3, 275.0], [17.4, 275.0], [17.5, 275.0], [17.6, 275.0], [17.7, 275.0], [17.8, 275.0], [17.9, 275.0], [18.0, 275.0], [18.1, 275.0], [18.2, 275.0], [18.3, 275.0], [18.4, 275.0], [18.5, 275.0], [18.6, 275.0], [18.7, 275.0], [18.8, 275.0], [18.9, 275.0], [19.0, 276.0], [19.1, 276.0], [19.2, 276.0], [19.3, 276.0], [19.4, 276.0], [19.5, 276.0], [19.6, 276.0], [19.7, 276.0], [19.8, 276.0], [19.9, 276.0], [20.0, 276.0], [20.1, 276.0], [20.2, 276.0], [20.3, 276.0], [20.4, 276.0], [20.5, 276.0], [20.6, 276.0], [20.7, 276.0], [20.8, 276.0], [20.9, 276.0], [21.0, 277.0], [21.1, 277.0], [21.2, 277.0], [21.3, 277.0], [21.4, 277.0], [21.5, 277.0], [21.6, 277.0], [21.7, 277.0], [21.8, 277.0], [21.9, 277.0], [22.0, 277.0], [22.1, 277.0], [22.2, 277.0], [22.3, 277.0], [22.4, 277.0], [22.5, 277.0], [22.6, 277.0], [22.7, 277.0], [22.8, 277.0], [22.9, 277.0], [23.0, 277.0], [23.1, 277.0], [23.2, 277.0], [23.3, 277.0], [23.4, 277.0], [23.5, 277.0], [23.6, 277.0], [23.7, 277.0], [23.8, 277.0], [23.9, 277.0], [24.0, 277.0], [24.1, 277.0], [24.2, 277.0], [24.3, 277.0], [24.4, 277.0], [24.5, 277.0], [24.6, 277.0], [24.7, 277.0], [24.8, 277.0], [24.9, 277.0], [25.0, 278.0], [25.1, 278.0], [25.2, 278.0], [25.3, 278.0], [25.4, 278.0], [25.5, 278.0], [25.6, 278.0], [25.7, 278.0], [25.8, 278.0], [25.9, 278.0], [26.0, 278.0], [26.1, 278.0], [26.2, 278.0], [26.3, 278.0], [26.4, 278.0], [26.5, 278.0], [26.6, 278.0], [26.7, 278.0], [26.8, 278.0], [26.9, 278.0], [27.0, 278.0], [27.1, 278.0], [27.2, 278.0], [27.3, 278.0], [27.4, 278.0], [27.5, 278.0], [27.6, 278.0], [27.7, 278.0], [27.8, 278.0], [27.9, 278.0], [28.0, 279.0], [28.1, 279.0], [28.2, 279.0], [28.3, 279.0], [28.4, 279.0], [28.5, 279.0], [28.6, 279.0], [28.7, 279.0], [28.8, 279.0], [28.9, 279.0], [29.0, 279.0], [29.1, 279.0], [29.2, 279.0], [29.3, 279.0], [29.4, 279.0], [29.5, 279.0], [29.6, 279.0], [29.7, 279.0], [29.8, 279.0], [29.9, 279.0], [30.0, 279.0], [30.1, 279.0], [30.2, 279.0], [30.3, 279.0], [30.4, 279.0], [30.5, 279.0], [30.6, 279.0], [30.7, 279.0], [30.8, 279.0], [30.9, 279.0], [31.0, 281.0], [31.1, 281.0], [31.2, 281.0], [31.3, 281.0], [31.4, 281.0], [31.5, 281.0], [31.6, 281.0], [31.7, 281.0], [31.8, 281.0], [31.9, 281.0], [32.0, 281.0], [32.1, 281.0], [32.2, 281.0], [32.3, 281.0], [32.4, 281.0], [32.5, 281.0], [32.6, 281.0], [32.7, 281.0], [32.8, 281.0], [32.9, 281.0], [33.0, 282.0], [33.1, 282.0], [33.2, 282.0], [33.3, 282.0], [33.4, 282.0], [33.5, 282.0], [33.6, 282.0], [33.7, 282.0], [33.8, 282.0], [33.9, 282.0], [34.0, 283.0], [34.1, 283.0], [34.2, 283.0], [34.3, 283.0], [34.4, 283.0], [34.5, 283.0], [34.6, 283.0], [34.7, 283.0], [34.8, 283.0], [34.9, 283.0], [35.0, 283.0], [35.1, 283.0], [35.2, 283.0], [35.3, 283.0], [35.4, 283.0], [35.5, 283.0], [35.6, 283.0], [35.7, 283.0], [35.8, 283.0], [35.9, 283.0], [36.0, 283.0], [36.1, 283.0], [36.2, 283.0], [36.3, 283.0], [36.4, 283.0], [36.5, 283.0], [36.6, 283.0], [36.7, 283.0], [36.8, 283.0], [36.9, 283.0], [37.0, 283.0], [37.1, 283.0], [37.2, 283.0], [37.3, 283.0], [37.4, 283.0], [37.5, 283.0], [37.6, 283.0], [37.7, 283.0], [37.8, 283.0], [37.9, 283.0], [38.0, 284.0], [38.1, 284.0], [38.2, 284.0], [38.3, 284.0], [38.4, 284.0], [38.5, 284.0], [38.6, 284.0], [38.7, 284.0], [38.8, 284.0], [38.9, 284.0], [39.0, 284.0], [39.1, 284.0], [39.2, 284.0], [39.3, 284.0], [39.4, 284.0], [39.5, 284.0], [39.6, 284.0], [39.7, 284.0], [39.8, 284.0], [39.9, 284.0], [40.0, 284.0], [40.1, 284.0], [40.2, 284.0], [40.3, 284.0], [40.4, 284.0], [40.5, 284.0], [40.6, 284.0], [40.7, 284.0], [40.8, 284.0], [40.9, 284.0], [41.0, 284.0], [41.1, 284.0], [41.2, 284.0], [41.3, 284.0], [41.4, 284.0], [41.5, 284.0], [41.6, 284.0], [41.7, 284.0], [41.8, 284.0], [41.9, 284.0], [42.0, 285.0], [42.1, 285.0], [42.2, 285.0], [42.3, 285.0], [42.4, 285.0], [42.5, 285.0], [42.6, 285.0], [42.7, 285.0], [42.8, 285.0], [42.9, 285.0], [43.0, 286.0], [43.1, 286.0], [43.2, 286.0], [43.3, 286.0], [43.4, 286.0], [43.5, 286.0], [43.6, 286.0], [43.7, 286.0], [43.8, 286.0], [43.9, 286.0], [44.0, 288.0], [44.1, 288.0], [44.2, 288.0], [44.3, 288.0], [44.4, 288.0], [44.5, 288.0], [44.6, 288.0], [44.7, 288.0], [44.8, 288.0], [44.9, 288.0], [45.0, 288.0], [45.1, 288.0], [45.2, 288.0], [45.3, 288.0], [45.4, 288.0], [45.5, 288.0], [45.6, 288.0], [45.7, 288.0], [45.8, 288.0], [45.9, 288.0], [46.0, 289.0], [46.1, 289.0], [46.2, 289.0], [46.3, 289.0], [46.4, 289.0], [46.5, 289.0], [46.6, 289.0], [46.7, 289.0], [46.8, 289.0], [46.9, 289.0], [47.0, 289.0], [47.1, 289.0], [47.2, 289.0], [47.3, 289.0], [47.4, 289.0], [47.5, 289.0], [47.6, 289.0], [47.7, 289.0], [47.8, 289.0], [47.9, 289.0], [48.0, 290.0], [48.1, 290.0], [48.2, 290.0], [48.3, 290.0], [48.4, 290.0], [48.5, 290.0], [48.6, 290.0], [48.7, 290.0], [48.8, 290.0], [48.9, 290.0], [49.0, 290.0], [49.1, 290.0], [49.2, 290.0], [49.3, 290.0], [49.4, 290.0], [49.5, 290.0], [49.6, 290.0], [49.7, 290.0], [49.8, 290.0], [49.9, 290.0], [50.0, 291.0], [50.1, 291.0], [50.2, 291.0], [50.3, 291.0], [50.4, 291.0], [50.5, 291.0], [50.6, 291.0], [50.7, 291.0], [50.8, 291.0], [50.9, 291.0], [51.0, 293.0], [51.1, 293.0], [51.2, 293.0], [51.3, 293.0], [51.4, 293.0], [51.5, 293.0], [51.6, 293.0], [51.7, 293.0], [51.8, 293.0], [51.9, 293.0], [52.0, 294.0], [52.1, 294.0], [52.2, 294.0], [52.3, 294.0], [52.4, 294.0], [52.5, 294.0], [52.6, 294.0], [52.7, 294.0], [52.8, 294.0], [52.9, 294.0], [53.0, 297.0], [53.1, 297.0], [53.2, 297.0], [53.3, 297.0], [53.4, 297.0], [53.5, 297.0], [53.6, 297.0], [53.7, 297.0], [53.8, 297.0], [53.9, 297.0], [54.0, 297.0], [54.1, 297.0], [54.2, 297.0], [54.3, 297.0], [54.4, 297.0], [54.5, 297.0], [54.6, 297.0], [54.7, 297.0], [54.8, 297.0], [54.9, 297.0], [55.0, 300.0], [55.1, 300.0], [55.2, 300.0], [55.3, 300.0], [55.4, 300.0], [55.5, 300.0], [55.6, 300.0], [55.7, 300.0], [55.8, 300.0], [55.9, 300.0], [56.0, 305.0], [56.1, 305.0], [56.2, 305.0], [56.3, 305.0], [56.4, 305.0], [56.5, 305.0], [56.6, 305.0], [56.7, 305.0], [56.8, 305.0], [56.9, 305.0], [57.0, 309.0], [57.1, 309.0], [57.2, 309.0], [57.3, 309.0], [57.4, 309.0], [57.5, 309.0], [57.6, 309.0], [57.7, 309.0], [57.8, 309.0], [57.9, 309.0], [58.0, 310.0], [58.1, 310.0], [58.2, 310.0], [58.3, 310.0], [58.4, 310.0], [58.5, 310.0], [58.6, 310.0], [58.7, 310.0], [58.8, 310.0], [58.9, 310.0], [59.0, 311.0], [59.1, 311.0], [59.2, 311.0], [59.3, 311.0], [59.4, 311.0], [59.5, 311.0], [59.6, 311.0], [59.7, 311.0], [59.8, 311.0], [59.9, 311.0], [60.0, 314.0], [60.1, 314.0], [60.2, 314.0], [60.3, 314.0], [60.4, 314.0], [60.5, 314.0], [60.6, 314.0], [60.7, 314.0], [60.8, 314.0], [60.9, 314.0], [61.0, 314.0], [61.1, 314.0], [61.2, 314.0], [61.3, 314.0], [61.4, 314.0], [61.5, 314.0], [61.6, 314.0], [61.7, 314.0], [61.8, 314.0], [61.9, 314.0], [62.0, 315.0], [62.1, 315.0], [62.2, 315.0], [62.3, 315.0], [62.4, 315.0], [62.5, 315.0], [62.6, 315.0], [62.7, 315.0], [62.8, 315.0], [62.9, 315.0], [63.0, 316.0], [63.1, 316.0], [63.2, 316.0], [63.3, 316.0], [63.4, 316.0], [63.5, 316.0], [63.6, 316.0], [63.7, 316.0], [63.8, 316.0], [63.9, 316.0], [64.0, 318.0], [64.1, 318.0], [64.2, 318.0], [64.3, 318.0], [64.4, 318.0], [64.5, 318.0], [64.6, 318.0], [64.7, 318.0], [64.8, 318.0], [64.9, 318.0], [65.0, 323.0], [65.1, 323.0], [65.2, 323.0], [65.3, 323.0], [65.4, 323.0], [65.5, 323.0], [65.6, 323.0], [65.7, 323.0], [65.8, 323.0], [65.9, 323.0], [66.0, 1058.0], [66.1, 1058.0], [66.2, 1058.0], [66.3, 1058.0], [66.4, 1058.0], [66.5, 1058.0], [66.6, 1058.0], [66.7, 1058.0], [66.8, 1058.0], [66.9, 1058.0], [67.0, 1073.0], [67.1, 1073.0], [67.2, 1073.0], [67.3, 1073.0], [67.4, 1073.0], [67.5, 1073.0], [67.6, 1073.0], [67.7, 1073.0], [67.8, 1073.0], [67.9, 1073.0], [68.0, 1108.0], [68.1, 1108.0], [68.2, 1108.0], [68.3, 1108.0], [68.4, 1108.0], [68.5, 1108.0], [68.6, 1108.0], [68.7, 1108.0], [68.8, 1108.0], [68.9, 1108.0], [69.0, 1112.0], [69.1, 1112.0], [69.2, 1112.0], [69.3, 1112.0], [69.4, 1112.0], [69.5, 1112.0], [69.6, 1112.0], [69.7, 1112.0], [69.8, 1112.0], [69.9, 1112.0], [70.0, 1122.0], [70.1, 1122.0], [70.2, 1122.0], [70.3, 1122.0], [70.4, 1122.0], [70.5, 1122.0], [70.6, 1122.0], [70.7, 1122.0], [70.8, 1122.0], [70.9, 1122.0], [71.0, 1122.0], [71.1, 1122.0], [71.2, 1122.0], [71.3, 1122.0], [71.4, 1122.0], [71.5, 1122.0], [71.6, 1122.0], [71.7, 1122.0], [71.8, 1122.0], [71.9, 1122.0], [72.0, 1123.0], [72.1, 1123.0], [72.2, 1123.0], [72.3, 1123.0], [72.4, 1123.0], [72.5, 1123.0], [72.6, 1123.0], [72.7, 1123.0], [72.8, 1123.0], [72.9, 1123.0], [73.0, 1128.0], [73.1, 1128.0], [73.2, 1128.0], [73.3, 1128.0], [73.4, 1128.0], [73.5, 1128.0], [73.6, 1128.0], [73.7, 1128.0], [73.8, 1128.0], [73.9, 1128.0], [74.0, 1152.0], [74.1, 1152.0], [74.2, 1152.0], [74.3, 1152.0], [74.4, 1152.0], [74.5, 1152.0], [74.6, 1152.0], [74.7, 1152.0], [74.8, 1152.0], [74.9, 1152.0], [75.0, 1153.0], [75.1, 1153.0], [75.2, 1153.0], [75.3, 1153.0], [75.4, 1153.0], [75.5, 1153.0], [75.6, 1153.0], [75.7, 1153.0], [75.8, 1153.0], [75.9, 1153.0], [76.0, 1170.0], [76.1, 1170.0], [76.2, 1170.0], [76.3, 1170.0], [76.4, 1170.0], [76.5, 1170.0], [76.6, 1170.0], [76.7, 1170.0], [76.8, 1170.0], [76.9, 1170.0], [77.0, 1171.0], [77.1, 1171.0], [77.2, 1171.0], [77.3, 1171.0], [77.4, 1171.0], [77.5, 1171.0], [77.6, 1171.0], [77.7, 1171.0], [77.8, 1171.0], [77.9, 1171.0], [78.0, 1177.0], [78.1, 1177.0], [78.2, 1177.0], [78.3, 1177.0], [78.4, 1177.0], [78.5, 1177.0], [78.6, 1177.0], [78.7, 1177.0], [78.8, 1177.0], [78.9, 1177.0], [79.0, 1198.0], [79.1, 1198.0], [79.2, 1198.0], [79.3, 1198.0], [79.4, 1198.0], [79.5, 1198.0], [79.6, 1198.0], [79.7, 1198.0], [79.8, 1198.0], [79.9, 1198.0], [80.0, 1198.0], [80.1, 1198.0], [80.2, 1198.0], [80.3, 1198.0], [80.4, 1198.0], [80.5, 1198.0], [80.6, 1198.0], [80.7, 1198.0], [80.8, 1198.0], [80.9, 1198.0], [81.0, 1202.0], [81.1, 1202.0], [81.2, 1202.0], [81.3, 1202.0], [81.4, 1202.0], [81.5, 1202.0], [81.6, 1202.0], [81.7, 1202.0], [81.8, 1202.0], [81.9, 1202.0], [82.0, 1202.0], [82.1, 1202.0], [82.2, 1202.0], [82.3, 1202.0], [82.4, 1202.0], [82.5, 1202.0], [82.6, 1202.0], [82.7, 1202.0], [82.8, 1202.0], [82.9, 1202.0], [83.0, 1265.0], [83.1, 1265.0], [83.2, 1265.0], [83.3, 1265.0], [83.4, 1265.0], [83.5, 1265.0], [83.6, 1265.0], [83.7, 1265.0], [83.8, 1265.0], [83.9, 1265.0], [84.0, 1278.0], [84.1, 1278.0], [84.2, 1278.0], [84.3, 1278.0], [84.4, 1278.0], [84.5, 1278.0], [84.6, 1278.0], [84.7, 1278.0], [84.8, 1278.0], [84.9, 1278.0], [85.0, 1292.0], [85.1, 1292.0], [85.2, 1292.0], [85.3, 1292.0], [85.4, 1292.0], [85.5, 1292.0], [85.6, 1292.0], [85.7, 1292.0], [85.8, 1292.0], [85.9, 1292.0], [86.0, 1298.0], [86.1, 1298.0], [86.2, 1298.0], [86.3, 1298.0], [86.4, 1298.0], [86.5, 1298.0], [86.6, 1298.0], [86.7, 1298.0], [86.8, 1298.0], [86.9, 1298.0], [87.0, 1301.0], [87.1, 1301.0], [87.2, 1301.0], [87.3, 1301.0], [87.4, 1301.0], [87.5, 1301.0], [87.6, 1301.0], [87.7, 1301.0], [87.8, 1301.0], [87.9, 1301.0], [88.0, 1314.0], [88.1, 1314.0], [88.2, 1314.0], [88.3, 1314.0], [88.4, 1314.0], [88.5, 1314.0], [88.6, 1314.0], [88.7, 1314.0], [88.8, 1314.0], [88.9, 1314.0], [89.0, 1323.0], [89.1, 1323.0], [89.2, 1323.0], [89.3, 1323.0], [89.4, 1323.0], [89.5, 1323.0], [89.6, 1323.0], [89.7, 1323.0], [89.8, 1323.0], [89.9, 1323.0], [90.0, 1326.0], [90.1, 1326.0], [90.2, 1326.0], [90.3, 1326.0], [90.4, 1326.0], [90.5, 1326.0], [90.6, 1326.0], [90.7, 1326.0], [90.8, 1326.0], [90.9, 1326.0], [91.0, 1328.0], [91.1, 1328.0], [91.2, 1328.0], [91.3, 1328.0], [91.4, 1328.0], [91.5, 1328.0], [91.6, 1328.0], [91.7, 1328.0], [91.8, 1328.0], [91.9, 1328.0], [92.0, 1333.0], [92.1, 1333.0], [92.2, 1333.0], [92.3, 1333.0], [92.4, 1333.0], [92.5, 1333.0], [92.6, 1333.0], [92.7, 1333.0], [92.8, 1333.0], [92.9, 1333.0], [93.0, 1338.0], [93.1, 1338.0], [93.2, 1338.0], [93.3, 1338.0], [93.4, 1338.0], [93.5, 1338.0], [93.6, 1338.0], [93.7, 1338.0], [93.8, 1338.0], [93.9, 1338.0], [94.0, 1341.0], [94.1, 1341.0], [94.2, 1341.0], [94.3, 1341.0], [94.4, 1341.0], [94.5, 1341.0], [94.6, 1341.0], [94.7, 1341.0], [94.8, 1341.0], [94.9, 1341.0], [95.0, 1342.0], [95.1, 1342.0], [95.2, 1342.0], [95.3, 1342.0], [95.4, 1342.0], [95.5, 1342.0], [95.6, 1342.0], [95.7, 1342.0], [95.8, 1342.0], [95.9, 1342.0], [96.0, 1363.0], [96.1, 1363.0], [96.2, 1363.0], [96.3, 1363.0], [96.4, 1363.0], [96.5, 1363.0], [96.6, 1363.0], [96.7, 1363.0], [96.8, 1363.0], [96.9, 1363.0], [97.0, 1366.0], [97.1, 1366.0], [97.2, 1366.0], [97.3, 1366.0], [97.4, 1366.0], [97.5, 1366.0], [97.6, 1366.0], [97.7, 1366.0], [97.8, 1366.0], [97.9, 1366.0], [98.0, 1383.0], [98.1, 1383.0], [98.2, 1383.0], [98.3, 1383.0], [98.4, 1383.0], [98.5, 1383.0], [98.6, 1383.0], [98.7, 1383.0], [98.8, 1383.0], [98.9, 1383.0], [99.0, 3335.0], [99.1, 3335.0], [99.2, 3335.0], [99.3, 3335.0], [99.4, 3335.0], [99.5, 3335.0], [99.6, 3335.0], [99.7, 3335.0], [99.8, 3335.0], [99.9, 3335.0]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[0.0, 528.0], [0.1, 528.0], [0.2, 528.0], [0.3, 528.0], [0.4, 528.0], [0.5, 528.0], [0.6, 528.0], [0.7, 528.0], [0.8, 528.0], [0.9, 528.0], [1.0, 533.0], [1.1, 533.0], [1.2, 533.0], [1.3, 533.0], [1.4, 533.0], [1.5, 533.0], [1.6, 533.0], [1.7, 533.0], [1.8, 533.0], [1.9, 533.0], [2.0, 535.0], [2.1, 535.0], [2.2, 535.0], [2.3, 535.0], [2.4, 535.0], [2.5, 535.0], [2.6, 535.0], [2.7, 535.0], [2.8, 535.0], [2.9, 535.0], [3.0, 538.0], [3.1, 538.0], [3.2, 538.0], [3.3, 538.0], [3.4, 538.0], [3.5, 538.0], [3.6, 538.0], [3.7, 538.0], [3.8, 538.0], [3.9, 538.0], [4.0, 538.0], [4.1, 538.0], [4.2, 538.0], [4.3, 538.0], [4.4, 538.0], [4.5, 538.0], [4.6, 538.0], [4.7, 538.0], [4.8, 538.0], [4.9, 538.0], [5.0, 540.0], [5.1, 540.0], [5.2, 540.0], [5.3, 540.0], [5.4, 540.0], [5.5, 540.0], [5.6, 540.0], [5.7, 540.0], [5.8, 540.0], [5.9, 540.0], [6.0, 542.0], [6.1, 542.0], [6.2, 542.0], [6.3, 542.0], [6.4, 542.0], [6.5, 542.0], [6.6, 542.0], [6.7, 542.0], [6.8, 542.0], [6.9, 542.0], [7.0, 545.0], [7.1, 545.0], [7.2, 545.0], [7.3, 545.0], [7.4, 545.0], [7.5, 545.0], [7.6, 545.0], [7.7, 545.0], [7.8, 545.0], [7.9, 545.0], [8.0, 545.0], [8.1, 545.0], [8.2, 545.0], [8.3, 545.0], [8.4, 545.0], [8.5, 545.0], [8.6, 545.0], [8.7, 545.0], [8.8, 545.0], [8.9, 545.0], [9.0, 545.0], [9.1, 545.0], [9.2, 545.0], [9.3, 545.0], [9.4, 545.0], [9.5, 545.0], [9.6, 545.0], [9.7, 545.0], [9.8, 545.0], [9.9, 545.0], [10.0, 547.0], [10.1, 547.0], [10.2, 547.0], [10.3, 547.0], [10.4, 547.0], [10.5, 547.0], [10.6, 547.0], [10.7, 547.0], [10.8, 547.0], [10.9, 547.0], [11.0, 548.0], [11.1, 548.0], [11.2, 548.0], [11.3, 548.0], [11.4, 548.0], [11.5, 548.0], [11.6, 548.0], [11.7, 548.0], [11.8, 548.0], [11.9, 548.0], [12.0, 549.0], [12.1, 549.0], [12.2, 549.0], [12.3, 549.0], [12.4, 549.0], [12.5, 549.0], [12.6, 549.0], [12.7, 549.0], [12.8, 549.0], [12.9, 549.0], [13.0, 550.0], [13.1, 550.0], [13.2, 550.0], [13.3, 550.0], [13.4, 550.0], [13.5, 550.0], [13.6, 550.0], [13.7, 550.0], [13.8, 550.0], [13.9, 550.0], [14.0, 552.0], [14.1, 552.0], [14.2, 552.0], [14.3, 552.0], [14.4, 552.0], [14.5, 552.0], [14.6, 552.0], [14.7, 552.0], [14.8, 552.0], [14.9, 552.0], [15.0, 552.0], [15.1, 552.0], [15.2, 552.0], [15.3, 552.0], [15.4, 552.0], [15.5, 552.0], [15.6, 552.0], [15.7, 552.0], [15.8, 552.0], [15.9, 552.0], [16.0, 1280.0], [16.1, 1280.0], [16.2, 1280.0], [16.3, 1280.0], [16.4, 1280.0], [16.5, 1280.0], [16.6, 1280.0], [16.7, 1280.0], [16.8, 1280.0], [16.9, 1280.0], [17.0, 1285.0], [17.1, 1285.0], [17.2, 1285.0], [17.3, 1285.0], [17.4, 1285.0], [17.5, 1285.0], [17.6, 1285.0], [17.7, 1285.0], [17.8, 1285.0], [17.9, 1285.0], [18.0, 1294.0], [18.1, 1294.0], [18.2, 1294.0], [18.3, 1294.0], [18.4, 1294.0], [18.5, 1294.0], [18.6, 1294.0], [18.7, 1294.0], [18.8, 1294.0], [18.9, 1294.0], [19.0, 1297.0], [19.1, 1297.0], [19.2, 1297.0], [19.3, 1297.0], [19.4, 1297.0], [19.5, 1297.0], [19.6, 1297.0], [19.7, 1297.0], [19.8, 1297.0], [19.9, 1297.0], [20.0, 1324.0], [20.1, 1324.0], [20.2, 1324.0], [20.3, 1324.0], [20.4, 1324.0], [20.5, 1324.0], [20.6, 1324.0], [20.7, 1324.0], [20.8, 1324.0], [20.9, 1324.0], [21.0, 1347.0], [21.1, 1347.0], [21.2, 1347.0], [21.3, 1347.0], [21.4, 1347.0], [21.5, 1347.0], [21.6, 1347.0], [21.7, 1347.0], [21.8, 1347.0], [21.9, 1347.0], [22.0, 1379.0], [22.1, 1379.0], [22.2, 1379.0], [22.3, 1379.0], [22.4, 1379.0], [22.5, 1379.0], [22.6, 1379.0], [22.7, 1379.0], [22.8, 1379.0], [22.9, 1379.0], [23.0, 1455.0], [23.1, 1455.0], [23.2, 1455.0], [23.3, 1455.0], [23.4, 1455.0], [23.5, 1455.0], [23.6, 1455.0], [23.7, 1455.0], [23.8, 1455.0], [23.9, 1455.0], [24.0, 1495.0], [24.1, 1495.0], [24.2, 1495.0], [24.3, 1495.0], [24.4, 1495.0], [24.5, 1495.0], [24.6, 1495.0], [24.7, 1495.0], [24.8, 1495.0], [24.9, 1495.0], [25.0, 1525.0], [25.1, 1525.0], [25.2, 1525.0], [25.3, 1525.0], [25.4, 1525.0], [25.5, 1525.0], [25.6, 1525.0], [25.7, 1525.0], [25.8, 1525.0], [25.9, 1525.0], [26.0, 1548.0], [26.1, 1548.0], [26.2, 1548.0], [26.3, 1548.0], [26.4, 1548.0], [26.5, 1548.0], [26.6, 1548.0], [26.7, 1548.0], [26.8, 1548.0], [26.9, 1548.0], [27.0, 1558.0], [27.1, 1558.0], [27.2, 1558.0], [27.3, 1558.0], [27.4, 1558.0], [27.5, 1558.0], [27.6, 1558.0], [27.7, 1558.0], [27.8, 1558.0], [27.9, 1558.0], [28.0, 1615.0], [28.1, 1615.0], [28.2, 1615.0], [28.3, 1615.0], [28.4, 1615.0], [28.5, 1615.0], [28.6, 1615.0], [28.7, 1615.0], [28.8, 1615.0], [28.9, 1615.0], [29.0, 1615.0], [29.1, 1615.0], [29.2, 1615.0], [29.3, 1615.0], [29.4, 1615.0], [29.5, 1615.0], [29.6, 1615.0], [29.7, 1615.0], [29.8, 1615.0], [29.9, 1615.0], [30.0, 1627.0], [30.1, 1627.0], [30.2, 1627.0], [30.3, 1627.0], [30.4, 1627.0], [30.5, 1627.0], [30.6, 1627.0], [30.7, 1627.0], [30.8, 1627.0], [30.9, 1627.0], [31.0, 1629.0], [31.1, 1629.0], [31.2, 1629.0], [31.3, 1629.0], [31.4, 1629.0], [31.5, 1629.0], [31.6, 1629.0], [31.7, 1629.0], [31.8, 1629.0], [31.9, 1629.0], [32.0, 1631.0], [32.1, 1631.0], [32.2, 1631.0], [32.3, 1631.0], [32.4, 1631.0], [32.5, 1631.0], [32.6, 1631.0], [32.7, 1631.0], [32.8, 1631.0], [32.9, 1631.0], [33.0, 1634.0], [33.1, 1634.0], [33.2, 1634.0], [33.3, 1634.0], [33.4, 1634.0], [33.5, 1634.0], [33.6, 1634.0], [33.7, 1634.0], [33.8, 1634.0], [33.9, 1634.0], [34.0, 1634.0], [34.1, 1634.0], [34.2, 1634.0], [34.3, 1634.0], [34.4, 1634.0], [34.5, 1634.0], [34.6, 1634.0], [34.7, 1634.0], [34.8, 1634.0], [34.9, 1634.0], [35.0, 1637.0], [35.1, 1637.0], [35.2, 1637.0], [35.3, 1637.0], [35.4, 1637.0], [35.5, 1637.0], [35.6, 1637.0], [35.7, 1637.0], [35.8, 1637.0], [35.9, 1637.0], [36.0, 1637.0], [36.1, 1637.0], [36.2, 1637.0], [36.3, 1637.0], [36.4, 1637.0], [36.5, 1637.0], [36.6, 1637.0], [36.7, 1637.0], [36.8, 1637.0], [36.9, 1637.0], [37.0, 1638.0], [37.1, 1638.0], [37.2, 1638.0], [37.3, 1638.0], [37.4, 1638.0], [37.5, 1638.0], [37.6, 1638.0], [37.7, 1638.0], [37.8, 1638.0], [37.9, 1638.0], [38.0, 1638.0], [38.1, 1638.0], [38.2, 1638.0], [38.3, 1638.0], [38.4, 1638.0], [38.5, 1638.0], [38.6, 1638.0], [38.7, 1638.0], [38.8, 1638.0], [38.9, 1638.0], [39.0, 1645.0], [39.1, 1645.0], [39.2, 1645.0], [39.3, 1645.0], [39.4, 1645.0], [39.5, 1645.0], [39.6, 1645.0], [39.7, 1645.0], [39.8, 1645.0], [39.9, 1645.0], [40.0, 1645.0], [40.1, 1645.0], [40.2, 1645.0], [40.3, 1645.0], [40.4, 1645.0], [40.5, 1645.0], [40.6, 1645.0], [40.7, 1645.0], [40.8, 1645.0], [40.9, 1645.0], [41.0, 1692.0], [41.1, 1692.0], [41.2, 1692.0], [41.3, 1692.0], [41.4, 1692.0], [41.5, 1692.0], [41.6, 1692.0], [41.7, 1692.0], [41.8, 1692.0], [41.9, 1692.0], [42.0, 1728.0], [42.1, 1728.0], [42.2, 1728.0], [42.3, 1728.0], [42.4, 1728.0], [42.5, 1728.0], [42.6, 1728.0], [42.7, 1728.0], [42.8, 1728.0], [42.9, 1728.0], [43.0, 1743.0], [43.1, 1743.0], [43.2, 1743.0], [43.3, 1743.0], [43.4, 1743.0], [43.5, 1743.0], [43.6, 1743.0], [43.7, 1743.0], [43.8, 1743.0], [43.9, 1743.0], [44.0, 1765.0], [44.1, 1765.0], [44.2, 1765.0], [44.3, 1765.0], [44.4, 1765.0], [44.5, 1765.0], [44.6, 1765.0], [44.7, 1765.0], [44.8, 1765.0], [44.9, 1765.0], [45.0, 1786.0], [45.1, 1786.0], [45.2, 1786.0], [45.3, 1786.0], [45.4, 1786.0], [45.5, 1786.0], [45.6, 1786.0], [45.7, 1786.0], [45.8, 1786.0], [45.9, 1786.0], [46.0, 1804.0], [46.1, 1804.0], [46.2, 1804.0], [46.3, 1804.0], [46.4, 1804.0], [46.5, 1804.0], [46.6, 1804.0], [46.7, 1804.0], [46.8, 1804.0], [46.9, 1804.0], [47.0, 1806.0], [47.1, 1806.0], [47.2, 1806.0], [47.3, 1806.0], [47.4, 1806.0], [47.5, 1806.0], [47.6, 1806.0], [47.7, 1806.0], [47.8, 1806.0], [47.9, 1806.0], [48.0, 1807.0], [48.1, 1807.0], [48.2, 1807.0], [48.3, 1807.0], [48.4, 1807.0], [48.5, 1807.0], [48.6, 1807.0], [48.7, 1807.0], [48.8, 1807.0], [48.9, 1807.0], [49.0, 1811.0], [49.1, 1811.0], [49.2, 1811.0], [49.3, 1811.0], [49.4, 1811.0], [49.5, 1811.0], [49.6, 1811.0], [49.7, 1811.0], [49.8, 1811.0], [49.9, 1811.0], [50.0, 1831.0], [50.1, 1831.0], [50.2, 1831.0], [50.3, 1831.0], [50.4, 1831.0], [50.5, 1831.0], [50.6, 1831.0], [50.7, 1831.0], [50.8, 1831.0], [50.9, 1831.0], [51.0, 1836.0], [51.1, 1836.0], [51.2, 1836.0], [51.3, 1836.0], [51.4, 1836.0], [51.5, 1836.0], [51.6, 1836.0], [51.7, 1836.0], [51.8, 1836.0], [51.9, 1836.0], [52.0, 1838.0], [52.1, 1838.0], [52.2, 1838.0], [52.3, 1838.0], [52.4, 1838.0], [52.5, 1838.0], [52.6, 1838.0], [52.7, 1838.0], [52.8, 1838.0], [52.9, 1838.0], [53.0, 1849.0], [53.1, 1849.0], [53.2, 1849.0], [53.3, 1849.0], [53.4, 1849.0], [53.5, 1849.0], [53.6, 1849.0], [53.7, 1849.0], [53.8, 1849.0], [53.9, 1849.0], [54.0, 1859.0], [54.1, 1859.0], [54.2, 1859.0], [54.3, 1859.0], [54.4, 1859.0], [54.5, 1859.0], [54.6, 1859.0], [54.7, 1859.0], [54.8, 1859.0], [54.9, 1859.0], [55.0, 1860.0], [55.1, 1860.0], [55.2, 1860.0], [55.3, 1860.0], [55.4, 1860.0], [55.5, 1860.0], [55.6, 1860.0], [55.7, 1860.0], [55.8, 1860.0], [55.9, 1860.0], [56.0, 1863.0], [56.1, 1863.0], [56.2, 1863.0], [56.3, 1863.0], [56.4, 1863.0], [56.5, 1863.0], [56.6, 1863.0], [56.7, 1863.0], [56.8, 1863.0], [56.9, 1863.0], [57.0, 1863.0], [57.1, 1863.0], [57.2, 1863.0], [57.3, 1863.0], [57.4, 1863.0], [57.5, 1863.0], [57.6, 1863.0], [57.7, 1863.0], [57.8, 1863.0], [57.9, 1863.0], [58.0, 1864.0], [58.1, 1864.0], [58.2, 1864.0], [58.3, 1864.0], [58.4, 1864.0], [58.5, 1864.0], [58.6, 1864.0], [58.7, 1864.0], [58.8, 1864.0], [58.9, 1864.0], [59.0, 1864.0], [59.1, 1864.0], [59.2, 1864.0], [59.3, 1864.0], [59.4, 1864.0], [59.5, 1864.0], [59.6, 1864.0], [59.7, 1864.0], [59.8, 1864.0], [59.9, 1864.0], [60.0, 1886.0], [60.1, 1886.0], [60.2, 1886.0], [60.3, 1886.0], [60.4, 1886.0], [60.5, 1886.0], [60.6, 1886.0], [60.7, 1886.0], [60.8, 1886.0], [60.9, 1886.0], [61.0, 1892.0], [61.1, 1892.0], [61.2, 1892.0], [61.3, 1892.0], [61.4, 1892.0], [61.5, 1892.0], [61.6, 1892.0], [61.7, 1892.0], [61.8, 1892.0], [61.9, 1892.0], [62.0, 1900.0], [62.1, 1900.0], [62.2, 1900.0], [62.3, 1900.0], [62.4, 1900.0], [62.5, 1900.0], [62.6, 1900.0], [62.7, 1900.0], [62.8, 1900.0], [62.9, 1900.0], [63.0, 1904.0], [63.1, 1904.0], [63.2, 1904.0], [63.3, 1904.0], [63.4, 1904.0], [63.5, 1904.0], [63.6, 1904.0], [63.7, 1904.0], [63.8, 1904.0], [63.9, 1904.0], [64.0, 1910.0], [64.1, 1910.0], [64.2, 1910.0], [64.3, 1910.0], [64.4, 1910.0], [64.5, 1910.0], [64.6, 1910.0], [64.7, 1910.0], [64.8, 1910.0], [64.9, 1910.0], [65.0, 1915.0], [65.1, 1915.0], [65.2, 1915.0], [65.3, 1915.0], [65.4, 1915.0], [65.5, 1915.0], [65.6, 1915.0], [65.7, 1915.0], [65.8, 1915.0], [65.9, 1915.0], [66.0, 1980.0], [66.1, 1980.0], [66.2, 1980.0], [66.3, 1980.0], [66.4, 1980.0], [66.5, 1980.0], [66.6, 1980.0], [66.7, 1980.0], [66.8, 1980.0], [66.9, 1980.0], [67.0, 2053.0], [67.1, 2053.0], [67.2, 2053.0], [67.3, 2053.0], [67.4, 2053.0], [67.5, 2053.0], [67.6, 2053.0], [67.7, 2053.0], [67.8, 2053.0], [67.9, 2053.0], [68.0, 2076.0], [68.1, 2076.0], [68.2, 2076.0], [68.3, 2076.0], [68.4, 2076.0], [68.5, 2076.0], [68.6, 2076.0], [68.7, 2076.0], [68.8, 2076.0], [68.9, 2076.0], [69.0, 2076.0], [69.1, 2076.0], [69.2, 2076.0], [69.3, 2076.0], [69.4, 2076.0], [69.5, 2076.0], [69.6, 2076.0], [69.7, 2076.0], [69.8, 2076.0], [69.9, 2076.0], [70.0, 2098.0], [70.1, 2098.0], [70.2, 2098.0], [70.3, 2098.0], [70.4, 2098.0], [70.5, 2098.0], [70.6, 2098.0], [70.7, 2098.0], [70.8, 2098.0], [70.9, 2098.0], [71.0, 2100.0], [71.1, 2100.0], [71.2, 2100.0], [71.3, 2100.0], [71.4, 2100.0], [71.5, 2100.0], [71.6, 2100.0], [71.7, 2100.0], [71.8, 2100.0], [71.9, 2100.0], [72.0, 2122.0], [72.1, 2122.0], [72.2, 2122.0], [72.3, 2122.0], [72.4, 2122.0], [72.5, 2122.0], [72.6, 2122.0], [72.7, 2122.0], [72.8, 2122.0], [72.9, 2122.0], [73.0, 2136.0], [73.1, 2136.0], [73.2, 2136.0], [73.3, 2136.0], [73.4, 2136.0], [73.5, 2136.0], [73.6, 2136.0], [73.7, 2136.0], [73.8, 2136.0], [73.9, 2136.0], [74.0, 2142.0], [74.1, 2142.0], [74.2, 2142.0], [74.3, 2142.0], [74.4, 2142.0], [74.5, 2142.0], [74.6, 2142.0], [74.7, 2142.0], [74.8, 2142.0], [74.9, 2142.0], [75.0, 2147.0], [75.1, 2147.0], [75.2, 2147.0], [75.3, 2147.0], [75.4, 2147.0], [75.5, 2147.0], [75.6, 2147.0], [75.7, 2147.0], [75.8, 2147.0], [75.9, 2147.0], [76.0, 2149.0], [76.1, 2149.0], [76.2, 2149.0], [76.3, 2149.0], [76.4, 2149.0], [76.5, 2149.0], [76.6, 2149.0], [76.7, 2149.0], [76.8, 2149.0], [76.9, 2149.0], [77.0, 2237.0], [77.1, 2237.0], [77.2, 2237.0], [77.3, 2237.0], [77.4, 2237.0], [77.5, 2237.0], [77.6, 2237.0], [77.7, 2237.0], [77.8, 2237.0], [77.9, 2237.0], [78.0, 2286.0], [78.1, 2286.0], [78.2, 2286.0], [78.3, 2286.0], [78.4, 2286.0], [78.5, 2286.0], [78.6, 2286.0], [78.7, 2286.0], [78.8, 2286.0], [78.9, 2286.0], [79.0, 2301.0], [79.1, 2301.0], [79.2, 2301.0], [79.3, 2301.0], [79.4, 2301.0], [79.5, 2301.0], [79.6, 2301.0], [79.7, 2301.0], [79.8, 2301.0], [79.9, 2301.0], [80.0, 2369.0], [80.1, 2369.0], [80.2, 2369.0], [80.3, 2369.0], [80.4, 2369.0], [80.5, 2369.0], [80.6, 2369.0], [80.7, 2369.0], [80.8, 2369.0], [80.9, 2369.0], [81.0, 2391.0], [81.1, 2391.0], [81.2, 2391.0], [81.3, 2391.0], [81.4, 2391.0], [81.5, 2391.0], [81.6, 2391.0], [81.7, 2391.0], [81.8, 2391.0], [81.9, 2391.0], [82.0, 2421.0], [82.1, 2421.0], [82.2, 2421.0], [82.3, 2421.0], [82.4, 2421.0], [82.5, 2421.0], [82.6, 2421.0], [82.7, 2421.0], [82.8, 2421.0], [82.9, 2421.0], [83.0, 2424.0], [83.1, 2424.0], [83.2, 2424.0], [83.3, 2424.0], [83.4, 2424.0], [83.5, 2424.0], [83.6, 2424.0], [83.7, 2424.0], [83.8, 2424.0], [83.9, 2424.0], [84.0, 2428.0], [84.1, 2428.0], [84.2, 2428.0], [84.3, 2428.0], [84.4, 2428.0], [84.5, 2428.0], [84.6, 2428.0], [84.7, 2428.0], [84.8, 2428.0], [84.9, 2428.0], [85.0, 2428.0], [85.1, 2428.0], [85.2, 2428.0], [85.3, 2428.0], [85.4, 2428.0], [85.5, 2428.0], [85.6, 2428.0], [85.7, 2428.0], [85.8, 2428.0], [85.9, 2428.0], [86.0, 2428.0], [86.1, 2428.0], [86.2, 2428.0], [86.3, 2428.0], [86.4, 2428.0], [86.5, 2428.0], [86.6, 2428.0], [86.7, 2428.0], [86.8, 2428.0], [86.9, 2428.0], [87.0, 2429.0], [87.1, 2429.0], [87.2, 2429.0], [87.3, 2429.0], [87.4, 2429.0], [87.5, 2429.0], [87.6, 2429.0], [87.7, 2429.0], [87.8, 2429.0], [87.9, 2429.0], [88.0, 2431.0], [88.1, 2431.0], [88.2, 2431.0], [88.3, 2431.0], [88.4, 2431.0], [88.5, 2431.0], [88.6, 2431.0], [88.7, 2431.0], [88.8, 2431.0], [88.9, 2431.0], [89.0, 2433.0], [89.1, 2433.0], [89.2, 2433.0], [89.3, 2433.0], [89.4, 2433.0], [89.5, 2433.0], [89.6, 2433.0], [89.7, 2433.0], [89.8, 2433.0], [89.9, 2433.0], [90.0, 2435.0], [90.1, 2435.0], [90.2, 2435.0], [90.3, 2435.0], [90.4, 2435.0], [90.5, 2435.0], [90.6, 2435.0], [90.7, 2435.0], [90.8, 2435.0], [90.9, 2435.0], [91.0, 2438.0], [91.1, 2438.0], [91.2, 2438.0], [91.3, 2438.0], [91.4, 2438.0], [91.5, 2438.0], [91.6, 2438.0], [91.7, 2438.0], [91.8, 2438.0], [91.9, 2438.0], [92.0, 2465.0], [92.1, 2465.0], [92.2, 2465.0], [92.3, 2465.0], [92.4, 2465.0], [92.5, 2465.0], [92.6, 2465.0], [92.7, 2465.0], [92.8, 2465.0], [92.9, 2465.0], [93.0, 2494.0], [93.1, 2494.0], [93.2, 2494.0], [93.3, 2494.0], [93.4, 2494.0], [93.5, 2494.0], [93.6, 2494.0], [93.7, 2494.0], [93.8, 2494.0], [93.9, 2494.0], [94.0, 2564.0], [94.1, 2564.0], [94.2, 2564.0], [94.3, 2564.0], [94.4, 2564.0], [94.5, 2564.0], [94.6, 2564.0], [94.7, 2564.0], [94.8, 2564.0], [94.9, 2564.0], [95.0, 2587.0], [95.1, 2587.0], [95.2, 2587.0], [95.3, 2587.0], [95.4, 2587.0], [95.5, 2587.0], [95.6, 2587.0], [95.7, 2587.0], [95.8, 2587.0], [95.9, 2587.0], [96.0, 2616.0], [96.1, 2616.0], [96.2, 2616.0], [96.3, 2616.0], [96.4, 2616.0], [96.5, 2616.0], [96.6, 2616.0], [96.7, 2616.0], [96.8, 2616.0], [96.9, 2616.0], [97.0, 2632.0], [97.1, 2632.0], [97.2, 2632.0], [97.3, 2632.0], [97.4, 2632.0], [97.5, 2632.0], [97.6, 2632.0], [97.7, 2632.0], [97.8, 2632.0], [97.9, 2632.0], [98.0, 2864.0], [98.1, 2864.0], [98.2, 2864.0], [98.3, 2864.0], [98.4, 2864.0], [98.5, 2864.0], [98.6, 2864.0], [98.7, 2864.0], [98.8, 2864.0], [98.9, 2864.0], [99.0, 2872.0], [99.1, 2872.0], [99.2, 2872.0], [99.3, 2872.0], [99.4, 2872.0], [99.5, 2872.0], [99.6, 2872.0], [99.7, 2872.0], [99.8, 2872.0], [99.9, 2872.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 74.0, "series": [{"data": [[2500.0, 13.0], [1500.0, 1.0], [3000.0, 23.0], [3500.0, 30.0], [1000.0, 15.0], [4000.0, 18.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 74.0], [1000.0, 26.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[0.0, 66.0], [3000.0, 1.0], [1000.0, 33.0]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[2500.0, 6.0], [1500.0, 42.0], [500.0, 16.0], [2000.0, 27.0], [1000.0, 9.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 500, "maxX": 4000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 99.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 161.0, "series": [{"data": [[1.0, 99.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[0.0, 140.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 161.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 76.25750000000002, "minX": 1.60807368E12, "maxY": 76.25750000000002, "series": [{"data": [[1.60807368E12, 76.25750000000002]], "isOverall": false, "label": "Slypee", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60807368E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 265.0, "minX": 1.0, "maxY": 3628.619047619048, "series": [{"data": [[85.0, 3628.619047619048], [100.0, 1215.3749999999998]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[87.39999999999998, 3242.5]], "isOverall": false, "label": "HomePage-Aggregated", "isController": false}, {"data": [[2.0, 1042.0], [3.0, 1083.0], [4.0, 1047.0], [5.0, 1048.0], [6.0, 1043.0], [7.0, 1056.0], [8.0, 1053.0], [9.0, 1039.0], [10.0, 267.0], [11.0, 1035.0], [12.0, 265.0], [13.0, 1043.0], [14.0, 1078.0], [15.0, 267.0], [16.0, 266.0], [17.0, 268.0], [18.0, 1065.0], [19.0, 1053.0], [20.0, 1065.0], [21.0, 1034.0], [22.0, 279.0], [23.0, 1384.0], [24.0, 1374.0], [25.0, 270.0], [26.0, 267.0], [27.0, 265.0], [28.0, 265.0], [29.0, 265.0], [30.0, 294.0], [31.0, 276.0], [33.0, 287.0], [32.0, 268.0], [35.0, 273.0], [34.0, 275.0], [37.0, 268.0], [36.0, 268.0], [39.0, 266.0], [38.0, 267.0], [41.0, 281.0], [40.0, 267.0], [43.0, 292.0], [42.0, 271.0], [45.0, 274.0], [44.0, 287.0], [47.0, 292.0], [46.0, 274.0], [49.0, 270.0], [48.0, 284.0], [51.0, 278.0], [50.0, 283.0], [53.0, 267.0], [52.0, 279.0], [55.0, 271.0], [54.0, 275.0], [57.0, 274.0], [56.0, 278.0], [59.0, 1087.0], [58.0, 268.0], [61.0, 1067.0], [60.0, 1083.0], [63.0, 271.0], [62.0, 268.0], [67.0, 1062.0], [66.0, 269.0], [65.0, 1069.0], [64.0, 1060.0], [71.0, 305.0], [70.0, 270.0], [69.0, 277.0], [68.0, 1062.0], [75.0, 280.0], [74.0, 287.0], [73.0, 290.0], [72.0, 305.0], [79.0, 282.0], [78.0, 293.0], [77.0, 273.0], [76.0, 284.0], [83.0, 285.0], [82.0, 278.0], [81.0, 267.0], [80.0, 291.0], [87.0, 296.0], [85.0, 1313.0], [84.0, 268.0], [91.0, 288.0], [90.0, 295.0], [89.0, 285.0], [88.0, 288.5], [95.0, 290.0], [94.0, 282.0], [93.0, 288.0], [92.0, 296.0], [99.0, 274.0], [98.0, 286.0], [97.0, 286.0], [96.0, 285.0], [100.0, 278.0], [1.0, 1034.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[50.519999999999996, 489.79]], "isOverall": false, "label": "Detail Category Page-Aggregated", "isController": false}, {"data": [[40.0, 279.0], [48.0, 1117.5], [52.0, 267.0], [55.0, 281.0], [59.0, 1073.0], [70.0, 272.875], [69.0, 278.0], [68.0, 533.0], [75.0, 1198.0], [83.0, 1249.666666666667], [85.0, 480.31707317073165], [84.0, 1097.3636363636363], [21.0, 1202.0], [22.0, 1262.0], [23.0, 1152.0], [100.0, 285.5333333333333]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[79.75, 627.6699999999998]], "isOverall": false, "label": "Category Page-Aggregated", "isController": false}, {"data": [[83.0, 1379.0], [85.0, 1974.2839506172832], [84.0, 1322.0], [100.0, 542.9375]], "isOverall": false, "label": "Detail Game Page", "isController": false}, {"data": [[87.35999999999997, 1726.2699999999993]], "isOverall": false, "label": "Detail Game Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1131.6666666666667, "minX": 1.60807368E12, "maxY": 377595.0, "series": [{"data": [[1.60807368E12, 377595.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.60807368E12, 1131.6666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60807368E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 489.79, "minX": 1.60807368E12, "maxY": 3242.5, "series": [{"data": [[1.60807368E12, 3242.5]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60807368E12, 489.79]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60807368E12, 627.6699999999998]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60807368E12, 1726.2699999999993]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60807368E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 353.47000000000014, "minX": 1.60807368E12, "maxY": 2726.1899999999996, "series": [{"data": [[1.60807368E12, 2726.1899999999996]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60807368E12, 353.47000000000014]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60807368E12, 449.42000000000013]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60807368E12, 1246.8799999999997]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60807368E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 67.42999999999999, "minX": 1.60807368E12, "maxY": 286.92999999999995, "series": [{"data": [[1.60807368E12, 286.92999999999995]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60807368E12, 67.42999999999999]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60807368E12, 88.35999999999999]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60807368E12, 219.04999999999995]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60807368E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 265.0, "minX": 1.60807368E12, "maxY": 4480.0, "series": [{"data": [[1.60807368E12, 4480.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.60807368E12, 265.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.60807368E12, 3804.3000000000006]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.60807368E12, 4433.85]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.60807368E12, 3983.85]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60807368E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1198.0, "minX": 6.0, "maxY": 1198.0, "series": [{"data": [[6.0, 1198.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 6.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 693.0, "minX": 6.0, "maxY": 693.0, "series": [{"data": [[6.0, 693.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 6.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.60807368E12, "maxY": 6.666666666666667, "series": [{"data": [[1.60807368E12, 6.666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60807368E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.60807368E12, "maxY": 6.666666666666667, "series": [{"data": [[1.60807368E12, 6.666666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60807368E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.60807368E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.60807368E12, 1.6666666666666667]], "isOverall": false, "label": "Category Page-success", "isController": false}, {"data": [[1.60807368E12, 1.6666666666666667]], "isOverall": false, "label": "Detail Category Page-success", "isController": false}, {"data": [[1.60807368E12, 1.6666666666666667]], "isOverall": false, "label": "Detail Game Page-success", "isController": false}, {"data": [[1.60807368E12, 1.6666666666666667]], "isOverall": false, "label": "HomePage-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60807368E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
