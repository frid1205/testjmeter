/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? 0 : 0;
        var yOffset = options.yaxis.mode === "time" ? 0 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 264.0, "minX": 0.0, "maxY": 16516.0, "series": [{"data": [[0.0, 1069.0], [0.1, 1069.0], [0.2, 1069.0], [0.3, 1100.0], [0.4, 1100.0], [0.5, 1111.0], [0.6, 1111.0], [0.7, 1111.0], [0.8, 1123.0], [0.9, 1123.0], [1.0, 1136.0], [1.1, 1136.0], [1.2, 1136.0], [1.3, 1145.0], [1.4, 1145.0], [1.5, 1170.0], [1.6, 1170.0], [1.7, 1170.0], [1.8, 1172.0], [1.9, 1172.0], [2.0, 1276.0], [2.1, 1276.0], [2.2, 1276.0], [2.3, 1293.0], [2.4, 1293.0], [2.5, 1313.0], [2.6, 1313.0], [2.7, 1313.0], [2.8, 1353.0], [2.9, 1353.0], [3.0, 1398.0], [3.1, 1398.0], [3.2, 1398.0], [3.3, 1400.0], [3.4, 1400.0], [3.5, 1401.0], [3.6, 1401.0], [3.7, 1401.0], [3.8, 1601.0], [3.9, 1601.0], [4.0, 2537.0], [4.1, 2537.0], [4.2, 2537.0], [4.3, 2615.0], [4.4, 2615.0], [4.5, 2861.0], [4.6, 2861.0], [4.7, 2861.0], [4.8, 2869.0], [4.9, 2869.0], [5.0, 2951.0], [5.1, 2951.0], [5.2, 2951.0], [5.3, 2968.0], [5.4, 2968.0], [5.5, 2977.0], [5.6, 2977.0], [5.7, 2977.0], [5.8, 2990.0], [5.9, 2990.0], [6.0, 3017.0], [6.1, 3017.0], [6.2, 3017.0], [6.3, 3019.0], [6.4, 3019.0], [6.5, 3020.0], [6.6, 3020.0], [6.7, 3020.0], [6.8, 3029.0], [6.9, 3029.0], [7.0, 3038.0], [7.1, 3038.0], [7.2, 3038.0], [7.3, 3041.0], [7.4, 3041.0], [7.5, 3043.0], [7.6, 3043.0], [7.7, 3043.0], [7.8, 3046.0], [7.9, 3046.0], [8.0, 3048.0], [8.1, 3048.0], [8.2, 3048.0], [8.3, 3257.0], [8.4, 3257.0], [8.5, 3276.0], [8.6, 3276.0], [8.7, 3276.0], [8.8, 3394.0], [8.9, 3394.0], [9.0, 3557.0], [9.1, 3557.0], [9.2, 3557.0], [9.3, 3619.0], [9.4, 3619.0], [9.5, 3620.0], [9.6, 3620.0], [9.7, 3620.0], [9.8, 3623.0], [9.9, 3623.0], [10.0, 3695.0], [10.1, 3695.0], [10.2, 3695.0], [10.3, 3705.0], [10.4, 3705.0], [10.5, 3759.0], [10.6, 3759.0], [10.7, 3759.0], [10.8, 3786.0], [10.9, 3786.0], [11.0, 3799.0], [11.1, 3799.0], [11.2, 3799.0], [11.3, 3799.0], [11.4, 3799.0], [11.5, 3809.0], [11.6, 3809.0], [11.7, 3809.0], [11.8, 3811.0], [11.9, 3811.0], [12.0, 3812.0], [12.1, 3812.0], [12.2, 3812.0], [12.3, 3819.0], [12.4, 3819.0], [12.5, 3825.0], [12.6, 3825.0], [12.7, 3825.0], [12.8, 3835.0], [12.9, 3835.0], [13.0, 3836.0], [13.1, 3836.0], [13.2, 3836.0], [13.3, 3839.0], [13.4, 3839.0], [13.5, 3842.0], [13.6, 3842.0], [13.7, 3842.0], [13.8, 4094.0], [13.9, 4094.0], [14.0, 4152.0], [14.1, 4152.0], [14.2, 4152.0], [14.3, 4184.0], [14.4, 4184.0], [14.5, 4317.0], [14.6, 4317.0], [14.7, 4317.0], [14.8, 4319.0], [14.9, 4319.0], [15.0, 4333.0], [15.1, 4333.0], [15.2, 4333.0], [15.3, 4338.0], [15.4, 4338.0], [15.5, 4339.0], [15.6, 4339.0], [15.7, 4339.0], [15.8, 4343.0], [15.9, 4343.0], [16.0, 4346.0], [16.1, 4346.0], [16.2, 4346.0], [16.3, 4351.0], [16.4, 4351.0], [16.5, 4351.0], [16.6, 4351.0], [16.7, 4351.0], [16.8, 4351.0], [16.9, 4351.0], [17.0, 4353.0], [17.1, 4353.0], [17.2, 4353.0], [17.3, 4354.0], [17.4, 4354.0], [17.5, 4354.0], [17.6, 4354.0], [17.7, 4354.0], [17.8, 4357.0], [17.9, 4357.0], [18.0, 4359.0], [18.1, 4359.0], [18.2, 4359.0], [18.3, 4361.0], [18.4, 4361.0], [18.5, 4361.0], [18.6, 4361.0], [18.7, 4361.0], [18.8, 4361.0], [18.9, 4361.0], [19.0, 4364.0], [19.1, 4364.0], [19.2, 4364.0], [19.3, 4390.0], [19.4, 4390.0], [19.5, 4392.0], [19.6, 4392.0], [19.7, 4392.0], [19.8, 4398.0], [19.9, 4398.0], [20.0, 4405.0], [20.1, 4405.0], [20.2, 4405.0], [20.3, 4408.0], [20.4, 4408.0], [20.5, 4485.0], [20.6, 4485.0], [20.7, 4485.0], [20.8, 4540.0], [20.9, 4540.0], [21.0, 4544.0], [21.1, 4544.0], [21.2, 4544.0], [21.3, 4581.0], [21.4, 4581.0], [21.5, 4614.0], [21.6, 4614.0], [21.7, 4614.0], [21.8, 4616.0], [21.9, 4616.0], [22.0, 4663.0], [22.1, 4663.0], [22.2, 4663.0], [22.3, 4672.0], [22.4, 4672.0], [22.5, 4680.0], [22.6, 4680.0], [22.7, 4680.0], [22.8, 4681.0], [22.9, 4681.0], [23.0, 4685.0], [23.1, 4685.0], [23.2, 4685.0], [23.3, 4694.0], [23.4, 4694.0], [23.5, 4695.0], [23.6, 4695.0], [23.7, 4695.0], [23.8, 4696.0], [23.9, 4696.0], [24.0, 4697.0], [24.1, 4697.0], [24.2, 4697.0], [24.3, 4701.0], [24.4, 4701.0], [24.5, 4710.0], [24.6, 4710.0], [24.7, 4710.0], [24.8, 4823.0], [24.9, 4823.0], [25.0, 4824.0], [25.1, 4824.0], [25.2, 4824.0], [25.3, 4833.0], [25.4, 4833.0], [25.5, 4841.0], [25.6, 4841.0], [25.7, 4841.0], [25.8, 4889.0], [25.9, 4889.0], [26.0, 4966.0], [26.1, 4966.0], [26.2, 4966.0], [26.3, 4979.0], [26.4, 4979.0], [26.5, 4981.0], [26.6, 4981.0], [26.7, 4981.0], [26.8, 4983.0], [26.9, 4983.0], [27.0, 4986.0], [27.1, 4986.0], [27.2, 4986.0], [27.3, 4990.0], [27.4, 4990.0], [27.5, 4992.0], [27.6, 4992.0], [27.7, 4992.0], [27.8, 4993.0], [27.9, 4993.0], [28.0, 4996.0], [28.1, 4996.0], [28.2, 4996.0], [28.3, 4997.0], [28.4, 4997.0], [28.5, 4998.0], [28.6, 4998.0], [28.7, 4998.0], [28.8, 4998.0], [28.9, 4998.0], [29.0, 5001.0], [29.1, 5001.0], [29.2, 5001.0], [29.3, 5003.0], [29.4, 5003.0], [29.5, 5003.0], [29.6, 5003.0], [29.7, 5003.0], [29.8, 5012.0], [29.9, 5012.0], [30.0, 5015.0], [30.1, 5015.0], [30.2, 5015.0], [30.3, 5019.0], [30.4, 5019.0], [30.5, 5022.0], [30.6, 5022.0], [30.7, 5022.0], [30.8, 5032.0], [30.9, 5032.0], [31.0, 5033.0], [31.1, 5033.0], [31.2, 5033.0], [31.3, 5048.0], [31.4, 5048.0], [31.5, 5048.0], [31.6, 5048.0], [31.7, 5048.0], [31.8, 5067.0], [31.9, 5067.0], [32.0, 5068.0], [32.1, 5068.0], [32.2, 5068.0], [32.3, 5069.0], [32.4, 5069.0], [32.5, 5074.0], [32.6, 5074.0], [32.7, 5074.0], [32.8, 5081.0], [32.9, 5081.0], [33.0, 5087.0], [33.1, 5087.0], [33.2, 5087.0], [33.3, 5094.0], [33.4, 5094.0], [33.5, 5095.0], [33.6, 5095.0], [33.7, 5095.0], [33.8, 5113.0], [33.9, 5113.0], [34.0, 5115.0], [34.1, 5115.0], [34.2, 5115.0], [34.3, 5118.0], [34.4, 5118.0], [34.5, 5132.0], [34.6, 5132.0], [34.7, 5132.0], [34.8, 5139.0], [34.9, 5139.0], [35.0, 5165.0], [35.1, 5165.0], [35.2, 5165.0], [35.3, 5169.0], [35.4, 5169.0], [35.5, 5172.0], [35.6, 5172.0], [35.7, 5172.0], [35.8, 5184.0], [35.9, 5184.0], [36.0, 5188.0], [36.1, 5188.0], [36.2, 5188.0], [36.3, 5188.0], [36.4, 5188.0], [36.5, 5191.0], [36.6, 5191.0], [36.7, 5191.0], [36.8, 5203.0], [36.9, 5203.0], [37.0, 5203.0], [37.1, 5203.0], [37.2, 5203.0], [37.3, 5209.0], [37.4, 5209.0], [37.5, 5217.0], [37.6, 5217.0], [37.7, 5217.0], [37.8, 5221.0], [37.9, 5221.0], [38.0, 5229.0], [38.1, 5229.0], [38.2, 5229.0], [38.3, 5229.0], [38.4, 5229.0], [38.5, 5230.0], [38.6, 5230.0], [38.7, 5230.0], [38.8, 5230.0], [38.9, 5230.0], [39.0, 5239.0], [39.1, 5239.0], [39.2, 5239.0], [39.3, 5239.0], [39.4, 5239.0], [39.5, 5248.0], [39.6, 5248.0], [39.7, 5248.0], [39.8, 5256.0], [39.9, 5256.0], [40.0, 5322.0], [40.1, 5322.0], [40.2, 5322.0], [40.3, 5328.0], [40.4, 5328.0], [40.5, 5334.0], [40.6, 5334.0], [40.7, 5334.0], [40.8, 5334.0], [40.9, 5334.0], [41.0, 5341.0], [41.1, 5341.0], [41.2, 5341.0], [41.3, 5342.0], [41.4, 5342.0], [41.5, 5389.0], [41.6, 5389.0], [41.7, 5389.0], [41.8, 5405.0], [41.9, 5405.0], [42.0, 5408.0], [42.1, 5408.0], [42.2, 5408.0], [42.3, 5424.0], [42.4, 5424.0], [42.5, 5447.0], [42.6, 5447.0], [42.7, 5447.0], [42.8, 5467.0], [42.9, 5467.0], [43.0, 5472.0], [43.1, 5472.0], [43.2, 5472.0], [43.3, 5480.0], [43.4, 5480.0], [43.5, 5483.0], [43.6, 5483.0], [43.7, 5483.0], [43.8, 5508.0], [43.9, 5508.0], [44.0, 5520.0], [44.1, 5520.0], [44.2, 5520.0], [44.3, 5534.0], [44.4, 5534.0], [44.5, 5541.0], [44.6, 5541.0], [44.7, 5541.0], [44.8, 5544.0], [44.9, 5544.0], [45.0, 5547.0], [45.1, 5547.0], [45.2, 5547.0], [45.3, 5549.0], [45.4, 5549.0], [45.5, 5559.0], [45.6, 5559.0], [45.7, 5559.0], [45.8, 5563.0], [45.9, 5563.0], [46.0, 5567.0], [46.1, 5567.0], [46.2, 5567.0], [46.3, 5573.0], [46.4, 5573.0], [46.5, 5578.0], [46.6, 5578.0], [46.7, 5578.0], [46.8, 5580.0], [46.9, 5580.0], [47.0, 5580.0], [47.1, 5580.0], [47.2, 5580.0], [47.3, 5589.0], [47.4, 5589.0], [47.5, 5600.0], [47.6, 5600.0], [47.7, 5600.0], [47.8, 5621.0], [47.9, 5621.0], [48.0, 5633.0], [48.1, 5633.0], [48.2, 5633.0], [48.3, 5643.0], [48.4, 5643.0], [48.5, 5652.0], [48.6, 5652.0], [48.7, 5652.0], [48.8, 5665.0], [48.9, 5665.0], [49.0, 5669.0], [49.1, 5669.0], [49.2, 5669.0], [49.3, 5674.0], [49.4, 5674.0], [49.5, 5682.0], [49.6, 5682.0], [49.7, 5682.0], [49.8, 5683.0], [49.9, 5683.0], [50.0, 5704.0], [50.1, 5704.0], [50.2, 5704.0], [50.3, 5706.0], [50.4, 5706.0], [50.5, 5718.0], [50.6, 5718.0], [50.7, 5718.0], [50.8, 5744.0], [50.9, 5744.0], [51.0, 5747.0], [51.1, 5747.0], [51.2, 5747.0], [51.3, 5751.0], [51.4, 5751.0], [51.5, 5765.0], [51.6, 5765.0], [51.7, 5765.0], [51.8, 5782.0], [51.9, 5782.0], [52.0, 5860.0], [52.1, 5860.0], [52.2, 5860.0], [52.3, 5913.0], [52.4, 5913.0], [52.5, 5923.0], [52.6, 5923.0], [52.7, 5923.0], [52.8, 5972.0], [52.9, 5972.0], [53.0, 6013.0], [53.1, 6013.0], [53.2, 6013.0], [53.3, 6027.0], [53.4, 6027.0], [53.5, 6042.0], [53.6, 6042.0], [53.7, 6042.0], [53.8, 6042.0], [53.9, 6042.0], [54.0, 6075.0], [54.1, 6075.0], [54.2, 6075.0], [54.3, 6099.0], [54.4, 6099.0], [54.5, 6101.0], [54.6, 6101.0], [54.7, 6101.0], [54.8, 6107.0], [54.9, 6107.0], [55.0, 6109.0], [55.1, 6109.0], [55.2, 6109.0], [55.3, 6111.0], [55.4, 6111.0], [55.5, 6113.0], [55.6, 6113.0], [55.7, 6113.0], [55.8, 6127.0], [55.9, 6127.0], [56.0, 6128.0], [56.1, 6128.0], [56.2, 6128.0], [56.3, 6131.0], [56.4, 6131.0], [56.5, 6132.0], [56.6, 6132.0], [56.7, 6132.0], [56.8, 6137.0], [56.9, 6137.0], [57.0, 6142.0], [57.1, 6142.0], [57.2, 6142.0], [57.3, 6143.0], [57.4, 6143.0], [57.5, 6148.0], [57.6, 6148.0], [57.7, 6148.0], [57.8, 6150.0], [57.9, 6150.0], [58.0, 6152.0], [58.1, 6152.0], [58.2, 6152.0], [58.3, 6153.0], [58.4, 6153.0], [58.5, 6153.0], [58.6, 6153.0], [58.7, 6153.0], [58.8, 6154.0], [58.9, 6154.0], [59.0, 6156.0], [59.1, 6156.0], [59.2, 6156.0], [59.3, 6166.0], [59.4, 6166.0], [59.5, 6166.0], [59.6, 6166.0], [59.7, 6166.0], [59.8, 6172.0], [59.9, 6172.0], [60.0, 6446.0], [60.1, 6446.0], [60.2, 6446.0], [60.3, 6502.0], [60.4, 6502.0], [60.5, 6538.0], [60.6, 6538.0], [60.7, 6538.0], [60.8, 6540.0], [60.9, 6540.0], [61.0, 6543.0], [61.1, 6543.0], [61.2, 6543.0], [61.3, 6606.0], [61.4, 6606.0], [61.5, 6647.0], [61.6, 6647.0], [61.7, 6647.0], [61.8, 6656.0], [61.9, 6656.0], [62.0, 6672.0], [62.1, 6672.0], [62.2, 6672.0], [62.3, 6680.0], [62.4, 6680.0], [62.5, 6681.0], [62.6, 6681.0], [62.7, 6681.0], [62.8, 6698.0], [62.9, 6698.0], [63.0, 6701.0], [63.1, 6701.0], [63.2, 6701.0], [63.3, 6708.0], [63.4, 6708.0], [63.5, 6708.0], [63.6, 6708.0], [63.7, 6708.0], [63.8, 6717.0], [63.9, 6717.0], [64.0, 6741.0], [64.1, 6741.0], [64.2, 6741.0], [64.3, 6744.0], [64.4, 6744.0], [64.5, 6751.0], [64.6, 6751.0], [64.7, 6751.0], [64.8, 6751.0], [64.9, 6751.0], [65.0, 6892.0], [65.1, 6892.0], [65.2, 6892.0], [65.3, 6901.0], [65.4, 6901.0], [65.5, 6906.0], [65.6, 6906.0], [65.7, 6906.0], [65.8, 7916.0], [65.9, 7916.0], [66.0, 7927.0], [66.1, 7927.0], [66.2, 7927.0], [66.3, 7941.0], [66.4, 7941.0], [66.5, 7941.0], [66.6, 7941.0], [66.7, 7941.0], [66.8, 7960.0], [66.9, 7960.0], [67.0, 7965.0], [67.1, 7965.0], [67.2, 7965.0], [67.3, 7985.0], [67.4, 7985.0], [67.5, 7986.0], [67.6, 7986.0], [67.7, 7986.0], [67.8, 7999.0], [67.9, 7999.0], [68.0, 8001.0], [68.1, 8001.0], [68.2, 8001.0], [68.3, 8014.0], [68.4, 8014.0], [68.5, 8028.0], [68.6, 8028.0], [68.7, 8028.0], [68.8, 8075.0], [68.9, 8075.0], [69.0, 8103.0], [69.1, 8103.0], [69.2, 8103.0], [69.3, 8110.0], [69.4, 8110.0], [69.5, 8111.0], [69.6, 8111.0], [69.7, 8111.0], [69.8, 8147.0], [69.9, 8147.0], [70.0, 8149.0], [70.1, 8149.0], [70.2, 8149.0], [70.3, 8154.0], [70.4, 8154.0], [70.5, 8172.0], [70.6, 8172.0], [70.7, 8172.0], [70.8, 8176.0], [70.9, 8176.0], [71.0, 8181.0], [71.1, 8181.0], [71.2, 8181.0], [71.3, 8189.0], [71.4, 8189.0], [71.5, 8195.0], [71.6, 8195.0], [71.7, 8195.0], [71.8, 8205.0], [71.9, 8205.0], [72.0, 8206.0], [72.1, 8206.0], [72.2, 8206.0], [72.3, 8228.0], [72.4, 8228.0], [72.5, 8234.0], [72.6, 8234.0], [72.7, 8234.0], [72.8, 8234.0], [72.9, 8234.0], [73.0, 8239.0], [73.1, 8239.0], [73.2, 8239.0], [73.3, 8246.0], [73.4, 8246.0], [73.5, 8246.0], [73.6, 8246.0], [73.7, 8246.0], [73.8, 8247.0], [73.9, 8247.0], [74.0, 8249.0], [74.1, 8249.0], [74.2, 8249.0], [74.3, 8251.0], [74.4, 8251.0], [74.5, 8261.0], [74.6, 8261.0], [74.7, 8261.0], [74.8, 8267.0], [74.9, 8267.0], [75.0, 8280.0], [75.1, 8280.0], [75.2, 8280.0], [75.3, 8292.0], [75.4, 8292.0], [75.5, 8299.0], [75.6, 8299.0], [75.7, 8299.0], [75.8, 8303.0], [75.9, 8303.0], [76.0, 8306.0], [76.1, 8306.0], [76.2, 8306.0], [76.3, 8328.0], [76.4, 8328.0], [76.5, 8337.0], [76.6, 8337.0], [76.7, 8337.0], [76.8, 8400.0], [76.9, 8400.0], [77.0, 8413.0], [77.1, 8413.0], [77.2, 8413.0], [77.3, 9042.0], [77.4, 9042.0], [77.5, 9166.0], [77.6, 9166.0], [77.7, 9166.0], [77.8, 9292.0], [77.9, 9292.0], [78.0, 9302.0], [78.1, 9302.0], [78.2, 9302.0], [78.3, 9318.0], [78.4, 9318.0], [78.5, 9328.0], [78.6, 9328.0], [78.7, 9328.0], [78.8, 9403.0], [78.9, 9403.0], [79.0, 9424.0], [79.1, 9424.0], [79.2, 9424.0], [79.3, 9465.0], [79.4, 9465.0], [79.5, 9467.0], [79.6, 9467.0], [79.7, 9467.0], [79.8, 9471.0], [79.9, 9471.0], [80.0, 9474.0], [80.1, 9474.0], [80.2, 9474.0], [80.3, 9475.0], [80.4, 9475.0], [80.5, 9480.0], [80.6, 9480.0], [80.7, 9480.0], [80.8, 9481.0], [80.9, 9481.0], [81.0, 9487.0], [81.1, 9487.0], [81.2, 9487.0], [81.3, 9495.0], [81.4, 9495.0], [81.5, 9497.0], [81.6, 9497.0], [81.7, 9497.0], [81.8, 9501.0], [81.9, 9501.0], [82.0, 9515.0], [82.1, 9515.0], [82.2, 9515.0], [82.3, 9521.0], [82.4, 9521.0], [82.5, 9532.0], [82.6, 9532.0], [82.7, 9532.0], [82.8, 9565.0], [82.9, 9565.0], [83.0, 9575.0], [83.1, 9575.0], [83.2, 9575.0], [83.3, 9580.0], [83.4, 9580.0], [83.5, 9606.0], [83.6, 9606.0], [83.7, 9606.0], [83.8, 9618.0], [83.9, 9618.0], [84.0, 9653.0], [84.1, 9653.0], [84.2, 9653.0], [84.3, 9660.0], [84.4, 9660.0], [84.5, 9690.0], [84.6, 9690.0], [84.7, 9690.0], [84.8, 9697.0], [84.9, 9697.0], [85.0, 9704.0], [85.1, 9704.0], [85.2, 9704.0], [85.3, 9705.0], [85.4, 9705.0], [85.5, 9712.0], [85.6, 9712.0], [85.7, 9712.0], [85.8, 9830.0], [85.9, 9830.0], [86.0, 9962.0], [86.1, 9962.0], [86.2, 9962.0], [86.3, 13894.0], [86.4, 13894.0], [86.5, 13895.0], [86.6, 13895.0], [86.7, 13895.0], [86.8, 13898.0], [86.9, 13898.0], [87.0, 13898.0], [87.1, 13898.0], [87.2, 13898.0], [87.3, 13900.0], [87.4, 13900.0], [87.5, 13928.0], [87.6, 13928.0], [87.7, 13928.0], [87.8, 13930.0], [87.9, 13930.0], [88.0, 13931.0], [88.1, 13931.0], [88.2, 13931.0], [88.3, 13943.0], [88.4, 13943.0], [88.5, 13946.0], [88.6, 13946.0], [88.7, 13946.0], [88.8, 13947.0], [88.9, 13947.0], [89.0, 13956.0], [89.1, 13956.0], [89.2, 13956.0], [89.3, 13964.0], [89.4, 13964.0], [89.5, 13967.0], [89.6, 13967.0], [89.7, 13967.0], [89.8, 13971.0], [89.9, 13971.0], [90.0, 13971.0], [90.1, 13971.0], [90.2, 13971.0], [90.3, 13988.0], [90.4, 13988.0], [90.5, 13997.0], [90.6, 13997.0], [90.7, 13997.0], [90.8, 13998.0], [90.9, 13998.0], [91.0, 14011.0], [91.1, 14011.0], [91.2, 14011.0], [91.3, 14023.0], [91.4, 14023.0], [91.5, 14026.0], [91.6, 14026.0], [91.7, 14026.0], [91.8, 14029.0], [91.9, 14029.0], [92.0, 14046.0], [92.1, 14046.0], [92.2, 14046.0], [92.3, 14047.0], [92.4, 14047.0], [92.5, 14049.0], [92.6, 14049.0], [92.7, 14049.0], [92.8, 14055.0], [92.9, 14055.0], [93.0, 14057.0], [93.1, 14057.0], [93.2, 14057.0], [93.3, 14063.0], [93.4, 14063.0], [93.5, 14067.0], [93.6, 14067.0], [93.7, 14067.0], [93.8, 14077.0], [93.9, 14077.0], [94.0, 14084.0], [94.1, 14084.0], [94.2, 14084.0], [94.3, 14087.0], [94.4, 14087.0], [94.5, 14889.0], [94.6, 14889.0], [94.7, 14889.0], [94.8, 14903.0], [94.9, 14903.0], [95.0, 14905.0], [95.1, 14905.0], [95.2, 14905.0], [95.3, 14905.0], [95.4, 14905.0], [95.5, 14909.0], [95.6, 14909.0], [95.7, 14909.0], [95.8, 14912.0], [95.9, 14912.0], [96.0, 14916.0], [96.1, 14916.0], [96.2, 14916.0], [96.3, 14925.0], [96.4, 14925.0], [96.5, 15015.0], [96.6, 15015.0], [96.7, 15015.0], [96.8, 15022.0], [96.9, 15022.0], [97.0, 15039.0], [97.1, 15039.0], [97.2, 15039.0], [97.3, 15041.0], [97.4, 15041.0], [97.5, 15041.0], [97.6, 15041.0], [97.7, 15041.0], [97.8, 15044.0], [97.9, 15044.0], [98.0, 15045.0], [98.1, 15045.0], [98.2, 15045.0], [98.3, 15056.0], [98.4, 15056.0], [98.5, 16449.0], [98.6, 16449.0], [98.7, 16449.0], [98.8, 16451.0], [98.9, 16451.0], [99.0, 16467.0], [99.1, 16467.0], [99.2, 16467.0], [99.3, 16479.0], [99.4, 16479.0], [99.5, 16490.0], [99.6, 16490.0], [99.7, 16490.0], [99.8, 16516.0], [99.9, 16516.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 264.0], [0.1, 264.0], [0.2, 264.0], [0.3, 265.0], [0.4, 265.0], [0.5, 266.0], [0.6, 266.0], [0.7, 266.0], [0.8, 266.0], [0.9, 266.0], [1.0, 266.0], [1.1, 266.0], [1.2, 266.0], [1.3, 267.0], [1.4, 267.0], [1.5, 267.0], [1.6, 267.0], [1.7, 267.0], [1.8, 267.0], [1.9, 267.0], [2.0, 267.0], [2.1, 267.0], [2.2, 267.0], [2.3, 267.0], [2.4, 267.0], [2.5, 267.0], [2.6, 267.0], [2.7, 267.0], [2.8, 267.0], [2.9, 267.0], [3.0, 267.0], [3.1, 267.0], [3.2, 267.0], [3.3, 267.0], [3.4, 267.0], [3.5, 267.0], [3.6, 267.0], [3.7, 267.0], [3.8, 267.0], [3.9, 267.0], [4.0, 267.0], [4.1, 267.0], [4.2, 267.0], [4.3, 267.0], [4.4, 267.0], [4.5, 267.0], [4.6, 267.0], [4.7, 267.0], [4.8, 268.0], [4.9, 268.0], [5.0, 268.0], [5.1, 268.0], [5.2, 268.0], [5.3, 268.0], [5.4, 268.0], [5.5, 268.0], [5.6, 268.0], [5.7, 268.0], [5.8, 268.0], [5.9, 268.0], [6.0, 268.0], [6.1, 268.0], [6.2, 268.0], [6.3, 268.0], [6.4, 268.0], [6.5, 269.0], [6.6, 269.0], [6.7, 269.0], [6.8, 269.0], [6.9, 269.0], [7.0, 269.0], [7.1, 269.0], [7.2, 269.0], [7.3, 269.0], [7.4, 269.0], [7.5, 269.0], [7.6, 269.0], [7.7, 269.0], [7.8, 269.0], [7.9, 269.0], [8.0, 269.0], [8.1, 269.0], [8.2, 269.0], [8.3, 270.0], [8.4, 270.0], [8.5, 270.0], [8.6, 270.0], [8.7, 270.0], [8.8, 270.0], [8.9, 270.0], [9.0, 270.0], [9.1, 270.0], [9.2, 270.0], [9.3, 270.0], [9.4, 270.0], [9.5, 270.0], [9.6, 270.0], [9.7, 270.0], [9.8, 270.0], [9.9, 270.0], [10.0, 270.0], [10.1, 270.0], [10.2, 270.0], [10.3, 270.0], [10.4, 270.0], [10.5, 270.0], [10.6, 270.0], [10.7, 270.0], [10.8, 270.0], [10.9, 270.0], [11.0, 270.0], [11.1, 270.0], [11.2, 270.0], [11.3, 271.0], [11.4, 271.0], [11.5, 271.0], [11.6, 271.0], [11.7, 271.0], [11.8, 271.0], [11.9, 271.0], [12.0, 271.0], [12.1, 271.0], [12.2, 271.0], [12.3, 271.0], [12.4, 271.0], [12.5, 271.0], [12.6, 271.0], [12.7, 271.0], [12.8, 271.0], [12.9, 271.0], [13.0, 271.0], [13.1, 271.0], [13.2, 271.0], [13.3, 272.0], [13.4, 272.0], [13.5, 272.0], [13.6, 272.0], [13.7, 272.0], [13.8, 272.0], [13.9, 272.0], [14.0, 272.0], [14.1, 272.0], [14.2, 272.0], [14.3, 273.0], [14.4, 273.0], [14.5, 273.0], [14.6, 273.0], [14.7, 273.0], [14.8, 273.0], [14.9, 273.0], [15.0, 274.0], [15.1, 274.0], [15.2, 274.0], [15.3, 274.0], [15.4, 274.0], [15.5, 274.0], [15.6, 274.0], [15.7, 274.0], [15.8, 274.0], [15.9, 274.0], [16.0, 274.0], [16.1, 274.0], [16.2, 274.0], [16.3, 274.0], [16.4, 274.0], [16.5, 274.0], [16.6, 274.0], [16.7, 274.0], [16.8, 275.0], [16.9, 275.0], [17.0, 275.0], [17.1, 275.0], [17.2, 275.0], [17.3, 275.0], [17.4, 275.0], [17.5, 276.0], [17.6, 276.0], [17.7, 276.0], [17.8, 276.0], [17.9, 276.0], [18.0, 276.0], [18.1, 276.0], [18.2, 276.0], [18.3, 277.0], [18.4, 277.0], [18.5, 277.0], [18.6, 277.0], [18.7, 277.0], [18.8, 277.0], [18.9, 277.0], [19.0, 277.0], [19.1, 277.0], [19.2, 277.0], [19.3, 277.0], [19.4, 277.0], [19.5, 277.0], [19.6, 277.0], [19.7, 277.0], [19.8, 278.0], [19.9, 278.0], [20.0, 279.0], [20.1, 279.0], [20.2, 279.0], [20.3, 279.0], [20.4, 279.0], [20.5, 280.0], [20.6, 280.0], [20.7, 280.0], [20.8, 280.0], [20.9, 280.0], [21.0, 281.0], [21.1, 281.0], [21.2, 281.0], [21.3, 281.0], [21.4, 281.0], [21.5, 281.0], [21.6, 281.0], [21.7, 281.0], [21.8, 281.0], [21.9, 281.0], [22.0, 281.0], [22.1, 281.0], [22.2, 281.0], [22.3, 281.0], [22.4, 281.0], [22.5, 281.0], [22.6, 281.0], [22.7, 281.0], [22.8, 282.0], [22.9, 282.0], [23.0, 282.0], [23.1, 282.0], [23.2, 282.0], [23.3, 282.0], [23.4, 282.0], [23.5, 283.0], [23.6, 283.0], [23.7, 283.0], [23.8, 283.0], [23.9, 283.0], [24.0, 283.0], [24.1, 283.0], [24.2, 283.0], [24.3, 283.0], [24.4, 283.0], [24.5, 283.0], [24.6, 283.0], [24.7, 283.0], [24.8, 284.0], [24.9, 284.0], [25.0, 284.0], [25.1, 284.0], [25.2, 284.0], [25.3, 284.0], [25.4, 284.0], [25.5, 285.0], [25.6, 285.0], [25.7, 285.0], [25.8, 285.0], [25.9, 285.0], [26.0, 285.0], [26.1, 285.0], [26.2, 285.0], [26.3, 285.0], [26.4, 285.0], [26.5, 286.0], [26.6, 286.0], [26.7, 286.0], [26.8, 286.0], [26.9, 286.0], [27.0, 286.0], [27.1, 286.0], [27.2, 286.0], [27.3, 286.0], [27.4, 286.0], [27.5, 286.0], [27.6, 286.0], [27.7, 286.0], [27.8, 287.0], [27.9, 287.0], [28.0, 287.0], [28.1, 287.0], [28.2, 287.0], [28.3, 287.0], [28.4, 287.0], [28.5, 287.0], [28.6, 287.0], [28.7, 287.0], [28.8, 288.0], [28.9, 288.0], [29.0, 289.0], [29.1, 289.0], [29.2, 289.0], [29.3, 289.0], [29.4, 289.0], [29.5, 289.0], [29.6, 289.0], [29.7, 289.0], [29.8, 289.0], [29.9, 289.0], [30.0, 289.0], [30.1, 289.0], [30.2, 289.0], [30.3, 289.0], [30.4, 289.0], [30.5, 289.0], [30.6, 289.0], [30.7, 289.0], [30.8, 290.0], [30.9, 290.0], [31.0, 290.0], [31.1, 290.0], [31.2, 290.0], [31.3, 291.0], [31.4, 291.0], [31.5, 291.0], [31.6, 291.0], [31.7, 291.0], [31.8, 291.0], [31.9, 291.0], [32.0, 292.0], [32.1, 292.0], [32.2, 292.0], [32.3, 292.0], [32.4, 292.0], [32.5, 292.0], [32.6, 292.0], [32.7, 292.0], [32.8, 292.0], [32.9, 292.0], [33.0, 293.0], [33.1, 293.0], [33.2, 293.0], [33.3, 293.0], [33.4, 293.0], [33.5, 293.0], [33.6, 293.0], [33.7, 293.0], [33.8, 293.0], [33.9, 293.0], [34.0, 294.0], [34.1, 294.0], [34.2, 294.0], [34.3, 294.0], [34.4, 294.0], [34.5, 294.0], [34.6, 294.0], [34.7, 294.0], [34.8, 294.0], [34.9, 294.0], [35.0, 295.0], [35.1, 295.0], [35.2, 295.0], [35.3, 295.0], [35.4, 295.0], [35.5, 297.0], [35.6, 297.0], [35.7, 297.0], [35.8, 298.0], [35.9, 298.0], [36.0, 299.0], [36.1, 299.0], [36.2, 299.0], [36.3, 299.0], [36.4, 299.0], [36.5, 299.0], [36.6, 299.0], [36.7, 299.0], [36.8, 299.0], [36.9, 299.0], [37.0, 299.0], [37.1, 299.0], [37.2, 299.0], [37.3, 300.0], [37.4, 300.0], [37.5, 301.0], [37.6, 301.0], [37.7, 301.0], [37.8, 302.0], [37.9, 302.0], [38.0, 302.0], [38.1, 302.0], [38.2, 302.0], [38.3, 303.0], [38.4, 303.0], [38.5, 303.0], [38.6, 303.0], [38.7, 303.0], [38.8, 303.0], [38.9, 303.0], [39.0, 304.0], [39.1, 304.0], [39.2, 304.0], [39.3, 304.0], [39.4, 304.0], [39.5, 305.0], [39.6, 305.0], [39.7, 305.0], [39.8, 305.0], [39.9, 305.0], [40.0, 305.0], [40.1, 305.0], [40.2, 305.0], [40.3, 305.0], [40.4, 305.0], [40.5, 306.0], [40.6, 306.0], [40.7, 306.0], [40.8, 306.0], [40.9, 306.0], [41.0, 306.0], [41.1, 306.0], [41.2, 306.0], [41.3, 307.0], [41.4, 307.0], [41.5, 307.0], [41.6, 307.0], [41.7, 307.0], [41.8, 308.0], [41.9, 308.0], [42.0, 310.0], [42.1, 310.0], [42.2, 310.0], [42.3, 311.0], [42.4, 311.0], [42.5, 312.0], [42.6, 312.0], [42.7, 312.0], [42.8, 312.0], [42.9, 312.0], [43.0, 315.0], [43.1, 315.0], [43.2, 315.0], [43.3, 315.0], [43.4, 315.0], [43.5, 316.0], [43.6, 316.0], [43.7, 316.0], [43.8, 316.0], [43.9, 316.0], [44.0, 316.0], [44.1, 316.0], [44.2, 316.0], [44.3, 316.0], [44.4, 316.0], [44.5, 317.0], [44.6, 317.0], [44.7, 317.0], [44.8, 317.0], [44.9, 317.0], [45.0, 318.0], [45.1, 318.0], [45.2, 318.0], [45.3, 319.0], [45.4, 319.0], [45.5, 320.0], [45.6, 320.0], [45.7, 320.0], [45.8, 320.0], [45.9, 320.0], [46.0, 320.0], [46.1, 320.0], [46.2, 320.0], [46.3, 321.0], [46.4, 321.0], [46.5, 321.0], [46.6, 321.0], [46.7, 321.0], [46.8, 322.0], [46.9, 322.0], [47.0, 324.0], [47.1, 324.0], [47.2, 324.0], [47.3, 325.0], [47.4, 325.0], [47.5, 325.0], [47.6, 325.0], [47.7, 325.0], [47.8, 326.0], [47.9, 326.0], [48.0, 326.0], [48.1, 326.0], [48.2, 326.0], [48.3, 328.0], [48.4, 328.0], [48.5, 328.0], [48.6, 328.0], [48.7, 328.0], [48.8, 330.0], [48.9, 330.0], [49.0, 331.0], [49.1, 331.0], [49.2, 331.0], [49.3, 333.0], [49.4, 333.0], [49.5, 333.0], [49.6, 333.0], [49.7, 333.0], [49.8, 335.0], [49.9, 335.0], [50.0, 336.0], [50.1, 336.0], [50.2, 336.0], [50.3, 337.0], [50.4, 337.0], [50.5, 339.0], [50.6, 339.0], [50.7, 339.0], [50.8, 345.0], [50.9, 345.0], [51.0, 346.0], [51.1, 346.0], [51.2, 346.0], [51.3, 349.0], [51.4, 349.0], [51.5, 349.0], [51.6, 349.0], [51.7, 349.0], [51.8, 350.0], [51.9, 350.0], [52.0, 352.0], [52.1, 352.0], [52.2, 352.0], [52.3, 354.0], [52.4, 354.0], [52.5, 355.0], [52.6, 355.0], [52.7, 355.0], [52.8, 358.0], [52.9, 358.0], [53.0, 362.0], [53.1, 362.0], [53.2, 362.0], [53.3, 364.0], [53.4, 364.0], [53.5, 371.0], [53.6, 371.0], [53.7, 371.0], [53.8, 377.0], [53.9, 377.0], [54.0, 377.0], [54.1, 377.0], [54.2, 377.0], [54.3, 383.0], [54.4, 383.0], [54.5, 392.0], [54.6, 392.0], [54.7, 392.0], [54.8, 404.0], [54.9, 404.0], [55.0, 405.0], [55.1, 405.0], [55.2, 405.0], [55.3, 407.0], [55.4, 407.0], [55.5, 411.0], [55.6, 411.0], [55.7, 411.0], [55.8, 414.0], [55.9, 414.0], [56.0, 418.0], [56.1, 418.0], [56.2, 418.0], [56.3, 419.0], [56.4, 419.0], [56.5, 424.0], [56.6, 424.0], [56.7, 424.0], [56.8, 424.0], [56.9, 424.0], [57.0, 428.0], [57.1, 428.0], [57.2, 428.0], [57.3, 428.0], [57.4, 428.0], [57.5, 430.0], [57.6, 430.0], [57.7, 430.0], [57.8, 430.0], [57.9, 430.0], [58.0, 442.0], [58.1, 442.0], [58.2, 442.0], [58.3, 442.0], [58.4, 442.0], [58.5, 446.0], [58.6, 446.0], [58.7, 446.0], [58.8, 450.0], [58.9, 450.0], [59.0, 472.0], [59.1, 472.0], [59.2, 472.0], [59.3, 480.0], [59.4, 480.0], [59.5, 494.0], [59.6, 494.0], [59.7, 494.0], [59.8, 499.0], [59.9, 499.0], [60.0, 501.0], [60.1, 501.0], [60.2, 501.0], [60.3, 541.0], [60.4, 541.0], [60.5, 555.0], [60.6, 555.0], [60.7, 555.0], [60.8, 571.0], [60.9, 571.0], [61.0, 578.0], [61.1, 578.0], [61.2, 578.0], [61.3, 580.0], [61.4, 580.0], [61.5, 583.0], [61.6, 583.0], [61.7, 583.0], [61.8, 586.0], [61.9, 586.0], [62.0, 592.0], [62.1, 592.0], [62.2, 592.0], [62.3, 622.0], [62.4, 622.0], [62.5, 626.0], [62.6, 626.0], [62.7, 626.0], [62.8, 644.0], [62.9, 644.0], [63.0, 647.0], [63.1, 647.0], [63.2, 647.0], [63.3, 910.0], [63.4, 910.0], [63.5, 912.0], [63.6, 912.0], [63.7, 912.0], [63.8, 1032.0], [63.9, 1032.0], [64.0, 1039.0], [64.1, 1039.0], [64.2, 1039.0], [64.3, 1041.0], [64.4, 1041.0], [64.5, 1043.0], [64.6, 1043.0], [64.7, 1043.0], [64.8, 1045.0], [64.9, 1045.0], [65.0, 1045.0], [65.1, 1045.0], [65.2, 1045.0], [65.3, 1046.0], [65.4, 1046.0], [65.5, 1047.0], [65.6, 1047.0], [65.7, 1047.0], [65.8, 1047.0], [65.9, 1047.0], [66.0, 1047.0], [66.1, 1047.0], [66.2, 1047.0], [66.3, 1047.0], [66.4, 1047.0], [66.5, 1049.0], [66.6, 1049.0], [66.7, 1049.0], [66.8, 1049.0], [66.9, 1049.0], [67.0, 1049.0], [67.1, 1049.0], [67.2, 1049.0], [67.3, 1050.0], [67.4, 1050.0], [67.5, 1050.0], [67.6, 1050.0], [67.7, 1050.0], [67.8, 1050.0], [67.9, 1050.0], [68.0, 1051.0], [68.1, 1051.0], [68.2, 1051.0], [68.3, 1051.0], [68.4, 1051.0], [68.5, 1054.0], [68.6, 1054.0], [68.7, 1054.0], [68.8, 1054.0], [68.9, 1054.0], [69.0, 1054.0], [69.1, 1054.0], [69.2, 1054.0], [69.3, 1054.0], [69.4, 1054.0], [69.5, 1055.0], [69.6, 1055.0], [69.7, 1055.0], [69.8, 1056.0], [69.9, 1056.0], [70.0, 1057.0], [70.1, 1057.0], [70.2, 1057.0], [70.3, 1057.0], [70.4, 1057.0], [70.5, 1057.0], [70.6, 1057.0], [70.7, 1057.0], [70.8, 1057.0], [70.9, 1057.0], [71.0, 1058.0], [71.1, 1058.0], [71.2, 1058.0], [71.3, 1058.0], [71.4, 1058.0], [71.5, 1058.0], [71.6, 1058.0], [71.7, 1058.0], [71.8, 1059.0], [71.9, 1059.0], [72.0, 1059.0], [72.1, 1059.0], [72.2, 1059.0], [72.3, 1060.0], [72.4, 1060.0], [72.5, 1060.0], [72.6, 1060.0], [72.7, 1060.0], [72.8, 1060.0], [72.9, 1060.0], [73.0, 1060.0], [73.1, 1060.0], [73.2, 1060.0], [73.3, 1062.0], [73.4, 1062.0], [73.5, 1063.0], [73.6, 1063.0], [73.7, 1063.0], [73.8, 1065.0], [73.9, 1065.0], [74.0, 1067.0], [74.1, 1067.0], [74.2, 1067.0], [74.3, 1068.0], [74.4, 1068.0], [74.5, 1071.0], [74.6, 1071.0], [74.7, 1071.0], [74.8, 1073.0], [74.9, 1073.0], [75.0, 1073.0], [75.1, 1073.0], [75.2, 1073.0], [75.3, 1074.0], [75.4, 1074.0], [75.5, 1085.0], [75.6, 1085.0], [75.7, 1085.0], [75.8, 1086.0], [75.9, 1086.0], [76.0, 1089.0], [76.1, 1089.0], [76.2, 1089.0], [76.3, 1091.0], [76.4, 1091.0], [76.5, 1142.0], [76.6, 1142.0], [76.7, 1142.0], [76.8, 1152.0], [76.9, 1152.0], [77.0, 1155.0], [77.1, 1155.0], [77.2, 1155.0], [77.3, 1160.0], [77.4, 1160.0], [77.5, 1165.0], [77.6, 1165.0], [77.7, 1165.0], [77.8, 1183.0], [77.9, 1183.0], [78.0, 1187.0], [78.1, 1187.0], [78.2, 1187.0], [78.3, 1236.0], [78.4, 1236.0], [78.5, 1293.0], [78.6, 1293.0], [78.7, 1293.0], [78.8, 1320.0], [78.9, 1320.0], [79.0, 1423.0], [79.1, 1423.0], [79.2, 1423.0], [79.3, 1440.0], [79.4, 1440.0], [79.5, 1451.0], [79.6, 1451.0], [79.7, 1451.0], [79.8, 1470.0], [79.9, 1470.0], [80.0, 1475.0], [80.1, 1475.0], [80.2, 1475.0], [80.3, 1487.0], [80.4, 1487.0], [80.5, 1488.0], [80.6, 1488.0], [80.7, 1488.0], [80.8, 1494.0], [80.9, 1494.0], [81.0, 1497.0], [81.1, 1497.0], [81.2, 1497.0], [81.3, 1503.0], [81.4, 1503.0], [81.5, 1505.0], [81.6, 1505.0], [81.7, 1505.0], [81.8, 1507.0], [81.9, 1507.0], [82.0, 1511.0], [82.1, 1511.0], [82.2, 1511.0], [82.3, 1511.0], [82.4, 1511.0], [82.5, 1513.0], [82.6, 1513.0], [82.7, 1513.0], [82.8, 1514.0], [82.9, 1514.0], [83.0, 1514.0], [83.1, 1514.0], [83.2, 1514.0], [83.3, 1515.0], [83.4, 1515.0], [83.5, 1515.0], [83.6, 1515.0], [83.7, 1515.0], [83.8, 1520.0], [83.9, 1520.0], [84.0, 1522.0], [84.1, 1522.0], [84.2, 1522.0], [84.3, 1525.0], [84.4, 1525.0], [84.5, 1525.0], [84.6, 1525.0], [84.7, 1525.0], [84.8, 1527.0], [84.9, 1527.0], [85.0, 1527.0], [85.1, 1527.0], [85.2, 1527.0], [85.3, 1529.0], [85.4, 1529.0], [85.5, 1530.0], [85.6, 1530.0], [85.7, 1530.0], [85.8, 1535.0], [85.9, 1535.0], [86.0, 1539.0], [86.1, 1539.0], [86.2, 1539.0], [86.3, 1546.0], [86.4, 1546.0], [86.5, 1549.0], [86.6, 1549.0], [86.7, 1549.0], [86.8, 1578.0], [86.9, 1578.0], [87.0, 1620.0], [87.1, 1620.0], [87.2, 1620.0], [87.3, 1647.0], [87.4, 1647.0], [87.5, 1706.0], [87.6, 1706.0], [87.7, 1706.0], [87.8, 1744.0], [87.9, 1744.0], [88.0, 1759.0], [88.1, 1759.0], [88.2, 1759.0], [88.3, 1774.0], [88.4, 1774.0], [88.5, 1783.0], [88.6, 1783.0], [88.7, 1783.0], [88.8, 1786.0], [88.9, 1786.0], [89.0, 1790.0], [89.1, 1790.0], [89.2, 1790.0], [89.3, 1792.0], [89.4, 1792.0], [89.5, 1793.0], [89.6, 1793.0], [89.7, 1793.0], [89.8, 1794.0], [89.9, 1794.0], [90.0, 1807.0], [90.1, 1807.0], [90.2, 1807.0], [90.3, 1809.0], [90.4, 1809.0], [90.5, 1811.0], [90.6, 1811.0], [90.7, 1811.0], [90.8, 1816.0], [90.9, 1816.0], [91.0, 1840.0], [91.1, 1840.0], [91.2, 1840.0], [91.3, 1841.0], [91.4, 1841.0], [91.5, 1849.0], [91.6, 1849.0], [91.7, 1849.0], [91.8, 1855.0], [91.9, 1855.0], [92.0, 1856.0], [92.1, 1856.0], [92.2, 1856.0], [92.3, 1865.0], [92.4, 1865.0], [92.5, 1887.0], [92.6, 1887.0], [92.7, 1887.0], [92.8, 1894.0], [92.9, 1894.0], [93.0, 1901.0], [93.1, 1901.0], [93.2, 1901.0], [93.3, 1902.0], [93.4, 1902.0], [93.5, 1905.0], [93.6, 1905.0], [93.7, 1905.0], [93.8, 1912.0], [93.9, 1912.0], [94.0, 1938.0], [94.1, 1938.0], [94.2, 1938.0], [94.3, 1940.0], [94.4, 1940.0], [94.5, 1944.0], [94.6, 1944.0], [94.7, 1944.0], [94.8, 2135.0], [94.9, 2135.0], [95.0, 2219.0], [95.1, 2219.0], [95.2, 2219.0], [95.3, 2252.0], [95.4, 2252.0], [95.5, 2254.0], [95.6, 2254.0], [95.7, 2254.0], [95.8, 2275.0], [95.9, 2275.0], [96.0, 2280.0], [96.1, 2280.0], [96.2, 2280.0], [96.3, 2288.0], [96.4, 2288.0], [96.5, 4572.0], [96.6, 4572.0], [96.7, 4572.0], [96.8, 4610.0], [96.9, 4610.0], [97.0, 4700.0], [97.1, 4700.0], [97.2, 4700.0], [97.3, 4701.0], [97.4, 4701.0], [97.5, 4707.0], [97.6, 4707.0], [97.7, 4707.0], [97.8, 4708.0], [97.9, 4708.0], [98.0, 4729.0], [98.1, 4729.0], [98.2, 4729.0], [98.3, 5496.0], [98.4, 5496.0], [98.5, 8285.0], [98.6, 8285.0], [98.7, 8285.0], [98.8, 8287.0], [98.9, 8287.0], [99.0, 8290.0], [99.1, 8290.0], [99.2, 8290.0], [99.3, 8315.0], [99.4, 8315.0], [99.5, 8327.0], [99.6, 8327.0], [99.7, 8327.0], [99.8, 14303.0], [99.9, 14303.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[0.0, 264.0], [0.1, 264.0], [0.2, 264.0], [0.3, 264.0], [0.4, 264.0], [0.5, 264.0], [0.6, 264.0], [0.7, 264.0], [0.8, 266.0], [0.9, 266.0], [1.0, 266.0], [1.1, 266.0], [1.2, 266.0], [1.3, 266.0], [1.4, 266.0], [1.5, 266.0], [1.6, 266.0], [1.7, 266.0], [1.8, 266.0], [1.9, 266.0], [2.0, 266.0], [2.1, 266.0], [2.2, 266.0], [2.3, 266.0], [2.4, 266.0], [2.5, 267.0], [2.6, 267.0], [2.7, 267.0], [2.8, 267.0], [2.9, 267.0], [3.0, 267.0], [3.1, 267.0], [3.2, 267.0], [3.3, 268.0], [3.4, 268.0], [3.5, 268.0], [3.6, 268.0], [3.7, 268.0], [3.8, 268.0], [3.9, 268.0], [4.0, 268.0], [4.1, 268.0], [4.2, 268.0], [4.3, 268.0], [4.4, 268.0], [4.5, 268.0], [4.6, 268.0], [4.7, 268.0], [4.8, 268.0], [4.9, 268.0], [5.0, 268.0], [5.1, 268.0], [5.2, 268.0], [5.3, 268.0], [5.4, 268.0], [5.5, 268.0], [5.6, 268.0], [5.7, 268.0], [5.8, 269.0], [5.9, 269.0], [6.0, 269.0], [6.1, 269.0], [6.2, 269.0], [6.3, 269.0], [6.4, 269.0], [6.5, 269.0], [6.6, 269.0], [6.7, 269.0], [6.8, 269.0], [6.9, 269.0], [7.0, 269.0], [7.1, 269.0], [7.2, 269.0], [7.3, 269.0], [7.4, 269.0], [7.5, 269.0], [7.6, 269.0], [7.7, 269.0], [7.8, 269.0], [7.9, 269.0], [8.0, 269.0], [8.1, 269.0], [8.2, 269.0], [8.3, 269.0], [8.4, 269.0], [8.5, 269.0], [8.6, 269.0], [8.7, 269.0], [8.8, 269.0], [8.9, 269.0], [9.0, 269.0], [9.1, 269.0], [9.2, 269.0], [9.3, 269.0], [9.4, 269.0], [9.5, 269.0], [9.6, 269.0], [9.7, 269.0], [9.8, 270.0], [9.9, 270.0], [10.0, 270.0], [10.1, 270.0], [10.2, 270.0], [10.3, 270.0], [10.4, 270.0], [10.5, 270.0], [10.6, 270.0], [10.7, 270.0], [10.8, 270.0], [10.9, 270.0], [11.0, 270.0], [11.1, 270.0], [11.2, 270.0], [11.3, 270.0], [11.4, 270.0], [11.5, 270.0], [11.6, 270.0], [11.7, 270.0], [11.8, 270.0], [11.9, 270.0], [12.0, 270.0], [12.1, 270.0], [12.2, 270.0], [12.3, 270.0], [12.4, 270.0], [12.5, 270.0], [12.6, 270.0], [12.7, 270.0], [12.8, 271.0], [12.9, 271.0], [13.0, 271.0], [13.1, 271.0], [13.2, 271.0], [13.3, 271.0], [13.4, 271.0], [13.5, 271.0], [13.6, 271.0], [13.7, 271.0], [13.8, 272.0], [13.9, 272.0], [14.0, 272.0], [14.1, 272.0], [14.2, 272.0], [14.3, 272.0], [14.4, 272.0], [14.5, 272.0], [14.6, 272.0], [14.7, 272.0], [14.8, 272.0], [14.9, 272.0], [15.0, 272.0], [15.1, 272.0], [15.2, 272.0], [15.3, 273.0], [15.4, 273.0], [15.5, 273.0], [15.6, 273.0], [15.7, 273.0], [15.8, 273.0], [15.9, 273.0], [16.0, 273.0], [16.1, 273.0], [16.2, 273.0], [16.3, 273.0], [16.4, 273.0], [16.5, 273.0], [16.6, 273.0], [16.7, 273.0], [16.8, 274.0], [16.9, 274.0], [17.0, 274.0], [17.1, 274.0], [17.2, 274.0], [17.3, 274.0], [17.4, 274.0], [17.5, 275.0], [17.6, 275.0], [17.7, 275.0], [17.8, 275.0], [17.9, 275.0], [18.0, 275.0], [18.1, 275.0], [18.2, 275.0], [18.3, 276.0], [18.4, 276.0], [18.5, 276.0], [18.6, 276.0], [18.7, 276.0], [18.8, 276.0], [18.9, 276.0], [19.0, 277.0], [19.1, 277.0], [19.2, 277.0], [19.3, 277.0], [19.4, 277.0], [19.5, 277.0], [19.6, 277.0], [19.7, 277.0], [19.8, 278.0], [19.9, 278.0], [20.0, 278.0], [20.1, 278.0], [20.2, 278.0], [20.3, 278.0], [20.4, 278.0], [20.5, 278.0], [20.6, 278.0], [20.7, 278.0], [20.8, 278.0], [20.9, 278.0], [21.0, 279.0], [21.1, 279.0], [21.2, 279.0], [21.3, 279.0], [21.4, 279.0], [21.5, 279.0], [21.6, 279.0], [21.7, 279.0], [21.8, 279.0], [21.9, 279.0], [22.0, 280.0], [22.1, 280.0], [22.2, 280.0], [22.3, 280.0], [22.4, 280.0], [22.5, 280.0], [22.6, 280.0], [22.7, 280.0], [22.8, 280.0], [22.9, 280.0], [23.0, 280.0], [23.1, 280.0], [23.2, 280.0], [23.3, 280.0], [23.4, 280.0], [23.5, 281.0], [23.6, 281.0], [23.7, 281.0], [23.8, 281.0], [23.9, 281.0], [24.0, 281.0], [24.1, 281.0], [24.2, 281.0], [24.3, 281.0], [24.4, 281.0], [24.5, 282.0], [24.6, 282.0], [24.7, 282.0], [24.8, 282.0], [24.9, 282.0], [25.0, 282.0], [25.1, 282.0], [25.2, 282.0], [25.3, 283.0], [25.4, 283.0], [25.5, 283.0], [25.6, 283.0], [25.7, 283.0], [25.8, 283.0], [25.9, 283.0], [26.0, 283.0], [26.1, 283.0], [26.2, 283.0], [26.3, 283.0], [26.4, 283.0], [26.5, 283.0], [26.6, 283.0], [26.7, 283.0], [26.8, 284.0], [26.9, 284.0], [27.0, 285.0], [27.1, 285.0], [27.2, 285.0], [27.3, 285.0], [27.4, 285.0], [27.5, 285.0], [27.6, 285.0], [27.7, 285.0], [27.8, 285.0], [27.9, 285.0], [28.0, 285.0], [28.1, 285.0], [28.2, 285.0], [28.3, 285.0], [28.4, 285.0], [28.5, 286.0], [28.6, 286.0], [28.7, 286.0], [28.8, 286.0], [28.9, 286.0], [29.0, 287.0], [29.1, 287.0], [29.2, 287.0], [29.3, 287.0], [29.4, 287.0], [29.5, 288.0], [29.6, 288.0], [29.7, 288.0], [29.8, 288.0], [29.9, 288.0], [30.0, 288.0], [30.1, 288.0], [30.2, 288.0], [30.3, 288.0], [30.4, 288.0], [30.5, 288.0], [30.6, 288.0], [30.7, 288.0], [30.8, 289.0], [30.9, 289.0], [31.0, 289.0], [31.1, 289.0], [31.2, 289.0], [31.3, 290.0], [31.4, 290.0], [31.5, 290.0], [31.6, 290.0], [31.7, 290.0], [31.8, 290.0], [31.9, 290.0], [32.0, 290.0], [32.1, 290.0], [32.2, 290.0], [32.3, 291.0], [32.4, 291.0], [32.5, 291.0], [32.6, 291.0], [32.7, 291.0], [32.8, 291.0], [32.9, 291.0], [33.0, 291.0], [33.1, 291.0], [33.2, 291.0], [33.3, 292.0], [33.4, 292.0], [33.5, 292.0], [33.6, 292.0], [33.7, 292.0], [33.8, 292.0], [33.9, 292.0], [34.0, 292.0], [34.1, 292.0], [34.2, 292.0], [34.3, 292.0], [34.4, 292.0], [34.5, 292.0], [34.6, 292.0], [34.7, 292.0], [34.8, 292.0], [34.9, 292.0], [35.0, 293.0], [35.1, 293.0], [35.2, 293.0], [35.3, 293.0], [35.4, 293.0], [35.5, 293.0], [35.6, 293.0], [35.7, 293.0], [35.8, 293.0], [35.9, 293.0], [36.0, 293.0], [36.1, 293.0], [36.2, 293.0], [36.3, 293.0], [36.4, 293.0], [36.5, 293.0], [36.6, 293.0], [36.7, 293.0], [36.8, 294.0], [36.9, 294.0], [37.0, 294.0], [37.1, 294.0], [37.2, 294.0], [37.3, 295.0], [37.4, 295.0], [37.5, 296.0], [37.6, 296.0], [37.7, 296.0], [37.8, 297.0], [37.9, 297.0], [38.0, 297.0], [38.1, 297.0], [38.2, 297.0], [38.3, 297.0], [38.4, 297.0], [38.5, 297.0], [38.6, 297.0], [38.7, 297.0], [38.8, 297.0], [38.9, 297.0], [39.0, 297.0], [39.1, 297.0], [39.2, 297.0], [39.3, 298.0], [39.4, 298.0], [39.5, 298.0], [39.6, 298.0], [39.7, 298.0], [39.8, 298.0], [39.9, 298.0], [40.0, 298.0], [40.1, 298.0], [40.2, 298.0], [40.3, 298.0], [40.4, 298.0], [40.5, 299.0], [40.6, 299.0], [40.7, 299.0], [40.8, 299.0], [40.9, 299.0], [41.0, 300.0], [41.1, 300.0], [41.2, 300.0], [41.3, 300.0], [41.4, 300.0], [41.5, 301.0], [41.6, 301.0], [41.7, 301.0], [41.8, 302.0], [41.9, 302.0], [42.0, 302.0], [42.1, 302.0], [42.2, 302.0], [42.3, 302.0], [42.4, 302.0], [42.5, 302.0], [42.6, 302.0], [42.7, 302.0], [42.8, 302.0], [42.9, 302.0], [43.0, 303.0], [43.1, 303.0], [43.2, 303.0], [43.3, 304.0], [43.4, 304.0], [43.5, 305.0], [43.6, 305.0], [43.7, 305.0], [43.8, 307.0], [43.9, 307.0], [44.0, 308.0], [44.1, 308.0], [44.2, 308.0], [44.3, 310.0], [44.4, 310.0], [44.5, 311.0], [44.6, 311.0], [44.7, 311.0], [44.8, 311.0], [44.9, 311.0], [45.0, 312.0], [45.1, 312.0], [45.2, 312.0], [45.3, 312.0], [45.4, 312.0], [45.5, 312.0], [45.6, 312.0], [45.7, 312.0], [45.8, 313.0], [45.9, 313.0], [46.0, 314.0], [46.1, 314.0], [46.2, 314.0], [46.3, 314.0], [46.4, 314.0], [46.5, 314.0], [46.6, 314.0], [46.7, 314.0], [46.8, 315.0], [46.9, 315.0], [47.0, 316.0], [47.1, 316.0], [47.2, 316.0], [47.3, 317.0], [47.4, 317.0], [47.5, 317.0], [47.6, 317.0], [47.7, 317.0], [47.8, 318.0], [47.9, 318.0], [48.0, 320.0], [48.1, 320.0], [48.2, 320.0], [48.3, 321.0], [48.4, 321.0], [48.5, 321.0], [48.6, 321.0], [48.7, 321.0], [48.8, 322.0], [48.9, 322.0], [49.0, 322.0], [49.1, 322.0], [49.2, 322.0], [49.3, 322.0], [49.4, 322.0], [49.5, 322.0], [49.6, 322.0], [49.7, 322.0], [49.8, 325.0], [49.9, 325.0], [50.0, 325.0], [50.1, 325.0], [50.2, 325.0], [50.3, 326.0], [50.4, 326.0], [50.5, 326.0], [50.6, 326.0], [50.7, 326.0], [50.8, 327.0], [50.9, 327.0], [51.0, 327.0], [51.1, 327.0], [51.2, 327.0], [51.3, 328.0], [51.4, 328.0], [51.5, 329.0], [51.6, 329.0], [51.7, 329.0], [51.8, 329.0], [51.9, 329.0], [52.0, 331.0], [52.1, 331.0], [52.2, 331.0], [52.3, 332.0], [52.4, 332.0], [52.5, 332.0], [52.6, 332.0], [52.7, 332.0], [52.8, 333.0], [52.9, 333.0], [53.0, 333.0], [53.1, 333.0], [53.2, 333.0], [53.3, 335.0], [53.4, 335.0], [53.5, 335.0], [53.6, 335.0], [53.7, 335.0], [53.8, 335.0], [53.9, 335.0], [54.0, 336.0], [54.1, 336.0], [54.2, 336.0], [54.3, 338.0], [54.4, 338.0], [54.5, 339.0], [54.6, 339.0], [54.7, 339.0], [54.8, 341.0], [54.9, 341.0], [55.0, 345.0], [55.1, 345.0], [55.2, 345.0], [55.3, 346.0], [55.4, 346.0], [55.5, 347.0], [55.6, 347.0], [55.7, 347.0], [55.8, 351.0], [55.9, 351.0], [56.0, 354.0], [56.1, 354.0], [56.2, 354.0], [56.3, 354.0], [56.4, 354.0], [56.5, 357.0], [56.6, 357.0], [56.7, 357.0], [56.8, 359.0], [56.9, 359.0], [57.0, 360.0], [57.1, 360.0], [57.2, 360.0], [57.3, 367.0], [57.4, 367.0], [57.5, 386.0], [57.6, 386.0], [57.7, 386.0], [57.8, 414.0], [57.9, 414.0], [58.0, 1038.0], [58.1, 1038.0], [58.2, 1038.0], [58.3, 1042.0], [58.4, 1042.0], [58.5, 1043.0], [58.6, 1043.0], [58.7, 1043.0], [58.8, 1047.0], [58.9, 1047.0], [59.0, 1048.0], [59.1, 1048.0], [59.2, 1048.0], [59.3, 1052.0], [59.4, 1052.0], [59.5, 1053.0], [59.6, 1053.0], [59.7, 1053.0], [59.8, 1056.0], [59.9, 1056.0], [60.0, 1058.0], [60.1, 1058.0], [60.2, 1058.0], [60.3, 1058.0], [60.4, 1058.0], [60.5, 1066.0], [60.6, 1066.0], [60.7, 1066.0], [60.8, 1071.0], [60.9, 1071.0], [61.0, 1073.0], [61.1, 1073.0], [61.2, 1073.0], [61.3, 1073.0], [61.4, 1073.0], [61.5, 1075.0], [61.6, 1075.0], [61.7, 1075.0], [61.8, 1097.0], [61.9, 1097.0], [62.0, 1151.0], [62.1, 1151.0], [62.2, 1151.0], [62.3, 1161.0], [62.4, 1161.0], [62.5, 1165.0], [62.6, 1165.0], [62.7, 1165.0], [62.8, 1171.0], [62.9, 1171.0], [63.0, 1184.0], [63.1, 1184.0], [63.2, 1184.0], [63.3, 1213.0], [63.4, 1213.0], [63.5, 1220.0], [63.6, 1220.0], [63.7, 1220.0], [63.8, 1235.0], [63.9, 1235.0], [64.0, 1458.0], [64.1, 1458.0], [64.2, 1458.0], [64.3, 1462.0], [64.4, 1462.0], [64.5, 1523.0], [64.6, 1523.0], [64.7, 1523.0], [64.8, 1530.0], [64.9, 1530.0], [65.0, 1538.0], [65.1, 1538.0], [65.2, 1538.0], [65.3, 1541.0], [65.4, 1541.0], [65.5, 1544.0], [65.6, 1544.0], [65.7, 1544.0], [65.8, 1590.0], [65.9, 1590.0], [66.0, 1608.0], [66.1, 1608.0], [66.2, 1608.0], [66.3, 1614.0], [66.4, 1614.0], [66.5, 1631.0], [66.6, 1631.0], [66.7, 1631.0], [66.8, 1649.0], [66.9, 1649.0], [67.0, 1654.0], [67.1, 1654.0], [67.2, 1654.0], [67.3, 1671.0], [67.4, 1671.0], [67.5, 1683.0], [67.6, 1683.0], [67.7, 1683.0], [67.8, 1690.0], [67.9, 1690.0], [68.0, 1694.0], [68.1, 1694.0], [68.2, 1694.0], [68.3, 1702.0], [68.4, 1702.0], [68.5, 1728.0], [68.6, 1728.0], [68.7, 1728.0], [68.8, 1729.0], [68.9, 1729.0], [69.0, 1730.0], [69.1, 1730.0], [69.2, 1730.0], [69.3, 1737.0], [69.4, 1737.0], [69.5, 1738.0], [69.6, 1738.0], [69.7, 1738.0], [69.8, 1739.0], [69.9, 1739.0], [70.0, 1739.0], [70.1, 1739.0], [70.2, 1739.0], [70.3, 1741.0], [70.4, 1741.0], [70.5, 1745.0], [70.6, 1745.0], [70.7, 1745.0], [70.8, 1748.0], [70.9, 1748.0], [71.0, 1750.0], [71.1, 1750.0], [71.2, 1750.0], [71.3, 1751.0], [71.4, 1751.0], [71.5, 1757.0], [71.6, 1757.0], [71.7, 1757.0], [71.8, 1763.0], [71.9, 1763.0], [72.0, 1771.0], [72.1, 1771.0], [72.2, 1771.0], [72.3, 1773.0], [72.4, 1773.0], [72.5, 1775.0], [72.6, 1775.0], [72.7, 1775.0], [72.8, 1777.0], [72.9, 1777.0], [73.0, 1780.0], [73.1, 1780.0], [73.2, 1780.0], [73.3, 1781.0], [73.4, 1781.0], [73.5, 1783.0], [73.6, 1783.0], [73.7, 1783.0], [73.8, 1787.0], [73.9, 1787.0], [74.0, 1787.0], [74.1, 1787.0], [74.2, 1787.0], [74.3, 1794.0], [74.4, 1794.0], [74.5, 1797.0], [74.6, 1797.0], [74.7, 1797.0], [74.8, 1807.0], [74.9, 1807.0], [75.0, 1808.0], [75.1, 1808.0], [75.2, 1808.0], [75.3, 1811.0], [75.4, 1811.0], [75.5, 1811.0], [75.6, 1811.0], [75.7, 1811.0], [75.8, 1812.0], [75.9, 1812.0], [76.0, 1812.0], [76.1, 1812.0], [76.2, 1812.0], [76.3, 1814.0], [76.4, 1814.0], [76.5, 1815.0], [76.6, 1815.0], [76.7, 1815.0], [76.8, 1818.0], [76.9, 1818.0], [77.0, 1819.0], [77.1, 1819.0], [77.2, 1819.0], [77.3, 1821.0], [77.4, 1821.0], [77.5, 1823.0], [77.6, 1823.0], [77.7, 1823.0], [77.8, 1824.0], [77.9, 1824.0], [78.0, 1826.0], [78.1, 1826.0], [78.2, 1826.0], [78.3, 1827.0], [78.4, 1827.0], [78.5, 1827.0], [78.6, 1827.0], [78.7, 1827.0], [78.8, 1828.0], [78.9, 1828.0], [79.0, 1828.0], [79.1, 1828.0], [79.2, 1828.0], [79.3, 1830.0], [79.4, 1830.0], [79.5, 1833.0], [79.6, 1833.0], [79.7, 1833.0], [79.8, 1833.0], [79.9, 1833.0], [80.0, 1836.0], [80.1, 1836.0], [80.2, 1836.0], [80.3, 1837.0], [80.4, 1837.0], [80.5, 1837.0], [80.6, 1837.0], [80.7, 1837.0], [80.8, 1838.0], [80.9, 1838.0], [81.0, 1841.0], [81.1, 1841.0], [81.2, 1841.0], [81.3, 1844.0], [81.4, 1844.0], [81.5, 1845.0], [81.6, 1845.0], [81.7, 1845.0], [81.8, 1853.0], [81.9, 1853.0], [82.0, 1855.0], [82.1, 1855.0], [82.2, 1855.0], [82.3, 1855.0], [82.4, 1855.0], [82.5, 1859.0], [82.6, 1859.0], [82.7, 1859.0], [82.8, 1862.0], [82.9, 1862.0], [83.0, 1863.0], [83.1, 1863.0], [83.2, 1863.0], [83.3, 1864.0], [83.4, 1864.0], [83.5, 1865.0], [83.6, 1865.0], [83.7, 1865.0], [83.8, 1865.0], [83.9, 1865.0], [84.0, 1866.0], [84.1, 1866.0], [84.2, 1866.0], [84.3, 1866.0], [84.4, 1866.0], [84.5, 1867.0], [84.6, 1867.0], [84.7, 1867.0], [84.8, 1868.0], [84.9, 1868.0], [85.0, 1873.0], [85.1, 1873.0], [85.2, 1873.0], [85.3, 1874.0], [85.4, 1874.0], [85.5, 1877.0], [85.6, 1877.0], [85.7, 1877.0], [85.8, 1877.0], [85.9, 1877.0], [86.0, 1881.0], [86.1, 1881.0], [86.2, 1881.0], [86.3, 1884.0], [86.4, 1884.0], [86.5, 1885.0], [86.6, 1885.0], [86.7, 1885.0], [86.8, 1886.0], [86.9, 1886.0], [87.0, 1886.0], [87.1, 1886.0], [87.2, 1886.0], [87.3, 1886.0], [87.4, 1886.0], [87.5, 1887.0], [87.6, 1887.0], [87.7, 1887.0], [87.8, 1891.0], [87.9, 1891.0], [88.0, 1894.0], [88.1, 1894.0], [88.2, 1894.0], [88.3, 1896.0], [88.4, 1896.0], [88.5, 1899.0], [88.6, 1899.0], [88.7, 1899.0], [88.8, 1912.0], [88.9, 1912.0], [89.0, 1920.0], [89.1, 1920.0], [89.2, 1920.0], [89.3, 1930.0], [89.4, 1930.0], [89.5, 1939.0], [89.6, 1939.0], [89.7, 1939.0], [89.8, 1944.0], [89.9, 1944.0], [90.0, 1948.0], [90.1, 1948.0], [90.2, 1948.0], [90.3, 1957.0], [90.4, 1957.0], [90.5, 1965.0], [90.6, 1965.0], [90.7, 1965.0], [90.8, 1967.0], [90.9, 1967.0], [91.0, 1975.0], [91.1, 1975.0], [91.2, 1975.0], [91.3, 1989.0], [91.4, 1989.0], [91.5, 2025.0], [91.6, 2025.0], [91.7, 2025.0], [91.8, 2046.0], [91.9, 2046.0], [92.0, 2065.0], [92.1, 2065.0], [92.2, 2065.0], [92.3, 2113.0], [92.4, 2113.0], [92.5, 2177.0], [92.6, 2177.0], [92.7, 2177.0], [92.8, 2204.0], [92.9, 2204.0], [93.0, 2210.0], [93.1, 2210.0], [93.2, 2210.0], [93.3, 2216.0], [93.4, 2216.0], [93.5, 2229.0], [93.6, 2229.0], [93.7, 2229.0], [93.8, 2229.0], [93.9, 2229.0], [94.0, 2323.0], [94.1, 2323.0], [94.2, 2323.0], [94.3, 2358.0], [94.4, 2358.0], [94.5, 2422.0], [94.6, 2422.0], [94.7, 2422.0], [94.8, 2427.0], [94.9, 2427.0], [95.0, 2432.0], [95.1, 2432.0], [95.2, 2432.0], [95.3, 2519.0], [95.4, 2519.0], [95.5, 2544.0], [95.6, 2544.0], [95.7, 2544.0], [95.8, 2568.0], [95.9, 2568.0], [96.0, 2576.0], [96.1, 2576.0], [96.2, 2576.0], [96.3, 2582.0], [96.4, 2582.0], [96.5, 2626.0], [96.6, 2626.0], [96.7, 2626.0], [96.8, 2636.0], [96.9, 2636.0], [97.0, 2641.0], [97.1, 2641.0], [97.2, 2641.0], [97.3, 2647.0], [97.4, 2647.0], [97.5, 2655.0], [97.6, 2655.0], [97.7, 2655.0], [97.8, 2683.0], [97.9, 2683.0], [98.0, 2733.0], [98.1, 2733.0], [98.2, 2733.0], [98.3, 2810.0], [98.4, 2810.0], [98.5, 2850.0], [98.6, 2850.0], [98.7, 2850.0], [98.8, 2910.0], [98.9, 2910.0], [99.0, 2950.0], [99.1, 2950.0], [99.2, 2950.0], [99.3, 3413.0], [99.4, 3413.0], [99.5, 4314.0], [99.6, 4314.0], [99.7, 4314.0], [99.8, 5411.0], [99.9, 5411.0]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[0.0, 526.0], [0.1, 526.0], [0.2, 526.0], [0.3, 537.0], [0.4, 537.0], [0.5, 539.0], [0.6, 539.0], [0.7, 539.0], [0.8, 540.0], [0.9, 540.0], [1.0, 541.0], [1.1, 541.0], [1.2, 541.0], [1.3, 542.0], [1.4, 542.0], [1.5, 543.0], [1.6, 543.0], [1.7, 543.0], [1.8, 543.0], [1.9, 543.0], [2.0, 545.0], [2.1, 545.0], [2.2, 545.0], [2.3, 545.0], [2.4, 545.0], [2.5, 546.0], [2.6, 546.0], [2.7, 546.0], [2.8, 546.0], [2.9, 546.0], [3.0, 547.0], [3.1, 547.0], [3.2, 547.0], [3.3, 552.0], [3.4, 552.0], [3.5, 557.0], [3.6, 557.0], [3.7, 557.0], [3.8, 563.0], [3.9, 563.0], [4.0, 1033.0], [4.1, 1033.0], [4.2, 1033.0], [4.3, 1042.0], [4.4, 1042.0], [4.5, 1042.0], [4.6, 1042.0], [4.7, 1042.0], [4.8, 1043.0], [4.9, 1043.0], [5.0, 1044.0], [5.1, 1044.0], [5.2, 1044.0], [5.3, 1044.0], [5.4, 1044.0], [5.5, 1044.0], [5.6, 1044.0], [5.7, 1044.0], [5.8, 1044.0], [5.9, 1044.0], [6.0, 1045.0], [6.1, 1045.0], [6.2, 1045.0], [6.3, 1045.0], [6.4, 1045.0], [6.5, 1049.0], [6.6, 1049.0], [6.7, 1049.0], [6.8, 1049.0], [6.9, 1049.0], [7.0, 1050.0], [7.1, 1050.0], [7.2, 1050.0], [7.3, 1050.0], [7.4, 1050.0], [7.5, 1050.0], [7.6, 1050.0], [7.7, 1050.0], [7.8, 1051.0], [7.9, 1051.0], [8.0, 1052.0], [8.1, 1052.0], [8.2, 1052.0], [8.3, 1052.0], [8.4, 1052.0], [8.5, 1053.0], [8.6, 1053.0], [8.7, 1053.0], [8.8, 1053.0], [8.9, 1053.0], [9.0, 1055.0], [9.1, 1055.0], [9.2, 1055.0], [9.3, 1055.0], [9.4, 1055.0], [9.5, 1055.0], [9.6, 1055.0], [9.7, 1055.0], [9.8, 1055.0], [9.9, 1055.0], [10.0, 1055.0], [10.1, 1055.0], [10.2, 1055.0], [10.3, 1058.0], [10.4, 1058.0], [10.5, 1058.0], [10.6, 1058.0], [10.7, 1058.0], [10.8, 1058.0], [10.9, 1058.0], [11.0, 1058.0], [11.1, 1058.0], [11.2, 1058.0], [11.3, 1058.0], [11.4, 1058.0], [11.5, 1058.0], [11.6, 1058.0], [11.7, 1058.0], [11.8, 1058.0], [11.9, 1058.0], [12.0, 1058.0], [12.1, 1058.0], [12.2, 1058.0], [12.3, 1060.0], [12.4, 1060.0], [12.5, 1060.0], [12.6, 1060.0], [12.7, 1060.0], [12.8, 1060.0], [12.9, 1060.0], [13.0, 1060.0], [13.1, 1060.0], [13.2, 1060.0], [13.3, 1061.0], [13.4, 1061.0], [13.5, 1062.0], [13.6, 1062.0], [13.7, 1062.0], [13.8, 1062.0], [13.9, 1062.0], [14.0, 1063.0], [14.1, 1063.0], [14.2, 1063.0], [14.3, 1064.0], [14.4, 1064.0], [14.5, 1064.0], [14.6, 1064.0], [14.7, 1064.0], [14.8, 1064.0], [14.9, 1064.0], [15.0, 1064.0], [15.1, 1064.0], [15.2, 1064.0], [15.3, 1065.0], [15.4, 1065.0], [15.5, 1066.0], [15.6, 1066.0], [15.7, 1066.0], [15.8, 1067.0], [15.9, 1067.0], [16.0, 1067.0], [16.1, 1067.0], [16.2, 1067.0], [16.3, 1067.0], [16.4, 1067.0], [16.5, 1068.0], [16.6, 1068.0], [16.7, 1068.0], [16.8, 1068.0], [16.9, 1068.0], [17.0, 1068.0], [17.1, 1068.0], [17.2, 1068.0], [17.3, 1069.0], [17.4, 1069.0], [17.5, 1069.0], [17.6, 1069.0], [17.7, 1069.0], [17.8, 1069.0], [17.9, 1069.0], [18.0, 1069.0], [18.1, 1069.0], [18.2, 1069.0], [18.3, 1070.0], [18.4, 1070.0], [18.5, 1071.0], [18.6, 1071.0], [18.7, 1071.0], [18.8, 1071.0], [18.9, 1071.0], [19.0, 1071.0], [19.1, 1071.0], [19.2, 1071.0], [19.3, 1071.0], [19.4, 1071.0], [19.5, 1073.0], [19.6, 1073.0], [19.7, 1073.0], [19.8, 1073.0], [19.9, 1073.0], [20.0, 1073.0], [20.1, 1073.0], [20.2, 1073.0], [20.3, 1073.0], [20.4, 1073.0], [20.5, 1074.0], [20.6, 1074.0], [20.7, 1074.0], [20.8, 1075.0], [20.9, 1075.0], [21.0, 1075.0], [21.1, 1075.0], [21.2, 1075.0], [21.3, 1075.0], [21.4, 1075.0], [21.5, 1076.0], [21.6, 1076.0], [21.7, 1076.0], [21.8, 1076.0], [21.9, 1076.0], [22.0, 1076.0], [22.1, 1076.0], [22.2, 1076.0], [22.3, 1077.0], [22.4, 1077.0], [22.5, 1078.0], [22.6, 1078.0], [22.7, 1078.0], [22.8, 1083.0], [22.9, 1083.0], [23.0, 1086.0], [23.1, 1086.0], [23.2, 1086.0], [23.3, 1089.0], [23.4, 1089.0], [23.5, 1092.0], [23.6, 1092.0], [23.7, 1092.0], [23.8, 1096.0], [23.9, 1096.0], [24.0, 1104.0], [24.1, 1104.0], [24.2, 1104.0], [24.3, 1110.0], [24.4, 1110.0], [24.5, 1113.0], [24.6, 1113.0], [24.7, 1113.0], [24.8, 1117.0], [24.9, 1117.0], [25.0, 1120.0], [25.1, 1120.0], [25.2, 1120.0], [25.3, 1124.0], [25.4, 1124.0], [25.5, 1137.0], [25.6, 1137.0], [25.7, 1137.0], [25.8, 1138.0], [25.9, 1138.0], [26.0, 1178.0], [26.1, 1178.0], [26.2, 1178.0], [26.3, 1184.0], [26.4, 1184.0], [26.5, 1462.0], [26.6, 1462.0], [26.7, 1462.0], [26.8, 1491.0], [26.9, 1491.0], [27.0, 1535.0], [27.1, 1535.0], [27.2, 1535.0], [27.3, 1548.0], [27.4, 1548.0], [27.5, 1571.0], [27.6, 1571.0], [27.7, 1571.0], [27.8, 1585.0], [27.9, 1585.0], [28.0, 1588.0], [28.1, 1588.0], [28.2, 1588.0], [28.3, 1589.0], [28.4, 1589.0], [28.5, 1591.0], [28.6, 1591.0], [28.7, 1591.0], [28.8, 1592.0], [28.9, 1592.0], [29.0, 1592.0], [29.1, 1592.0], [29.2, 1592.0], [29.3, 1601.0], [29.4, 1601.0], [29.5, 1616.0], [29.6, 1616.0], [29.7, 1616.0], [29.8, 1618.0], [29.9, 1618.0], [30.0, 1620.0], [30.1, 1620.0], [30.2, 1620.0], [30.3, 1625.0], [30.4, 1625.0], [30.5, 1631.0], [30.6, 1631.0], [30.7, 1631.0], [30.8, 1649.0], [30.9, 1649.0], [31.0, 1652.0], [31.1, 1652.0], [31.2, 1652.0], [31.3, 1654.0], [31.4, 1654.0], [31.5, 1658.0], [31.6, 1658.0], [31.7, 1658.0], [31.8, 1662.0], [31.9, 1662.0], [32.0, 1667.0], [32.1, 1667.0], [32.2, 1667.0], [32.3, 1673.0], [32.4, 1673.0], [32.5, 1685.0], [32.6, 1685.0], [32.7, 1685.0], [32.8, 1690.0], [32.9, 1690.0], [33.0, 1705.0], [33.1, 1705.0], [33.2, 1705.0], [33.3, 1705.0], [33.4, 1705.0], [33.5, 1708.0], [33.6, 1708.0], [33.7, 1708.0], [33.8, 1713.0], [33.9, 1713.0], [34.0, 1717.0], [34.1, 1717.0], [34.2, 1717.0], [34.3, 1731.0], [34.4, 1731.0], [34.5, 1733.0], [34.6, 1733.0], [34.7, 1733.0], [34.8, 1733.0], [34.9, 1733.0], [35.0, 1737.0], [35.1, 1737.0], [35.2, 1737.0], [35.3, 1737.0], [35.4, 1737.0], [35.5, 1738.0], [35.6, 1738.0], [35.7, 1738.0], [35.8, 1741.0], [35.9, 1741.0], [36.0, 1741.0], [36.1, 1741.0], [36.2, 1741.0], [36.3, 1750.0], [36.4, 1750.0], [36.5, 1755.0], [36.6, 1755.0], [36.7, 1755.0], [36.8, 1760.0], [36.9, 1760.0], [37.0, 1764.0], [37.1, 1764.0], [37.2, 1764.0], [37.3, 1775.0], [37.4, 1775.0], [37.5, 1778.0], [37.6, 1778.0], [37.7, 1778.0], [37.8, 1785.0], [37.9, 1785.0], [38.0, 1787.0], [38.1, 1787.0], [38.2, 1787.0], [38.3, 1789.0], [38.4, 1789.0], [38.5, 1794.0], [38.6, 1794.0], [38.7, 1794.0], [38.8, 1799.0], [38.9, 1799.0], [39.0, 1806.0], [39.1, 1806.0], [39.2, 1806.0], [39.3, 1807.0], [39.4, 1807.0], [39.5, 1807.0], [39.6, 1807.0], [39.7, 1807.0], [39.8, 1808.0], [39.9, 1808.0], [40.0, 1810.0], [40.1, 1810.0], [40.2, 1810.0], [40.3, 1811.0], [40.4, 1811.0], [40.5, 1811.0], [40.6, 1811.0], [40.7, 1811.0], [40.8, 1813.0], [40.9, 1813.0], [41.0, 1818.0], [41.1, 1818.0], [41.2, 1818.0], [41.3, 1819.0], [41.4, 1819.0], [41.5, 1820.0], [41.6, 1820.0], [41.7, 1820.0], [41.8, 1821.0], [41.9, 1821.0], [42.0, 1825.0], [42.1, 1825.0], [42.2, 1825.0], [42.3, 1825.0], [42.4, 1825.0], [42.5, 1826.0], [42.6, 1826.0], [42.7, 1826.0], [42.8, 1827.0], [42.9, 1827.0], [43.0, 1828.0], [43.1, 1828.0], [43.2, 1828.0], [43.3, 1830.0], [43.4, 1830.0], [43.5, 1832.0], [43.6, 1832.0], [43.7, 1832.0], [43.8, 1833.0], [43.9, 1833.0], [44.0, 1835.0], [44.1, 1835.0], [44.2, 1835.0], [44.3, 1835.0], [44.4, 1835.0], [44.5, 1836.0], [44.6, 1836.0], [44.7, 1836.0], [44.8, 1842.0], [44.9, 1842.0], [45.0, 1842.0], [45.1, 1842.0], [45.2, 1842.0], [45.3, 1842.0], [45.4, 1842.0], [45.5, 1842.0], [45.6, 1842.0], [45.7, 1842.0], [45.8, 1846.0], [45.9, 1846.0], [46.0, 1851.0], [46.1, 1851.0], [46.2, 1851.0], [46.3, 1859.0], [46.4, 1859.0], [46.5, 1862.0], [46.6, 1862.0], [46.7, 1862.0], [46.8, 1866.0], [46.9, 1866.0], [47.0, 1869.0], [47.1, 1869.0], [47.2, 1869.0], [47.3, 1878.0], [47.4, 1878.0], [47.5, 1881.0], [47.6, 1881.0], [47.7, 1881.0], [47.8, 1882.0], [47.9, 1882.0], [48.0, 1884.0], [48.1, 1884.0], [48.2, 1884.0], [48.3, 1884.0], [48.4, 1884.0], [48.5, 1885.0], [48.6, 1885.0], [48.7, 1885.0], [48.8, 1885.0], [48.9, 1885.0], [49.0, 1885.0], [49.1, 1885.0], [49.2, 1885.0], [49.3, 1886.0], [49.4, 1886.0], [49.5, 1886.0], [49.6, 1886.0], [49.7, 1886.0], [49.8, 1887.0], [49.9, 1887.0], [50.0, 1887.0], [50.1, 1887.0], [50.2, 1887.0], [50.3, 1888.0], [50.4, 1888.0], [50.5, 1888.0], [50.6, 1888.0], [50.7, 1888.0], [50.8, 1888.0], [50.9, 1888.0], [51.0, 1898.0], [51.1, 1898.0], [51.2, 1898.0], [51.3, 1899.0], [51.4, 1899.0], [51.5, 1902.0], [51.6, 1902.0], [51.7, 1902.0], [51.8, 1902.0], [51.9, 1902.0], [52.0, 1906.0], [52.1, 1906.0], [52.2, 1906.0], [52.3, 1909.0], [52.4, 1909.0], [52.5, 1911.0], [52.6, 1911.0], [52.7, 1911.0], [52.8, 1915.0], [52.9, 1915.0], [53.0, 1922.0], [53.1, 1922.0], [53.2, 1922.0], [53.3, 1925.0], [53.4, 1925.0], [53.5, 1927.0], [53.6, 1927.0], [53.7, 1927.0], [53.8, 1934.0], [53.9, 1934.0], [54.0, 1938.0], [54.1, 1938.0], [54.2, 1938.0], [54.3, 1944.0], [54.4, 1944.0], [54.5, 1944.0], [54.6, 1944.0], [54.7, 1944.0], [54.8, 1945.0], [54.9, 1945.0], [55.0, 1947.0], [55.1, 1947.0], [55.2, 1947.0], [55.3, 1948.0], [55.4, 1948.0], [55.5, 1949.0], [55.6, 1949.0], [55.7, 1949.0], [55.8, 1952.0], [55.9, 1952.0], [56.0, 1955.0], [56.1, 1955.0], [56.2, 1955.0], [56.3, 1958.0], [56.4, 1958.0], [56.5, 1963.0], [56.6, 1963.0], [56.7, 1963.0], [56.8, 1963.0], [56.9, 1963.0], [57.0, 1967.0], [57.1, 1967.0], [57.2, 1967.0], [57.3, 1977.0], [57.4, 1977.0], [57.5, 1978.0], [57.6, 1978.0], [57.7, 1978.0], [57.8, 1995.0], [57.9, 1995.0], [58.0, 1997.0], [58.1, 1997.0], [58.2, 1997.0], [58.3, 2008.0], [58.4, 2008.0], [58.5, 2009.0], [58.6, 2009.0], [58.7, 2009.0], [58.8, 2010.0], [58.9, 2010.0], [59.0, 2030.0], [59.1, 2030.0], [59.2, 2030.0], [59.3, 2034.0], [59.4, 2034.0], [59.5, 2040.0], [59.6, 2040.0], [59.7, 2040.0], [59.8, 2052.0], [59.9, 2052.0], [60.0, 2058.0], [60.1, 2058.0], [60.2, 2058.0], [60.3, 2062.0], [60.4, 2062.0], [60.5, 2062.0], [60.6, 2062.0], [60.7, 2062.0], [60.8, 2069.0], [60.9, 2069.0], [61.0, 2078.0], [61.1, 2078.0], [61.2, 2078.0], [61.3, 2083.0], [61.4, 2083.0], [61.5, 2096.0], [61.6, 2096.0], [61.7, 2096.0], [61.8, 2098.0], [61.9, 2098.0], [62.0, 2100.0], [62.1, 2100.0], [62.2, 2100.0], [62.3, 2101.0], [62.4, 2101.0], [62.5, 2110.0], [62.6, 2110.0], [62.7, 2110.0], [62.8, 2114.0], [62.9, 2114.0], [63.0, 2115.0], [63.1, 2115.0], [63.2, 2115.0], [63.3, 2133.0], [63.4, 2133.0], [63.5, 2142.0], [63.6, 2142.0], [63.7, 2142.0], [63.8, 2151.0], [63.9, 2151.0], [64.0, 2182.0], [64.1, 2182.0], [64.2, 2182.0], [64.3, 2193.0], [64.4, 2193.0], [64.5, 2219.0], [64.6, 2219.0], [64.7, 2219.0], [64.8, 2229.0], [64.9, 2229.0], [65.0, 2238.0], [65.1, 2238.0], [65.2, 2238.0], [65.3, 2242.0], [65.4, 2242.0], [65.5, 2256.0], [65.6, 2256.0], [65.7, 2256.0], [65.8, 2271.0], [65.9, 2271.0], [66.0, 2296.0], [66.1, 2296.0], [66.2, 2296.0], [66.3, 2431.0], [66.4, 2431.0], [66.5, 2438.0], [66.6, 2438.0], [66.7, 2438.0], [66.8, 2451.0], [66.9, 2451.0], [67.0, 2454.0], [67.1, 2454.0], [67.2, 2454.0], [67.3, 2470.0], [67.4, 2470.0], [67.5, 2510.0], [67.6, 2510.0], [67.7, 2510.0], [67.8, 2530.0], [67.9, 2530.0], [68.0, 2538.0], [68.1, 2538.0], [68.2, 2538.0], [68.3, 2543.0], [68.4, 2543.0], [68.5, 2552.0], [68.6, 2552.0], [68.7, 2552.0], [68.8, 2555.0], [68.9, 2555.0], [69.0, 2561.0], [69.1, 2561.0], [69.2, 2561.0], [69.3, 2562.0], [69.4, 2562.0], [69.5, 2564.0], [69.6, 2564.0], [69.7, 2564.0], [69.8, 2564.0], [69.9, 2564.0], [70.0, 2570.0], [70.1, 2570.0], [70.2, 2570.0], [70.3, 2581.0], [70.4, 2581.0], [70.5, 2582.0], [70.6, 2582.0], [70.7, 2582.0], [70.8, 2597.0], [70.9, 2597.0], [71.0, 2605.0], [71.1, 2605.0], [71.2, 2605.0], [71.3, 2609.0], [71.4, 2609.0], [71.5, 2614.0], [71.6, 2614.0], [71.7, 2614.0], [71.8, 2615.0], [71.9, 2615.0], [72.0, 2616.0], [72.1, 2616.0], [72.2, 2616.0], [72.3, 2622.0], [72.4, 2622.0], [72.5, 2623.0], [72.6, 2623.0], [72.7, 2623.0], [72.8, 2624.0], [72.9, 2624.0], [73.0, 2626.0], [73.1, 2626.0], [73.2, 2626.0], [73.3, 2630.0], [73.4, 2630.0], [73.5, 2642.0], [73.6, 2642.0], [73.7, 2642.0], [73.8, 2642.0], [73.9, 2642.0], [74.0, 2645.0], [74.1, 2645.0], [74.2, 2645.0], [74.3, 2653.0], [74.4, 2653.0], [74.5, 2654.0], [74.6, 2654.0], [74.7, 2654.0], [74.8, 2661.0], [74.9, 2661.0], [75.0, 2662.0], [75.1, 2662.0], [75.2, 2662.0], [75.3, 2675.0], [75.4, 2675.0], [75.5, 2676.0], [75.6, 2676.0], [75.7, 2676.0], [75.8, 2678.0], [75.9, 2678.0], [76.0, 2695.0], [76.1, 2695.0], [76.2, 2695.0], [76.3, 2699.0], [76.4, 2699.0], [76.5, 2706.0], [76.6, 2706.0], [76.7, 2706.0], [76.8, 2706.0], [76.9, 2706.0], [77.0, 2709.0], [77.1, 2709.0], [77.2, 2709.0], [77.3, 2710.0], [77.4, 2710.0], [77.5, 2712.0], [77.6, 2712.0], [77.7, 2712.0], [77.8, 2715.0], [77.9, 2715.0], [78.0, 2715.0], [78.1, 2715.0], [78.2, 2715.0], [78.3, 2716.0], [78.4, 2716.0], [78.5, 2716.0], [78.6, 2716.0], [78.7, 2716.0], [78.8, 2719.0], [78.9, 2719.0], [79.0, 2722.0], [79.1, 2722.0], [79.2, 2722.0], [79.3, 2729.0], [79.4, 2729.0], [79.5, 2729.0], [79.6, 2729.0], [79.7, 2729.0], [79.8, 2735.0], [79.9, 2735.0], [80.0, 2741.0], [80.1, 2741.0], [80.2, 2741.0], [80.3, 2757.0], [80.4, 2757.0], [80.5, 2762.0], [80.6, 2762.0], [80.7, 2762.0], [80.8, 2783.0], [80.9, 2783.0], [81.0, 2785.0], [81.1, 2785.0], [81.2, 2785.0], [81.3, 2888.0], [81.4, 2888.0], [81.5, 2922.0], [81.6, 2922.0], [81.7, 2922.0], [81.8, 2982.0], [81.9, 2982.0], [82.0, 3050.0], [82.1, 3050.0], [82.2, 3050.0], [82.3, 3056.0], [82.4, 3056.0], [82.5, 3076.0], [82.6, 3076.0], [82.7, 3076.0], [82.8, 3084.0], [82.9, 3084.0], [83.0, 3117.0], [83.1, 3117.0], [83.2, 3117.0], [83.3, 3139.0], [83.4, 3139.0], [83.5, 3146.0], [83.6, 3146.0], [83.7, 3146.0], [83.8, 3235.0], [83.9, 3235.0], [84.0, 3242.0], [84.1, 3242.0], [84.2, 3242.0], [84.3, 3257.0], [84.4, 3257.0], [84.5, 3261.0], [84.6, 3261.0], [84.7, 3261.0], [84.8, 3265.0], [84.9, 3265.0], [85.0, 3279.0], [85.1, 3279.0], [85.2, 3279.0], [85.3, 3341.0], [85.4, 3341.0], [85.5, 3342.0], [85.6, 3342.0], [85.7, 3342.0], [85.8, 3385.0], [85.9, 3385.0], [86.0, 3419.0], [86.1, 3419.0], [86.2, 3419.0], [86.3, 3427.0], [86.4, 3427.0], [86.5, 3439.0], [86.6, 3439.0], [86.7, 3439.0], [86.8, 3445.0], [86.9, 3445.0], [87.0, 3447.0], [87.1, 3447.0], [87.2, 3447.0], [87.3, 3453.0], [87.4, 3453.0], [87.5, 3453.0], [87.6, 3453.0], [87.7, 3453.0], [87.8, 3493.0], [87.9, 3493.0], [88.0, 3495.0], [88.1, 3495.0], [88.2, 3495.0], [88.3, 3527.0], [88.4, 3527.0], [88.5, 3533.0], [88.6, 3533.0], [88.7, 3533.0], [88.8, 3539.0], [88.9, 3539.0], [89.0, 3621.0], [89.1, 3621.0], [89.2, 3621.0], [89.3, 3646.0], [89.4, 3646.0], [89.5, 3731.0], [89.6, 3731.0], [89.7, 3731.0], [89.8, 3736.0], [89.9, 3736.0], [90.0, 3760.0], [90.1, 3760.0], [90.2, 3760.0], [90.3, 3800.0], [90.4, 3800.0], [90.5, 3860.0], [90.6, 3860.0], [90.7, 3860.0], [90.8, 3870.0], [90.9, 3870.0], [91.0, 3890.0], [91.1, 3890.0], [91.2, 3890.0], [91.3, 3893.0], [91.4, 3893.0], [91.5, 3901.0], [91.6, 3901.0], [91.7, 3901.0], [91.8, 3902.0], [91.9, 3902.0], [92.0, 3911.0], [92.1, 3911.0], [92.2, 3911.0], [92.3, 4144.0], [92.4, 4144.0], [92.5, 4148.0], [92.6, 4148.0], [92.7, 4148.0], [92.8, 4265.0], [92.9, 4265.0], [93.0, 4279.0], [93.1, 4279.0], [93.2, 4279.0], [93.3, 4673.0], [93.4, 4673.0], [93.5, 4678.0], [93.6, 4678.0], [93.7, 4678.0], [93.8, 4679.0], [93.9, 4679.0], [94.0, 4683.0], [94.1, 4683.0], [94.2, 4683.0], [94.3, 4684.0], [94.4, 4684.0], [94.5, 4723.0], [94.6, 4723.0], [94.7, 4723.0], [94.8, 4812.0], [94.9, 4812.0], [95.0, 4822.0], [95.1, 4822.0], [95.2, 4822.0], [95.3, 4826.0], [95.4, 4826.0], [95.5, 4830.0], [95.6, 4830.0], [95.7, 4830.0], [95.8, 4832.0], [95.9, 4832.0], [96.0, 4838.0], [96.1, 4838.0], [96.2, 4838.0], [96.3, 4847.0], [96.4, 4847.0], [96.5, 4921.0], [96.6, 4921.0], [96.7, 4921.0], [96.8, 4935.0], [96.9, 4935.0], [97.0, 4967.0], [97.1, 4967.0], [97.2, 4967.0], [97.3, 4977.0], [97.4, 4977.0], [97.5, 4988.0], [97.6, 4988.0], [97.7, 4988.0], [97.8, 5025.0], [97.9, 5025.0], [98.0, 5051.0], [98.1, 5051.0], [98.2, 5051.0], [98.3, 5058.0], [98.4, 5058.0], [98.5, 5130.0], [98.6, 5130.0], [98.7, 5130.0], [98.8, 5153.0], [98.9, 5153.0], [99.0, 7957.0], [99.1, 7957.0], [99.2, 7957.0], [99.3, 8317.0], [99.4, 8317.0], [99.5, 8321.0], [99.6, 8321.0], [99.7, 8321.0], [99.8, 8347.0], [99.9, 8347.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 240.0, "series": [{"data": [[9000.0, 18.0], [9500.0, 18.0], [2500.0, 8.0], [3000.0, 12.0], [13500.0, 19.0], [3500.0, 19.0], [14000.0, 14.0], [14500.0, 8.0], [15000.0, 8.0], [1000.0, 15.0], [4000.0, 28.0], [16000.0, 5.0], [16500.0, 1.0], [4500.0, 33.0], [5000.0, 59.0], [5500.0, 37.0], [1500.0, 1.0], [6000.0, 29.0], [6500.0, 22.0], [7500.0, 9.0], [8000.0, 37.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 240.0], [4500.0, 7.0], [5000.0, 1.0], [1500.0, 54.0], [14000.0, 1.0], [500.0, 15.0], [8000.0, 5.0], [2000.0, 7.0], [1000.0, 70.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[0.0, 232.0], [5000.0, 1.0], [2500.0, 16.0], [1500.0, 108.0], [3000.0, 1.0], [2000.0, 15.0], [1000.0, 26.0], [4000.0, 1.0]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[4500.0, 18.0], [2500.0, 58.0], [5000.0, 5.0], [3000.0, 25.0], [1500.0, 125.0], [3500.0, 16.0], [7500.0, 1.0], [500.0, 16.0], [4000.0, 4.0], [2000.0, 37.0], [1000.0, 92.0], [8000.0, 3.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 500, "maxX": 16500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 234.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 894.0, "series": [{"data": [[1.0, 234.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[0.0, 472.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 894.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4.75, "minX": 1.60814412E12, "maxY": 271.04911838790974, "series": [{"data": [[1.60814412E12, 271.04911838790974], [1.60814418E12, 4.75]], "isOverall": false, "label": "Slypee", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814418E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 264.0, "minX": 1.0, "maxY": 16475.333333333336, "series": [{"data": [[56.0, 14972.937499999996], [59.0, 13989.18181818182], [239.0, 9481.0], [238.0, 9495.0], [241.0, 9497.0], [255.0, 9575.0], [251.0, 9460.0], [263.0, 9564.0], [261.0, 9480.75], [260.0, 9556.4], [259.0, 9523.0], [258.0, 9811.0], [256.0, 9565.0], [275.0, 6391.25], [276.0, 2393.714285714286], [274.0, 9697.0], [330.0, 9042.0], [336.0, 1601.0], [351.0, 8093.0], [349.0, 8103.0], [361.0, 8226.714285714286], [359.0, 8328.0], [356.0, 7916.0], [355.0, 7927.0], [353.0, 7949.0], [352.0, 7996.142857142858], [22.0, 16475.333333333336], [375.0, 8251.0], [372.0, 8267.166666666666], [370.0, 8321.5], [369.0, 8231.833333333334], [368.0, 8154.0], [399.0, 4550.957317073169], [397.0, 5683.125], [392.0, 5866.642857142855], [391.0, 6497.393939393939]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[328.8174999999997, 6977.3674999999985]], "isOverall": false, "label": "HomePage-Aggregated", "isController": false}, {"data": [[2.0, 271.0], [3.0, 268.0], [4.0, 270.0], [5.0, 268.0], [6.0, 269.0], [7.0, 294.0], [8.0, 298.0], [9.0, 290.0], [10.0, 292.0], [11.0, 293.0], [12.0, 286.0], [13.0, 285.0], [14.0, 293.0], [15.0, 297.0], [16.0, 287.0], [17.0, 283.0], [18.0, 289.0], [19.0, 295.0], [20.0, 288.0], [22.0, 280.5], [23.0, 328.0], [24.0, 345.0], [25.0, 339.0], [26.0, 326.0], [27.0, 321.0], [28.0, 319.0], [29.0, 316.0], [30.0, 14303.0], [31.0, 311.0], [33.0, 321.0], [32.0, 325.0], [35.0, 306.0], [34.0, 322.0], [37.0, 320.0], [36.0, 325.0], [39.0, 312.0], [38.0, 315.0], [41.0, 295.0], [40.0, 312.0], [43.0, 316.0], [42.0, 294.0], [45.0, 299.0], [44.0, 306.0], [47.0, 294.0], [46.0, 305.0], [49.0, 305.0], [48.0, 292.0], [51.0, 292.0], [50.0, 283.0], [53.0, 266.0], [52.0, 281.0], [55.0, 268.0], [54.0, 267.0], [57.0, 316.0], [56.0, 265.0], [59.0, 299.0], [58.0, 303.0], [61.0, 270.0], [60.0, 267.0], [63.0, 266.0], [62.0, 267.0], [67.0, 1050.0], [66.0, 264.0], [65.0, 1032.0], [64.0, 1063.0], [71.0, 271.0], [70.0, 287.0], [69.0, 269.0], [68.0, 268.0], [75.0, 271.0], [74.0, 274.0], [73.0, 271.0], [72.0, 284.0], [79.0, 282.0], [78.0, 269.0], [77.0, 281.0], [76.0, 276.0], [83.0, 270.0], [82.0, 289.0], [81.0, 275.0], [80.0, 289.0], [87.0, 267.0], [86.0, 270.0], [85.0, 273.0], [84.0, 278.0], [91.0, 273.0], [90.0, 274.0], [89.0, 270.0], [88.0, 267.0], [95.0, 1057.0], [94.0, 1057.0], [93.0, 267.0], [92.0, 276.0], [99.0, 271.0], [98.0, 270.0], [97.0, 268.0], [96.0, 1054.0], [103.0, 1051.0], [102.0, 267.0], [101.0, 1039.0], [100.0, 1049.0], [107.0, 1045.0], [106.0, 1045.0], [105.0, 1047.0], [104.0, 1054.0], [111.0, 270.0], [110.0, 267.0], [109.0, 267.0], [108.0, 1041.0], [115.0, 277.0], [114.0, 1047.0], [113.0, 1054.0], [112.0, 1055.0], [119.0, 277.0], [118.0, 277.0], [117.0, 1056.0], [116.0, 286.0], [123.0, 1089.0], [122.0, 272.0], [121.0, 1050.0], [120.0, 274.0], [127.0, 1058.0], [126.0, 1060.0], [125.0, 1068.0], [124.0, 283.0], [135.0, 1059.0], [134.0, 1043.0], [133.0, 275.0], [132.0, 1047.0], [131.0, 1046.0], [130.0, 272.0], [129.0, 269.0], [128.0, 1054.0], [143.0, 267.0], [142.0, 1047.0], [141.0, 1062.0], [140.0, 1057.0], [139.0, 1059.0], [138.0, 1057.0], [137.0, 1060.0], [136.0, 1060.0], [151.0, 286.0], [150.0, 1074.0], [149.0, 1085.0], [148.0, 1060.0], [147.0, 1073.0], [146.0, 1071.0], [145.0, 1050.0], [144.0, 1058.0], [159.0, 272.0], [158.0, 268.0], [157.0, 270.0], [156.0, 269.0], [155.0, 267.0], [154.0, 1051.0], [153.0, 1058.0], [152.0, 1067.0], [167.0, 284.0], [166.0, 285.0], [165.0, 276.0], [164.0, 271.0], [163.0, 1065.0], [162.0, 281.0], [161.0, 286.0], [160.0, 1049.0], [175.0, 271.0], [174.0, 324.0], [173.0, 271.0], [172.0, 267.0], [171.0, 280.0], [170.0, 279.0], [169.0, 281.0], [168.0, 281.0], [183.0, 1187.0], [182.0, 1183.0], [181.0, 1049.0], [180.0, 1142.0], [179.0, 1073.0], [178.0, 283.0], [177.0, 289.0], [176.0, 303.0], [191.0, 1320.0], [190.0, 1293.0], [189.0, 1160.0], [188.0, 1165.0], [187.0, 1155.0], [186.0, 1086.0], [185.0, 1152.0], [184.0, 1091.0], [199.0, 303.0], [198.0, 2288.0], [197.0, 275.0], [196.0, 282.0], [195.0, 281.0], [194.0, 277.0], [193.0, 283.0], [192.0, 1236.0], [207.0, 1527.0], [206.0, 1530.0], [205.0, 2254.0], [204.0, 2252.0], [203.0, 277.0], [202.0, 320.0], [201.0, 304.0], [200.0, 2280.0], [215.0, 1497.0], [214.0, 1507.0], [213.0, 1511.0], [212.0, 1515.0], [211.0, 1527.0], [210.0, 1503.0], [209.0, 1525.0], [208.0, 1525.0], [223.0, 1475.0], [222.0, 1539.0], [221.0, 1494.0], [220.0, 1423.0], [219.0, 269.0], [218.0, 1440.0], [217.0, 1451.0], [216.0, 1487.0], [231.0, 1514.0], [230.0, 1513.0], [229.0, 1515.0], [228.0, 1514.0], [227.0, 1546.0], [226.0, 1520.0], [225.0, 1549.0], [224.0, 1529.0], [239.0, 1470.0], [238.0, 1786.0], [237.0, 1647.0], [236.0, 1807.0], [235.0, 1535.0], [234.0, 1488.0], [233.0, 1505.0], [232.0, 1511.0], [247.0, 1841.0], [246.0, 1856.0], [245.0, 1849.0], [244.0, 1793.0], [243.0, 294.0], [242.0, 1620.0], [241.0, 1522.0], [240.0, 1578.0], [255.0, 270.0], [254.0, 1816.0], [253.0, 289.0], [252.0, 2219.0], [251.0, 2275.0], [250.0, 1887.0], [249.0, 1894.0], [248.0, 1840.0], [270.0, 268.0], [271.0, 274.0], [269.0, 270.0], [268.0, 286.0], [267.0, 285.0], [266.0, 304.0], [265.0, 1901.0], [264.0, 301.0], [263.0, 1794.0], [257.0, 1940.0], [256.0, 1938.0], [259.0, 1792.0], [258.0, 2135.0], [262.0, 1744.0], [261.0, 1944.0], [260.0, 1783.0], [286.0, 644.0], [287.0, 578.0], [285.0, 555.0], [284.0, 405.0], [283.0, 377.0], [282.0, 1706.0], [281.0, 8285.0], [280.0, 8287.0], [279.0, 8290.0], [273.0, 1902.0], [272.0, 1905.0], [275.0, 912.0], [274.0, 910.0], [278.0, 1759.0], [277.0, 8315.0], [276.0, 8327.0], [302.0, 317.0], [303.0, 414.0], [301.0, 424.0], [300.0, 358.0], [299.0, 362.0], [298.0, 333.0], [297.0, 622.0], [296.0, 428.0], [295.0, 418.0], [289.0, 494.0], [288.0, 580.0], [291.0, 430.0], [290.0, 450.0], [294.0, 480.0], [293.0, 647.0], [292.0, 626.0], [318.0, 424.0], [319.0, 377.0], [317.0, 442.0], [316.0, 332.5], [315.0, 411.0], [313.0, 583.0], [312.0, 586.0], [311.0, 423.0], [305.0, 501.0], [304.0, 371.0], [307.0, 407.0], [306.0, 472.0], [310.0, 592.0], [308.0, 571.0], [334.0, 1855.0], [335.0, 419.0], [333.0, 1774.0], [332.0, 1811.0], [331.0, 1865.0], [330.0, 1790.0], [329.0, 287.0], [328.0, 392.0], [327.0, 346.0], [321.0, 541.0], [320.0, 364.0], [323.0, 335.0], [322.0, 352.0], [326.0, 428.0], [325.0, 1912.0], [324.0, 499.0], [350.0, 349.0], [351.0, 350.0], [349.0, 326.0], [348.0, 274.0], [347.0, 279.0], [346.0, 277.0], [345.0, 290.0], [344.0, 289.0], [343.0, 299.0], [337.0, 446.0], [336.0, 430.0], [339.0, 337.0], [338.0, 354.0], [342.0, 274.0], [341.0, 315.0], [340.0, 328.0], [366.0, 331.0], [367.0, 320.0], [365.0, 336.0], [364.0, 349.0], [363.0, 316.0], [362.0, 355.0], [361.0, 300.0], [360.0, 330.0], [359.0, 1809.0], [353.0, 270.0], [352.0, 270.0], [355.0, 292.0], [354.0, 267.0], [358.0, 280.0], [357.0, 266.0], [356.0, 289.0], [382.0, 291.0], [383.0, 302.0], [381.0, 299.0], [380.0, 291.0], [379.0, 308.0], [378.0, 305.0], [377.0, 307.0], [376.0, 306.0], [375.0, 305.0], [369.0, 318.0], [368.0, 333.0], [371.0, 267.0], [370.0, 281.0], [374.0, 317.0], [373.0, 307.0], [372.0, 269.0], [398.0, 4610.0], [399.0, 4572.0], [397.0, 4729.0], [396.0, 4708.0], [395.0, 4707.0], [394.0, 4700.0], [393.0, 4701.0], [392.0, 5496.0], [391.0, 285.0], [385.0, 299.0], [384.0, 291.0], [387.0, 284.0], [386.0, 293.0], [390.0, 302.0], [389.0, 310.0], [388.0, 293.0], [400.0, 273.0], [1.0, 272.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[200.51250000000027, 908.7500000000001]], "isOverall": false, "label": "Detail Category Page-Aggregated", "isController": false}, {"data": [[6.0, 268.6666666666667], [22.0, 289.62500000000006], [57.0, 330.0], [56.0, 354.0], [59.0, 416.23809523809524], [58.0, 312.25], [68.0, 462.25], [111.0, 266.5], [123.0, 285.0], [127.0, 664.0], [125.0, 1047.0], [124.0, 539.0], [134.0, 269.14285714285717], [133.0, 429.2], [130.0, 270.0], [129.0, 272.0], [128.0, 1055.0], [142.0, 270.0], [141.0, 270.0], [151.0, 282.6666666666667], [150.0, 278.5], [145.0, 1062.3333333333333], [158.0, 1075.0], [156.0, 267.0], [153.0, 1053.0], [152.0, 277.0], [165.0, 268.0], [183.0, 1213.0], [181.0, 1220.0], [179.0, 1235.0], [191.0, 2672.3333333333335], [190.0, 1151.0], [188.0, 1171.0], [187.0, 1163.0], [199.0, 313.7142857142857], [197.0, 275.5], [203.0, 293.0], [200.0, 297.0], [214.0, 275.0], [212.0, 282.0], [210.0, 1523.0], [223.0, 1530.0], [221.0, 1544.0], [220.0, 280.0], [219.0, 296.5], [218.0, 275.0], [226.0, 278.8], [225.0, 1512.3333333333333], [239.0, 1387.6666666666665], [238.0, 1347.0], [237.0, 2061.0], [235.0, 1649.0], [244.0, 281.0], [243.0, 586.5625], [241.0, 1590.0], [255.0, 2204.3333333333335], [254.0, 3413.0], [252.0, 2229.0], [251.0, 2210.0], [249.0, 268.0], [263.0, 2683.0], [260.0, 2850.0], [259.0, 1853.0], [281.0, 2003.4285714285716], [277.0, 2025.0], [276.0, 1024.0], [275.0, 864.4], [302.0, 414.0], [317.0, 386.0], [334.0, 1885.75], [333.0, 1783.0], [332.0, 1782.3333333333333], [321.0, 367.0], [348.0, 1376.7272727272727], [351.0, 1499.5454545454545], [350.0, 339.0], [349.0, 873.6666666666667], [347.0, 1560.0], [343.0, 293.0], [337.0, 1326.6666666666667], [339.0, 1655.2857142857142], [338.0, 953.4], [342.0, 1985.5], [341.0, 1785.0000000000002], [340.0, 1687.888888888889], [354.0, 275.8333333333333], [366.0, 292.0], [361.0, 647.625], [360.0, 1148.1666666666665], [359.0, 317.0], [358.0, 1815.6666666666667], [357.0, 789.0], [356.0, 1051.75], [353.0, 270.0], [352.0, 1039.5], [382.0, 1357.3333333333335], [377.0, 308.0], [372.0, 1934.5], [370.0, 266.0], [369.0, 2046.0], [368.0, 269.0], [392.0, 5411.0], [391.0, 1415.6666666666667], [390.0, 803.3333333333333], [389.0, 299.0], [388.0, 689.25], [387.0, 281.0], [385.0, 307.0], [384.0, 290.5], [400.0, 288.66666666666663]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[255.58500000000018, 954.565]], "isOverall": false, "label": "Category Page-Aggregated", "isController": false}, {"data": [[6.0, 1047.1666666666667], [22.0, 1067.8125], [59.0, 1686.861111111111], [111.0, 1075.0], [113.0, 1055.0], [120.0, 1050.0], [145.0, 1052.0], [159.0, 1057.25], [156.0, 1051.3333333333333], [154.0, 1064.75], [164.0, 1044.0], [163.0, 1058.0], [162.0, 1056.0], [161.0, 1048.0], [160.0, 1057.75], [183.0, 1184.0], [179.0, 1056.0], [178.0, 1058.0], [184.0, 1178.0], [199.0, 2470.0], [197.0, 1491.0], [227.0, 1535.0], [225.0, 1548.0], [239.0, 1577.3333333333333], [237.0, 1601.0], [235.0, 1652.0], [234.0, 1662.0], [247.0, 1886.5], [246.0, 1887.0], [244.0, 1832.0], [243.0, 3661.888888888889], [241.0, 2859.4], [255.0, 2010.0], [253.0, 1813.0], [252.0, 2165.0], [251.0, 2796.0], [250.0, 1891.3333333333333], [265.0, 1814.0], [264.0, 1883.3333333333333], [263.0, 1810.6666666666667], [261.0, 1853.0], [260.0, 1965.0], [259.0, 1810.0], [282.0, 4832.0], [281.0, 3276.0], [280.0, 2030.0], [278.0, 2062.0], [276.0, 2052.0], [275.0, 2069.0], [317.0, 1917.0], [311.0, 1941.5], [325.0, 1888.0], [324.0, 1923.5], [321.0, 1948.0], [351.0, 3416.5], [348.0, 3356.0], [347.0, 2570.0], [342.0, 2597.0], [341.0, 1825.0], [340.0, 1828.0], [339.0, 2645.0], [338.0, 1842.0], [361.0, 1877.0], [360.0, 1617.0], [359.0, 1636.6], [358.0, 1745.6666666666667], [357.0, 1775.5], [356.0, 1827.0], [354.0, 4921.0], [353.0, 4967.0], [352.0, 2173.444444444444], [382.0, 2457.2307692307686], [372.0, 1938.2857142857142], [369.0, 3549.0], [399.0, 3750.8], [398.0, 3050.0], [397.0, 3414.8823529411766], [392.0, 2995.1], [391.0, 2594.7441860465115], [390.0, 2558.5], [389.0, 2566.5], [388.0, 3779.5], [384.0, 2609.0], [400.0, 544.4999999999999]], "isOverall": false, "label": "Detail Game Page", "isController": false}, {"data": [[291.29249999999996, 2182.359999999997]], "isOverall": false, "label": "Detail Game Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 400.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 37.4, "minX": 1.60814412E12, "maxY": 1500403.0, "series": [{"data": [[1.60814412E12, 1500403.0], [1.60814418E12, 9977.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.60814412E12, 4489.266666666666], [1.60814418E12, 37.4]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814418E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 268.6666666666667, "minX": 1.60814412E12, "maxY": 6977.3674999999985, "series": [{"data": [[1.60814412E12, 6977.3674999999985]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60814412E12, 918.4822335025382], [1.60814418E12, 269.66666666666663]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60814412E12, 965.010152284264], [1.60814418E12, 268.6666666666667]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60814412E12, 2182.359999999997]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814418E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 267.3333333333333, "minX": 1.60814412E12, "maxY": 6462.442500000002, "series": [{"data": [[1.60814412E12, 6462.442500000002]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60814412E12, 724.4187817258883], [1.60814418E12, 268.5]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60814412E12, 741.4213197969547], [1.60814418E12, 267.3333333333333]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60814412E12, 1675.2899999999997]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814418E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.60814412E12, "maxY": 1717.9850000000013, "series": [{"data": [[1.60814412E12, 1717.9850000000013]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60814412E12, 95.30964467005074], [1.60814418E12, 0.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60814412E12, 125.77411167512683], [1.60814418E12, 0.0]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60814412E12, 353.3699999999999]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814418E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 264.0, "minX": 1.60814412E12, "maxY": 16516.0, "series": [{"data": [[1.60814412E12, 16516.0], [1.60814418E12, 272.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.60814412E12, 264.0], [1.60814418E12, 267.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.60814412E12, 6698.3], [1.60814418E12, 6680.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.60814412E12, 14916.99], [1.60814418E12, 14915.96]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.60814412E12, 9477.75], [1.60814418E12, 9474.95]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814418E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 269.0, "minX": 0.0, "maxY": 1767.5, "series": [{"data": [[0.0, 269.0], [26.0, 1767.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 26.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 268.0, "minX": 0.0, "maxY": 1250.5, "series": [{"data": [[0.0, 268.0], [26.0, 1250.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 26.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.60814412E12, "maxY": 26.566666666666666, "series": [{"data": [[1.60814412E12, 26.566666666666666], [1.60814418E12, 0.1]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814418E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.2, "minX": 1.60814412E12, "maxY": 26.466666666666665, "series": [{"data": [[1.60814412E12, 26.466666666666665], [1.60814418E12, 0.2]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814418E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.60814412E12, "maxY": 6.666666666666667, "series": [{"data": [[1.60814412E12, 6.566666666666666], [1.60814418E12, 0.1]], "isOverall": false, "label": "Category Page-success", "isController": false}, {"data": [[1.60814412E12, 6.566666666666666], [1.60814418E12, 0.1]], "isOverall": false, "label": "Detail Category Page-success", "isController": false}, {"data": [[1.60814412E12, 6.666666666666667]], "isOverall": false, "label": "Detail Game Page-success", "isController": false}, {"data": [[1.60814412E12, 6.666666666666667]], "isOverall": false, "label": "HomePage-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814418E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
