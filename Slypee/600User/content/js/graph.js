/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? 0 : 0;
        var yOffset = options.yaxis.mode === "time" ? 0 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 263.0, "minX": 0.0, "maxY": 17016.0, "series": [{"data": [[0.0, 1073.0], [0.1, 1073.0], [0.2, 1140.0], [0.3, 1140.0], [0.4, 1152.0], [0.5, 1153.0], [0.6, 1153.0], [0.7, 1157.0], [0.8, 1157.0], [0.9, 1186.0], [1.0, 1191.0], [1.1, 1191.0], [1.2, 1221.0], [1.3, 1221.0], [1.4, 1234.0], [1.5, 1238.0], [1.6, 1238.0], [1.7, 1285.0], [1.8, 1285.0], [1.9, 1315.0], [2.0, 1329.0], [2.1, 1329.0], [2.2, 1436.0], [2.3, 1436.0], [2.4, 1485.0], [2.5, 1608.0], [2.6, 1608.0], [2.7, 2522.0], [2.8, 2522.0], [2.9, 2595.0], [3.0, 2765.0], [3.1, 2765.0], [3.2, 2785.0], [3.3, 2785.0], [3.4, 2814.0], [3.5, 2818.0], [3.6, 2818.0], [3.7, 2852.0], [3.8, 2852.0], [3.9, 2864.0], [4.0, 2891.0], [4.1, 2891.0], [4.2, 2892.0], [4.3, 2892.0], [4.4, 2894.0], [4.5, 2910.0], [4.6, 2910.0], [4.7, 2915.0], [4.8, 2915.0], [4.9, 2945.0], [5.0, 3029.0], [5.1, 3029.0], [5.2, 3068.0], [5.3, 3068.0], [5.4, 3071.0], [5.5, 3071.0], [5.6, 3099.0], [5.7, 3419.0], [5.8, 3419.0], [5.9, 3536.0], [6.0, 3536.0], [6.1, 3538.0], [6.2, 3610.0], [6.3, 3610.0], [6.4, 3627.0], [6.5, 3627.0], [6.6, 3643.0], [6.7, 3652.0], [6.8, 3652.0], [6.9, 3693.0], [7.0, 3693.0], [7.1, 3841.0], [7.2, 3875.0], [7.3, 3875.0], [7.4, 3883.0], [7.5, 3883.0], [7.6, 3895.0], [7.7, 3907.0], [7.8, 3907.0], [7.9, 3920.0], [8.0, 3920.0], [8.1, 3921.0], [8.2, 3931.0], [8.3, 3931.0], [8.4, 3934.0], [8.5, 3934.0], [8.6, 3938.0], [8.7, 3972.0], [8.8, 3972.0], [8.9, 4067.0], [9.0, 4067.0], [9.1, 4181.0], [9.2, 4194.0], [9.3, 4194.0], [9.4, 4203.0], [9.5, 4321.0], [9.6, 4321.0], [9.7, 4355.0], [9.8, 4355.0], [9.9, 4462.0], [10.0, 4467.0], [10.1, 4467.0], [10.2, 4543.0], [10.3, 4543.0], [10.4, 4615.0], [10.5, 4635.0], [10.6, 4635.0], [10.7, 4714.0], [10.8, 4714.0], [10.9, 4717.0], [11.0, 4725.0], [11.1, 4725.0], [11.2, 4725.0], [11.3, 4725.0], [11.4, 4727.0], [11.5, 4729.0], [11.6, 4729.0], [11.7, 4731.0], [11.8, 4731.0], [11.9, 4736.0], [12.0, 4738.0], [12.1, 4738.0], [12.2, 4739.0], [12.3, 4739.0], [12.4, 4768.0], [12.5, 4869.0], [12.6, 4869.0], [12.7, 4870.0], [12.8, 4870.0], [12.9, 4884.0], [13.0, 4890.0], [13.1, 4890.0], [13.2, 4904.0], [13.3, 4904.0], [13.4, 4916.0], [13.5, 4916.0], [13.6, 4916.0], [13.7, 4919.0], [13.8, 4919.0], [13.9, 4921.0], [14.0, 4921.0], [14.1, 4921.0], [14.2, 4925.0], [14.3, 4925.0], [14.4, 4926.0], [14.5, 4926.0], [14.6, 4926.0], [14.7, 4927.0], [14.8, 4927.0], [14.9, 4929.0], [15.0, 4935.0], [15.1, 4935.0], [15.2, 4940.0], [15.3, 4940.0], [15.4, 4942.0], [15.5, 4943.0], [15.6, 4943.0], [15.7, 4950.0], [15.8, 4950.0], [15.9, 4962.0], [16.0, 4963.0], [16.1, 4963.0], [16.2, 4965.0], [16.3, 4965.0], [16.4, 4977.0], [16.5, 4980.0], [16.6, 4980.0], [16.7, 4984.0], [16.8, 4984.0], [16.9, 4993.0], [17.0, 5091.0], [17.1, 5091.0], [17.2, 5120.0], [17.3, 5120.0], [17.4, 5127.0], [17.5, 5132.0], [17.6, 5132.0], [17.7, 5155.0], [17.8, 5155.0], [17.9, 5157.0], [18.0, 5159.0], [18.1, 5159.0], [18.2, 5166.0], [18.3, 5166.0], [18.4, 5199.0], [18.5, 5224.0], [18.6, 5224.0], [18.7, 5225.0], [18.8, 5225.0], [18.9, 5231.0], [19.0, 5231.0], [19.1, 5246.0], [19.2, 5345.0], [19.3, 5345.0], [19.4, 5345.0], [19.5, 5345.0], [19.6, 5373.0], [19.7, 5375.0], [19.8, 5375.0], [19.9, 5378.0], [20.0, 5378.0], [20.1, 5419.0], [20.2, 5432.0], [20.3, 5432.0], [20.4, 5441.0], [20.5, 5441.0], [20.6, 5451.0], [20.7, 5456.0], [20.8, 5456.0], [20.9, 5469.0], [21.0, 5469.0], [21.1, 5474.0], [21.2, 5475.0], [21.3, 5475.0], [21.4, 5483.0], [21.5, 5483.0], [21.6, 5490.0], [21.7, 5494.0], [21.8, 5494.0], [21.9, 5495.0], [22.0, 5495.0], [22.1, 5497.0], [22.2, 5503.0], [22.3, 5503.0], [22.4, 5506.0], [22.5, 5506.0], [22.6, 5519.0], [22.7, 5520.0], [22.8, 5520.0], [22.9, 5521.0], [23.0, 5521.0], [23.1, 5521.0], [23.2, 5522.0], [23.3, 5522.0], [23.4, 5522.0], [23.5, 5522.0], [23.6, 5523.0], [23.7, 5526.0], [23.8, 5526.0], [23.9, 5527.0], [24.0, 5527.0], [24.1, 5528.0], [24.2, 5532.0], [24.3, 5532.0], [24.4, 5533.0], [24.5, 5533.0], [24.6, 5534.0], [24.7, 5537.0], [24.8, 5537.0], [24.9, 5538.0], [25.0, 5538.0], [25.1, 5547.0], [25.2, 5549.0], [25.3, 5549.0], [25.4, 5553.0], [25.5, 5553.0], [25.6, 5556.0], [25.7, 5563.0], [25.8, 5563.0], [25.9, 5563.0], [26.0, 5563.0], [26.1, 5569.0], [26.2, 5575.0], [26.3, 5575.0], [26.4, 5581.0], [26.5, 5581.0], [26.6, 5583.0], [26.7, 5584.0], [26.8, 5584.0], [26.9, 5593.0], [27.0, 5593.0], [27.1, 5596.0], [27.2, 5605.0], [27.3, 5605.0], [27.4, 5606.0], [27.5, 5606.0], [27.6, 5619.0], [27.7, 5632.0], [27.8, 5632.0], [27.9, 5658.0], [28.0, 5658.0], [28.1, 5681.0], [28.2, 5683.0], [28.3, 5683.0], [28.4, 5695.0], [28.5, 5695.0], [28.6, 5710.0], [28.7, 5714.0], [28.8, 5714.0], [28.9, 5717.0], [29.0, 5717.0], [29.1, 5717.0], [29.2, 5723.0], [29.3, 5723.0], [29.4, 5731.0], [29.5, 5731.0], [29.6, 5741.0], [29.7, 5743.0], [29.8, 5743.0], [29.9, 5750.0], [30.0, 5750.0], [30.1, 5752.0], [30.2, 5752.0], [30.3, 5752.0], [30.4, 5761.0], [30.5, 5761.0], [30.6, 5762.0], [30.7, 5763.0], [30.8, 5763.0], [30.9, 5766.0], [31.0, 5766.0], [31.1, 5768.0], [31.2, 5773.0], [31.3, 5773.0], [31.4, 5780.0], [31.5, 5780.0], [31.6, 5780.0], [31.7, 5786.0], [31.8, 5786.0], [31.9, 5817.0], [32.0, 5817.0], [32.1, 5821.0], [32.2, 5836.0], [32.3, 5836.0], [32.4, 5854.0], [32.5, 5854.0], [32.6, 5860.0], [32.7, 5861.0], [32.8, 5861.0], [32.9, 5864.0], [33.0, 5864.0], [33.1, 5868.0], [33.2, 5870.0], [33.3, 5870.0], [33.4, 5873.0], [33.5, 5873.0], [33.6, 5876.0], [33.7, 5882.0], [33.8, 5882.0], [33.9, 5885.0], [34.0, 5885.0], [34.1, 5890.0], [34.2, 5896.0], [34.3, 5896.0], [34.4, 5913.0], [34.5, 5913.0], [34.6, 5921.0], [34.7, 5928.0], [34.8, 5928.0], [34.9, 5929.0], [35.0, 5929.0], [35.1, 5932.0], [35.2, 5934.0], [35.3, 5934.0], [35.4, 5939.0], [35.5, 5939.0], [35.6, 5951.0], [35.7, 5951.0], [35.8, 5951.0], [35.9, 5955.0], [36.0, 5955.0], [36.1, 5957.0], [36.2, 5962.0], [36.3, 5962.0], [36.4, 5966.0], [36.5, 5966.0], [36.6, 5975.0], [36.7, 5985.0], [36.8, 5985.0], [36.9, 5985.0], [37.0, 5985.0], [37.1, 6001.0], [37.2, 6037.0], [37.3, 6037.0], [37.4, 6040.0], [37.5, 6040.0], [37.6, 6044.0], [37.7, 6054.0], [37.8, 6054.0], [37.9, 6058.0], [38.0, 6064.0], [38.1, 6064.0], [38.2, 6072.0], [38.3, 6072.0], [38.4, 6075.0], [38.5, 6080.0], [38.6, 6080.0], [38.7, 6086.0], [38.8, 6086.0], [38.9, 6089.0], [39.0, 6103.0], [39.1, 6103.0], [39.2, 6211.0], [39.3, 6211.0], [39.4, 6234.0], [39.5, 6242.0], [39.6, 6242.0], [39.7, 6259.0], [39.8, 6259.0], [39.9, 6294.0], [40.0, 6306.0], [40.1, 6306.0], [40.2, 6311.0], [40.3, 6311.0], [40.4, 6312.0], [40.5, 6323.0], [40.6, 6323.0], [40.7, 6328.0], [40.8, 6328.0], [40.9, 6330.0], [41.0, 6331.0], [41.1, 6331.0], [41.2, 6332.0], [41.3, 6332.0], [41.4, 6336.0], [41.5, 6340.0], [41.6, 6340.0], [41.7, 6345.0], [41.8, 6345.0], [41.9, 6352.0], [42.0, 6356.0], [42.1, 6356.0], [42.2, 6357.0], [42.3, 6357.0], [42.4, 6359.0], [42.5, 6361.0], [42.6, 6361.0], [42.7, 6361.0], [42.8, 6361.0], [42.9, 6368.0], [43.0, 6373.0], [43.1, 6373.0], [43.2, 6378.0], [43.3, 6378.0], [43.4, 6388.0], [43.5, 6391.0], [43.6, 6391.0], [43.7, 6398.0], [43.8, 6398.0], [43.9, 6400.0], [44.0, 6400.0], [44.1, 6400.0], [44.2, 6419.0], [44.3, 6419.0], [44.4, 6431.0], [44.5, 6437.0], [44.6, 6437.0], [44.7, 6439.0], [44.8, 6439.0], [44.9, 6455.0], [45.0, 6455.0], [45.1, 6455.0], [45.2, 6455.0], [45.3, 6455.0], [45.4, 6470.0], [45.5, 6474.0], [45.6, 6474.0], [45.7, 6475.0], [45.8, 6475.0], [45.9, 6475.0], [46.0, 6500.0], [46.1, 6500.0], [46.2, 6503.0], [46.3, 6503.0], [46.4, 6506.0], [46.5, 6513.0], [46.6, 6513.0], [46.7, 6513.0], [46.8, 6513.0], [46.9, 6517.0], [47.0, 6522.0], [47.1, 6522.0], [47.2, 6534.0], [47.3, 6534.0], [47.4, 6535.0], [47.5, 6544.0], [47.6, 6544.0], [47.7, 6548.0], [47.8, 6548.0], [47.9, 6572.0], [48.0, 6579.0], [48.1, 6579.0], [48.2, 6605.0], [48.3, 6605.0], [48.4, 6730.0], [48.5, 6740.0], [48.6, 6740.0], [48.7, 7985.0], [48.8, 7985.0], [48.9, 8008.0], [49.0, 8014.0], [49.1, 8014.0], [49.2, 8022.0], [49.3, 8022.0], [49.4, 8035.0], [49.5, 8067.0], [49.6, 8067.0], [49.7, 8075.0], [49.8, 8075.0], [49.9, 8078.0], [50.0, 8115.0], [50.1, 8115.0], [50.2, 8117.0], [50.3, 8117.0], [50.4, 8118.0], [50.5, 8126.0], [50.6, 8126.0], [50.7, 8140.0], [50.8, 8140.0], [50.9, 8148.0], [51.0, 8158.0], [51.1, 8158.0], [51.2, 8159.0], [51.3, 8159.0], [51.4, 8159.0], [51.5, 8165.0], [51.6, 8165.0], [51.7, 8167.0], [51.8, 8167.0], [51.9, 8171.0], [52.0, 8181.0], [52.1, 8181.0], [52.2, 8202.0], [52.3, 8202.0], [52.4, 8203.0], [52.5, 8214.0], [52.6, 8214.0], [52.7, 8215.0], [52.8, 8215.0], [52.9, 8220.0], [53.0, 8228.0], [53.1, 8228.0], [53.2, 8232.0], [53.3, 8232.0], [53.4, 8252.0], [53.5, 8253.0], [53.6, 8253.0], [53.7, 8256.0], [53.8, 8256.0], [53.9, 8257.0], [54.0, 8262.0], [54.1, 8262.0], [54.2, 8265.0], [54.3, 8265.0], [54.4, 8267.0], [54.5, 8267.0], [54.6, 8267.0], [54.7, 8268.0], [54.8, 8268.0], [54.9, 8269.0], [55.0, 8269.0], [55.1, 8269.0], [55.2, 8271.0], [55.3, 8271.0], [55.4, 8272.0], [55.5, 8274.0], [55.6, 8274.0], [55.7, 8274.0], [55.8, 8274.0], [55.9, 8275.0], [56.0, 8277.0], [56.1, 8277.0], [56.2, 8277.0], [56.3, 8277.0], [56.4, 8277.0], [56.5, 8279.0], [56.6, 8279.0], [56.7, 8289.0], [56.8, 8289.0], [56.9, 8291.0], [57.0, 8292.0], [57.1, 8292.0], [57.2, 8297.0], [57.3, 8297.0], [57.4, 8302.0], [57.5, 8323.0], [57.6, 8323.0], [57.7, 8336.0], [57.8, 8336.0], [57.9, 8336.0], [58.0, 8341.0], [58.1, 8341.0], [58.2, 8342.0], [58.3, 8342.0], [58.4, 8353.0], [58.5, 8358.0], [58.6, 8358.0], [58.7, 8359.0], [58.8, 8359.0], [58.9, 8368.0], [59.0, 8401.0], [59.1, 8401.0], [59.2, 8406.0], [59.3, 8406.0], [59.4, 8413.0], [59.5, 8446.0], [59.6, 8446.0], [59.7, 8478.0], [59.8, 8478.0], [59.9, 8479.0], [60.0, 8482.0], [60.1, 8482.0], [60.2, 8488.0], [60.3, 8488.0], [60.4, 8490.0], [60.5, 8528.0], [60.6, 8528.0], [60.7, 8600.0], [60.8, 8600.0], [60.9, 8861.0], [61.0, 8883.0], [61.1, 8883.0], [61.2, 8888.0], [61.3, 8888.0], [61.4, 8895.0], [61.5, 8896.0], [61.6, 8896.0], [61.7, 8929.0], [61.8, 8929.0], [61.9, 8936.0], [62.0, 8944.0], [62.1, 8944.0], [62.2, 8957.0], [62.3, 8957.0], [62.4, 8962.0], [62.5, 8967.0], [62.6, 8967.0], [62.7, 8971.0], [62.8, 8971.0], [62.9, 8974.0], [63.0, 8975.0], [63.1, 8975.0], [63.2, 8977.0], [63.3, 8977.0], [63.4, 8982.0], [63.5, 8984.0], [63.6, 8984.0], [63.7, 8987.0], [63.8, 8987.0], [63.9, 8990.0], [64.0, 9045.0], [64.1, 9045.0], [64.2, 9048.0], [64.3, 9048.0], [64.4, 9049.0], [64.5, 9072.0], [64.6, 9072.0], [64.7, 9098.0], [64.8, 9098.0], [64.9, 9140.0], [65.0, 9158.0], [65.1, 9158.0], [65.2, 9188.0], [65.3, 9188.0], [65.4, 9198.0], [65.5, 9239.0], [65.6, 9239.0], [65.7, 9255.0], [65.8, 9255.0], [65.9, 9261.0], [66.0, 9261.0], [66.1, 9261.0], [66.2, 9288.0], [66.3, 9288.0], [66.4, 9302.0], [66.5, 9330.0], [66.6, 9330.0], [66.7, 9348.0], [66.8, 9348.0], [66.9, 9426.0], [67.0, 9426.0], [67.1, 9426.0], [67.2, 9426.0], [67.3, 9426.0], [67.4, 9522.0], [67.5, 9532.0], [67.6, 9532.0], [67.7, 9538.0], [67.8, 9538.0], [67.9, 9540.0], [68.0, 9579.0], [68.1, 9579.0], [68.2, 9606.0], [68.3, 9606.0], [68.4, 9630.0], [68.5, 9632.0], [68.6, 9632.0], [68.7, 9650.0], [68.8, 9650.0], [68.9, 9660.0], [69.0, 9669.0], [69.1, 9669.0], [69.2, 9682.0], [69.3, 9682.0], [69.4, 9701.0], [69.5, 9702.0], [69.6, 9702.0], [69.7, 9706.0], [69.8, 9706.0], [69.9, 9715.0], [70.0, 9718.0], [70.1, 9718.0], [70.2, 9724.0], [70.3, 9724.0], [70.4, 9733.0], [70.5, 9736.0], [70.6, 9736.0], [70.7, 9755.0], [70.8, 9755.0], [70.9, 9760.0], [71.0, 9763.0], [71.1, 9763.0], [71.2, 9766.0], [71.3, 9766.0], [71.4, 9812.0], [71.5, 9856.0], [71.6, 9856.0], [71.7, 9961.0], [71.8, 9961.0], [71.9, 9967.0], [72.0, 9975.0], [72.1, 9975.0], [72.2, 10022.0], [72.3, 10022.0], [72.4, 10060.0], [72.5, 10112.0], [72.6, 10112.0], [72.7, 10140.0], [72.8, 10140.0], [72.9, 10356.0], [73.0, 10362.0], [73.1, 10362.0], [73.2, 10385.0], [73.3, 10385.0], [73.4, 10395.0], [73.5, 10404.0], [73.6, 10404.0], [73.7, 10409.0], [73.8, 10409.0], [73.9, 10431.0], [74.0, 10432.0], [74.1, 10432.0], [74.2, 10437.0], [74.3, 10437.0], [74.4, 10444.0], [74.5, 10446.0], [74.6, 10446.0], [74.7, 10447.0], [74.8, 10447.0], [74.9, 10489.0], [75.0, 10520.0], [75.1, 10520.0], [75.2, 10788.0], [75.3, 10788.0], [75.4, 10850.0], [75.5, 10883.0], [75.6, 10883.0], [75.7, 10883.0], [75.8, 10883.0], [75.9, 10979.0], [76.0, 11019.0], [76.1, 11019.0], [76.2, 11021.0], [76.3, 11021.0], [76.4, 11253.0], [76.5, 11253.0], [76.6, 11336.0], [76.7, 11406.0], [76.8, 11406.0], [76.9, 11483.0], [77.0, 11483.0], [77.1, 11492.0], [77.2, 11532.0], [77.3, 11532.0], [77.4, 11555.0], [77.5, 11555.0], [77.6, 11560.0], [77.7, 11562.0], [77.8, 11562.0], [77.9, 11565.0], [78.0, 11565.0], [78.1, 11583.0], [78.2, 11605.0], [78.3, 11605.0], [78.4, 11640.0], [78.5, 11640.0], [78.6, 11657.0], [78.7, 11688.0], [78.8, 11688.0], [78.9, 11715.0], [79.0, 11715.0], [79.1, 11716.0], [79.2, 11720.0], [79.3, 11720.0], [79.4, 11725.0], [79.5, 11725.0], [79.6, 11733.0], [79.7, 11754.0], [79.8, 11754.0], [79.9, 11775.0], [80.0, 11775.0], [80.1, 11776.0], [80.2, 11777.0], [80.3, 11777.0], [80.4, 11846.0], [80.5, 11846.0], [80.6, 11849.0], [80.7, 11869.0], [80.8, 11869.0], [80.9, 11883.0], [81.0, 11883.0], [81.1, 11886.0], [81.2, 11892.0], [81.3, 11892.0], [81.4, 11893.0], [81.5, 11893.0], [81.6, 11897.0], [81.7, 11901.0], [81.8, 11901.0], [81.9, 11902.0], [82.0, 11902.0], [82.1, 11910.0], [82.2, 11912.0], [82.3, 11912.0], [82.4, 11914.0], [82.5, 11914.0], [82.6, 11924.0], [82.7, 11925.0], [82.8, 11925.0], [82.9, 11937.0], [83.0, 11937.0], [83.1, 11939.0], [83.2, 11943.0], [83.3, 11943.0], [83.4, 11950.0], [83.5, 11950.0], [83.6, 11986.0], [83.7, 11995.0], [83.8, 11995.0], [83.9, 11995.0], [84.0, 11995.0], [84.1, 11996.0], [84.2, 11999.0], [84.3, 11999.0], [84.4, 12033.0], [84.5, 12033.0], [84.6, 13873.0], [84.7, 13884.0], [84.8, 13884.0], [84.9, 13962.0], [85.0, 13962.0], [85.1, 14658.0], [85.2, 14726.0], [85.3, 14726.0], [85.4, 14730.0], [85.5, 14730.0], [85.6, 14795.0], [85.7, 14812.0], [85.8, 14812.0], [85.9, 14895.0], [86.0, 14895.0], [86.1, 14909.0], [86.2, 14911.0], [86.3, 14911.0], [86.4, 14913.0], [86.5, 14913.0], [86.6, 14915.0], [86.7, 14915.0], [86.8, 14915.0], [86.9, 14916.0], [87.0, 14916.0], [87.1, 14922.0], [87.2, 14928.0], [87.3, 14928.0], [87.4, 14928.0], [87.5, 14928.0], [87.6, 14978.0], [87.7, 15008.0], [87.8, 15008.0], [87.9, 15014.0], [88.0, 15014.0], [88.1, 15017.0], [88.2, 15017.0], [88.3, 15017.0], [88.4, 15023.0], [88.5, 15023.0], [88.6, 15025.0], [88.7, 15027.0], [88.8, 15027.0], [88.9, 15030.0], [89.0, 15030.0], [89.1, 15035.0], [89.2, 15044.0], [89.3, 15044.0], [89.4, 15046.0], [89.5, 15046.0], [89.6, 15055.0], [89.7, 15072.0], [89.8, 15072.0], [89.9, 16308.0], [90.0, 16308.0], [90.1, 16339.0], [90.2, 16345.0], [90.3, 16345.0], [90.4, 16345.0], [90.5, 16345.0], [90.6, 16354.0], [90.7, 16357.0], [90.8, 16357.0], [90.9, 16358.0], [91.0, 16358.0], [91.1, 16359.0], [91.2, 16360.0], [91.3, 16360.0], [91.4, 16364.0], [91.5, 16364.0], [91.6, 16365.0], [91.7, 16370.0], [91.8, 16370.0], [91.9, 16375.0], [92.0, 16375.0], [92.1, 16381.0], [92.2, 16383.0], [92.3, 16383.0], [92.4, 16387.0], [92.5, 16387.0], [92.6, 16388.0], [92.7, 16390.0], [92.8, 16390.0], [92.9, 16392.0], [93.0, 16392.0], [93.1, 16396.0], [93.2, 16406.0], [93.3, 16406.0], [93.4, 16433.0], [93.5, 16433.0], [93.6, 16455.0], [93.7, 16459.0], [93.8, 16459.0], [93.9, 16460.0], [94.0, 16460.0], [94.1, 16460.0], [94.2, 16462.0], [94.3, 16462.0], [94.4, 16480.0], [94.5, 16480.0], [94.6, 16485.0], [94.7, 16491.0], [94.8, 16491.0], [94.9, 16494.0], [95.0, 16494.0], [95.1, 16498.0], [95.2, 16502.0], [95.3, 16502.0], [95.4, 16508.0], [95.5, 16508.0], [95.6, 16511.0], [95.7, 16516.0], [95.8, 16516.0], [95.9, 16517.0], [96.0, 16517.0], [96.1, 16523.0], [96.2, 16524.0], [96.3, 16524.0], [96.4, 16530.0], [96.5, 16530.0], [96.6, 16539.0], [96.7, 16546.0], [96.8, 16546.0], [96.9, 16550.0], [97.0, 16550.0], [97.1, 16556.0], [97.2, 16571.0], [97.3, 16571.0], [97.4, 16573.0], [97.5, 16573.0], [97.6, 16859.0], [97.7, 16874.0], [97.8, 16874.0], [97.9, 16879.0], [98.0, 16879.0], [98.1, 16886.0], [98.2, 16891.0], [98.3, 16891.0], [98.4, 16892.0], [98.5, 16892.0], [98.6, 16917.0], [98.7, 16930.0], [98.8, 16930.0], [98.9, 16963.0], [99.0, 16963.0], [99.1, 16984.0], [99.2, 16988.0], [99.3, 16988.0], [99.4, 16995.0], [99.5, 16995.0], [99.6, 16999.0], [99.7, 17000.0], [99.8, 17000.0], [99.9, 17016.0], [100.0, 17016.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 264.0], [0.1, 264.0], [0.2, 264.0], [0.3, 264.0], [0.4, 264.0], [0.5, 265.0], [0.6, 265.0], [0.7, 265.0], [0.8, 265.0], [0.9, 265.0], [1.0, 265.0], [1.1, 265.0], [1.2, 265.0], [1.3, 265.0], [1.4, 265.0], [1.5, 265.0], [1.6, 265.0], [1.7, 265.0], [1.8, 265.0], [1.9, 266.0], [2.0, 266.0], [2.1, 266.0], [2.2, 266.0], [2.3, 266.0], [2.4, 267.0], [2.5, 267.0], [2.6, 267.0], [2.7, 267.0], [2.8, 267.0], [2.9, 267.0], [3.0, 267.0], [3.1, 267.0], [3.2, 267.0], [3.3, 267.0], [3.4, 267.0], [3.5, 267.0], [3.6, 267.0], [3.7, 267.0], [3.8, 267.0], [3.9, 267.0], [4.0, 268.0], [4.1, 268.0], [4.2, 268.0], [4.3, 268.0], [4.4, 268.0], [4.5, 268.0], [4.6, 268.0], [4.7, 268.0], [4.8, 268.0], [4.9, 268.0], [5.0, 269.0], [5.1, 269.0], [5.2, 269.0], [5.3, 269.0], [5.4, 269.0], [5.5, 269.0], [5.6, 269.0], [5.7, 269.0], [5.8, 269.0], [5.9, 269.0], [6.0, 269.0], [6.1, 269.0], [6.2, 269.0], [6.3, 269.0], [6.4, 269.0], [6.5, 269.0], [6.6, 269.0], [6.7, 269.0], [6.8, 269.0], [6.9, 269.0], [7.0, 269.0], [7.1, 269.0], [7.2, 269.0], [7.3, 269.0], [7.4, 269.0], [7.5, 269.0], [7.6, 269.0], [7.7, 269.0], [7.8, 269.0], [7.9, 269.0], [8.0, 269.0], [8.1, 269.0], [8.2, 270.0], [8.3, 270.0], [8.4, 270.0], [8.5, 270.0], [8.6, 270.0], [8.7, 270.0], [8.8, 270.0], [8.9, 270.0], [9.0, 270.0], [9.1, 270.0], [9.2, 270.0], [9.3, 270.0], [9.4, 270.0], [9.5, 270.0], [9.6, 270.0], [9.7, 270.0], [9.8, 270.0], [9.9, 270.0], [10.0, 270.0], [10.1, 270.0], [10.2, 270.0], [10.3, 270.0], [10.4, 270.0], [10.5, 270.0], [10.6, 270.0], [10.7, 271.0], [10.8, 271.0], [10.9, 271.0], [11.0, 271.0], [11.1, 271.0], [11.2, 271.0], [11.3, 271.0], [11.4, 271.0], [11.5, 272.0], [11.6, 272.0], [11.7, 272.0], [11.8, 272.0], [11.9, 272.0], [12.0, 272.0], [12.1, 272.0], [12.2, 272.0], [12.3, 272.0], [12.4, 272.0], [12.5, 272.0], [12.6, 272.0], [12.7, 272.0], [12.8, 272.0], [12.9, 272.0], [13.0, 273.0], [13.1, 273.0], [13.2, 273.0], [13.3, 273.0], [13.4, 273.0], [13.5, 273.0], [13.6, 273.0], [13.7, 273.0], [13.8, 273.0], [13.9, 274.0], [14.0, 274.0], [14.1, 274.0], [14.2, 274.0], [14.3, 274.0], [14.4, 274.0], [14.5, 275.0], [14.6, 275.0], [14.7, 275.0], [14.8, 275.0], [14.9, 275.0], [15.0, 275.0], [15.1, 275.0], [15.2, 275.0], [15.3, 275.0], [15.4, 275.0], [15.5, 276.0], [15.6, 276.0], [15.7, 276.0], [15.8, 276.0], [15.9, 276.0], [16.0, 277.0], [16.1, 277.0], [16.2, 277.0], [16.3, 277.0], [16.4, 277.0], [16.5, 277.0], [16.6, 277.0], [16.7, 277.0], [16.8, 277.0], [16.9, 278.0], [17.0, 278.0], [17.1, 278.0], [17.2, 278.0], [17.3, 278.0], [17.4, 278.0], [17.5, 278.0], [17.6, 278.0], [17.7, 279.0], [17.8, 279.0], [17.9, 279.0], [18.0, 279.0], [18.1, 279.0], [18.2, 279.0], [18.3, 279.0], [18.4, 279.0], [18.5, 279.0], [18.6, 279.0], [18.7, 279.0], [18.8, 279.0], [18.9, 280.0], [19.0, 280.0], [19.1, 280.0], [19.2, 280.0], [19.3, 280.0], [19.4, 280.0], [19.5, 280.0], [19.6, 280.0], [19.7, 281.0], [19.8, 281.0], [19.9, 281.0], [20.0, 281.0], [20.1, 281.0], [20.2, 281.0], [20.3, 281.0], [20.4, 281.0], [20.5, 282.0], [20.6, 282.0], [20.7, 283.0], [20.8, 283.0], [20.9, 283.0], [21.0, 283.0], [21.1, 283.0], [21.2, 283.0], [21.3, 283.0], [21.4, 283.0], [21.5, 284.0], [21.6, 284.0], [21.7, 284.0], [21.8, 284.0], [21.9, 284.0], [22.0, 285.0], [22.1, 285.0], [22.2, 285.0], [22.3, 285.0], [22.4, 285.0], [22.5, 285.0], [22.6, 285.0], [22.7, 285.0], [22.8, 285.0], [22.9, 286.0], [23.0, 286.0], [23.1, 286.0], [23.2, 286.0], [23.3, 286.0], [23.4, 287.0], [23.5, 287.0], [23.6, 287.0], [23.7, 287.0], [23.8, 287.0], [23.9, 287.0], [24.0, 287.0], [24.1, 287.0], [24.2, 287.0], [24.3, 287.0], [24.4, 287.0], [24.5, 287.0], [24.6, 287.0], [24.7, 287.0], [24.8, 287.0], [24.9, 287.0], [25.0, 287.0], [25.1, 287.0], [25.2, 288.0], [25.3, 288.0], [25.4, 288.0], [25.5, 288.0], [25.6, 288.0], [25.7, 288.0], [25.8, 288.0], [25.9, 288.0], [26.0, 288.0], [26.1, 288.0], [26.2, 288.0], [26.3, 288.0], [26.4, 289.0], [26.5, 289.0], [26.6, 289.0], [26.7, 289.0], [26.8, 289.0], [26.9, 289.0], [27.0, 289.0], [27.1, 289.0], [27.2, 290.0], [27.3, 290.0], [27.4, 290.0], [27.5, 291.0], [27.6, 291.0], [27.7, 291.0], [27.8, 291.0], [27.9, 291.0], [28.0, 291.0], [28.1, 291.0], [28.2, 291.0], [28.3, 291.0], [28.4, 292.0], [28.5, 292.0], [28.6, 292.0], [28.7, 292.0], [28.8, 292.0], [28.9, 292.0], [29.0, 292.0], [29.1, 292.0], [29.2, 292.0], [29.3, 292.0], [29.4, 292.0], [29.5, 292.0], [29.6, 292.0], [29.7, 293.0], [29.8, 293.0], [29.9, 293.0], [30.0, 295.0], [30.1, 295.0], [30.2, 295.0], [30.3, 295.0], [30.4, 295.0], [30.5, 296.0], [30.6, 296.0], [30.7, 297.0], [30.8, 297.0], [30.9, 297.0], [31.0, 297.0], [31.1, 297.0], [31.2, 297.0], [31.3, 297.0], [31.4, 297.0], [31.5, 298.0], [31.6, 298.0], [31.7, 299.0], [31.8, 299.0], [31.9, 299.0], [32.0, 299.0], [32.1, 299.0], [32.2, 299.0], [32.3, 299.0], [32.4, 299.0], [32.5, 299.0], [32.6, 299.0], [32.7, 299.0], [32.8, 299.0], [32.9, 300.0], [33.0, 300.0], [33.1, 300.0], [33.2, 301.0], [33.3, 301.0], [33.4, 301.0], [33.5, 301.0], [33.6, 301.0], [33.7, 301.0], [33.8, 301.0], [33.9, 301.0], [34.0, 301.0], [34.1, 301.0], [34.2, 302.0], [34.3, 302.0], [34.4, 303.0], [34.5, 303.0], [34.6, 303.0], [34.7, 303.0], [34.8, 303.0], [34.9, 303.0], [35.0, 304.0], [35.1, 304.0], [35.2, 304.0], [35.3, 304.0], [35.4, 304.0], [35.5, 304.0], [35.6, 304.0], [35.7, 305.0], [35.8, 305.0], [35.9, 305.0], [36.0, 305.0], [36.1, 305.0], [36.2, 305.0], [36.3, 305.0], [36.4, 305.0], [36.5, 306.0], [36.6, 306.0], [36.7, 306.0], [36.8, 306.0], [36.9, 306.0], [37.0, 306.0], [37.1, 306.0], [37.2, 307.0], [37.3, 307.0], [37.4, 307.0], [37.5, 307.0], [37.6, 307.0], [37.7, 308.0], [37.8, 308.0], [37.9, 308.0], [38.0, 308.0], [38.1, 308.0], [38.2, 308.0], [38.3, 308.0], [38.4, 308.0], [38.5, 308.0], [38.6, 308.0], [38.7, 309.0], [38.8, 309.0], [38.9, 310.0], [39.0, 310.0], [39.1, 310.0], [39.2, 310.0], [39.3, 310.0], [39.4, 310.0], [39.5, 311.0], [39.6, 311.0], [39.7, 311.0], [39.8, 311.0], [39.9, 313.0], [40.0, 313.0], [40.1, 313.0], [40.2, 313.0], [40.3, 313.0], [40.4, 314.0], [40.5, 315.0], [40.6, 315.0], [40.7, 315.0], [40.8, 315.0], [40.9, 316.0], [41.0, 316.0], [41.1, 316.0], [41.2, 317.0], [41.3, 317.0], [41.4, 317.0], [41.5, 318.0], [41.6, 318.0], [41.7, 318.0], [41.8, 318.0], [41.9, 318.0], [42.0, 318.0], [42.1, 318.0], [42.2, 318.0], [42.3, 318.0], [42.4, 319.0], [42.5, 319.0], [42.6, 319.0], [42.7, 319.0], [42.8, 319.0], [42.9, 320.0], [43.0, 320.0], [43.1, 320.0], [43.2, 323.0], [43.3, 323.0], [43.4, 323.0], [43.5, 324.0], [43.6, 324.0], [43.7, 325.0], [43.8, 325.0], [43.9, 325.0], [44.0, 325.0], [44.1, 325.0], [44.2, 325.0], [44.3, 325.0], [44.4, 325.0], [44.5, 325.0], [44.6, 325.0], [44.7, 326.0], [44.8, 326.0], [44.9, 326.0], [45.0, 327.0], [45.1, 327.0], [45.2, 327.0], [45.3, 327.0], [45.4, 328.0], [45.5, 328.0], [45.6, 328.0], [45.7, 328.0], [45.8, 328.0], [45.9, 329.0], [46.0, 331.0], [46.1, 331.0], [46.2, 332.0], [46.3, 332.0], [46.4, 333.0], [46.5, 333.0], [46.6, 333.0], [46.7, 334.0], [46.8, 334.0], [46.9, 334.0], [47.0, 334.0], [47.1, 334.0], [47.2, 335.0], [47.3, 335.0], [47.4, 337.0], [47.5, 338.0], [47.6, 338.0], [47.7, 339.0], [47.8, 339.0], [47.9, 339.0], [48.0, 340.0], [48.1, 340.0], [48.2, 341.0], [48.3, 341.0], [48.4, 341.0], [48.5, 342.0], [48.6, 342.0], [48.7, 344.0], [48.8, 344.0], [48.9, 344.0], [49.0, 345.0], [49.1, 345.0], [49.2, 346.0], [49.3, 346.0], [49.4, 354.0], [49.5, 355.0], [49.6, 355.0], [49.7, 359.0], [49.8, 359.0], [49.9, 367.0], [50.0, 367.0], [50.1, 367.0], [50.2, 367.0], [50.3, 367.0], [50.4, 368.0], [50.5, 368.0], [50.6, 368.0], [50.7, 371.0], [50.8, 371.0], [50.9, 374.0], [51.0, 375.0], [51.1, 375.0], [51.2, 375.0], [51.3, 375.0], [51.4, 375.0], [51.5, 377.0], [51.6, 377.0], [51.7, 379.0], [51.8, 379.0], [51.9, 379.0], [52.0, 380.0], [52.1, 380.0], [52.2, 381.0], [52.3, 381.0], [52.4, 382.0], [52.5, 393.0], [52.6, 393.0], [52.7, 393.0], [52.8, 393.0], [52.9, 393.0], [53.0, 396.0], [53.1, 396.0], [53.2, 399.0], [53.3, 399.0], [53.4, 400.0], [53.5, 401.0], [53.6, 401.0], [53.7, 405.0], [53.8, 405.0], [53.9, 406.0], [54.0, 409.0], [54.1, 409.0], [54.2, 411.0], [54.3, 411.0], [54.4, 413.0], [54.5, 414.0], [54.6, 414.0], [54.7, 416.0], [54.8, 416.0], [54.9, 416.0], [55.0, 416.0], [55.1, 416.0], [55.2, 417.0], [55.3, 417.0], [55.4, 418.0], [55.5, 422.0], [55.6, 422.0], [55.7, 423.0], [55.8, 423.0], [55.9, 424.0], [56.0, 425.0], [56.1, 425.0], [56.2, 425.0], [56.3, 425.0], [56.4, 427.0], [56.5, 427.0], [56.6, 427.0], [56.7, 428.0], [56.8, 428.0], [56.9, 429.0], [57.0, 431.0], [57.1, 431.0], [57.2, 434.0], [57.3, 434.0], [57.4, 436.0], [57.5, 438.0], [57.6, 438.0], [57.7, 444.0], [57.8, 444.0], [57.9, 446.0], [58.0, 447.0], [58.1, 447.0], [58.2, 447.0], [58.3, 447.0], [58.4, 453.0], [58.5, 456.0], [58.6, 456.0], [58.7, 459.0], [58.8, 459.0], [58.9, 470.0], [59.0, 487.0], [59.1, 487.0], [59.2, 490.0], [59.3, 490.0], [59.4, 508.0], [59.5, 509.0], [59.6, 509.0], [59.7, 512.0], [59.8, 512.0], [59.9, 523.0], [60.0, 538.0], [60.1, 538.0], [60.2, 543.0], [60.3, 543.0], [60.4, 556.0], [60.5, 565.0], [60.6, 565.0], [60.7, 571.0], [60.8, 571.0], [60.9, 572.0], [61.0, 584.0], [61.1, 584.0], [61.2, 606.0], [61.3, 606.0], [61.4, 622.0], [61.5, 645.0], [61.6, 645.0], [61.7, 655.0], [61.8, 655.0], [61.9, 670.0], [62.0, 1038.0], [62.1, 1038.0], [62.2, 1040.0], [62.3, 1040.0], [62.4, 1044.0], [62.5, 1044.0], [62.6, 1044.0], [62.7, 1048.0], [62.8, 1048.0], [62.9, 1049.0], [63.0, 1050.0], [63.1, 1050.0], [63.2, 1053.0], [63.3, 1053.0], [63.4, 1054.0], [63.5, 1055.0], [63.6, 1055.0], [63.7, 1055.0], [63.8, 1055.0], [63.9, 1057.0], [64.0, 1066.0], [64.1, 1066.0], [64.2, 1071.0], [64.3, 1071.0], [64.4, 1071.0], [64.5, 1075.0], [64.6, 1075.0], [64.7, 1075.0], [64.8, 1075.0], [64.9, 1077.0], [65.0, 1084.0], [65.1, 1084.0], [65.2, 1085.0], [65.3, 1085.0], [65.4, 1086.0], [65.5, 1092.0], [65.6, 1092.0], [65.7, 1094.0], [65.8, 1094.0], [65.9, 1103.0], [66.0, 1110.0], [66.1, 1110.0], [66.2, 1112.0], [66.3, 1112.0], [66.4, 1112.0], [66.5, 1113.0], [66.6, 1113.0], [66.7, 1116.0], [66.8, 1116.0], [66.9, 1118.0], [67.0, 1122.0], [67.1, 1122.0], [67.2, 1127.0], [67.3, 1127.0], [67.4, 1131.0], [67.5, 1137.0], [67.6, 1137.0], [67.7, 1139.0], [67.8, 1139.0], [67.9, 1140.0], [68.0, 1141.0], [68.1, 1141.0], [68.2, 1144.0], [68.3, 1144.0], [68.4, 1148.0], [68.5, 1156.0], [68.6, 1156.0], [68.7, 1163.0], [68.8, 1163.0], [68.9, 1167.0], [69.0, 1307.0], [69.1, 1307.0], [69.2, 1346.0], [69.3, 1346.0], [69.4, 1350.0], [69.5, 1354.0], [69.6, 1354.0], [69.7, 1355.0], [69.8, 1355.0], [69.9, 1370.0], [70.0, 1373.0], [70.1, 1373.0], [70.2, 1384.0], [70.3, 1384.0], [70.4, 1389.0], [70.5, 1398.0], [70.6, 1398.0], [70.7, 1417.0], [70.8, 1417.0], [70.9, 1420.0], [71.0, 1424.0], [71.1, 1424.0], [71.2, 1436.0], [71.3, 1436.0], [71.4, 1448.0], [71.5, 1448.0], [71.6, 1449.0], [71.7, 1455.0], [71.8, 1455.0], [71.9, 1455.0], [72.0, 1455.0], [72.1, 1457.0], [72.2, 1465.0], [72.3, 1465.0], [72.4, 1470.0], [72.5, 1470.0], [72.6, 1482.0], [72.7, 1487.0], [72.8, 1487.0], [72.9, 1489.0], [73.0, 1489.0], [73.1, 1491.0], [73.2, 1493.0], [73.3, 1493.0], [73.4, 1495.0], [73.5, 1495.0], [73.6, 1496.0], [73.7, 1500.0], [73.8, 1500.0], [73.9, 1506.0], [74.0, 1506.0], [74.1, 1510.0], [74.2, 1511.0], [74.3, 1511.0], [74.4, 1512.0], [74.5, 1512.0], [74.6, 1512.0], [74.7, 1516.0], [74.8, 1516.0], [74.9, 1517.0], [75.0, 1517.0], [75.1, 1517.0], [75.2, 1517.0], [75.3, 1517.0], [75.4, 1517.0], [75.5, 1517.0], [75.6, 1521.0], [75.7, 1522.0], [75.8, 1522.0], [75.9, 1527.0], [76.0, 1527.0], [76.1, 1527.0], [76.2, 1528.0], [76.3, 1528.0], [76.4, 1528.0], [76.5, 1528.0], [76.6, 1529.0], [76.7, 1534.0], [76.8, 1534.0], [76.9, 1536.0], [77.0, 1536.0], [77.1, 1537.0], [77.2, 1540.0], [77.3, 1540.0], [77.4, 1540.0], [77.5, 1540.0], [77.6, 1553.0], [77.7, 1561.0], [77.8, 1561.0], [77.9, 1564.0], [78.0, 1564.0], [78.1, 1572.0], [78.2, 1575.0], [78.3, 1575.0], [78.4, 1575.0], [78.5, 1575.0], [78.6, 1577.0], [78.7, 1579.0], [78.8, 1579.0], [78.9, 1580.0], [79.0, 1580.0], [79.1, 1584.0], [79.2, 1587.0], [79.3, 1587.0], [79.4, 1587.0], [79.5, 1587.0], [79.6, 1588.0], [79.7, 1589.0], [79.8, 1589.0], [79.9, 1591.0], [80.0, 1591.0], [80.1, 1591.0], [80.2, 1593.0], [80.3, 1593.0], [80.4, 1595.0], [80.5, 1595.0], [80.6, 1599.0], [80.7, 1613.0], [80.8, 1613.0], [80.9, 1621.0], [81.0, 1621.0], [81.1, 1624.0], [81.2, 1625.0], [81.3, 1625.0], [81.4, 1625.0], [81.5, 1625.0], [81.6, 1625.0], [81.7, 1626.0], [81.8, 1626.0], [81.9, 1636.0], [82.0, 1636.0], [82.1, 1638.0], [82.2, 1642.0], [82.3, 1642.0], [82.4, 1642.0], [82.5, 1642.0], [82.6, 1643.0], [82.7, 1646.0], [82.8, 1646.0], [82.9, 1650.0], [83.0, 1650.0], [83.1, 1653.0], [83.2, 1663.0], [83.3, 1663.0], [83.4, 1665.0], [83.5, 1665.0], [83.6, 1667.0], [83.7, 1670.0], [83.8, 1670.0], [83.9, 1673.0], [84.0, 1673.0], [84.1, 1679.0], [84.2, 1680.0], [84.3, 1680.0], [84.4, 1693.0], [84.5, 1693.0], [84.6, 1701.0], [84.7, 1701.0], [84.8, 1701.0], [84.9, 1707.0], [85.0, 1707.0], [85.1, 1721.0], [85.2, 1728.0], [85.3, 1728.0], [85.4, 1729.0], [85.5, 1729.0], [85.6, 1731.0], [85.7, 1731.0], [85.8, 1731.0], [85.9, 1733.0], [86.0, 1733.0], [86.1, 1741.0], [86.2, 1754.0], [86.3, 1754.0], [86.4, 1758.0], [86.5, 1758.0], [86.6, 1758.0], [86.7, 1763.0], [86.8, 1763.0], [86.9, 1765.0], [87.0, 1765.0], [87.1, 1765.0], [87.2, 1775.0], [87.3, 1775.0], [87.4, 1775.0], [87.5, 1775.0], [87.6, 1776.0], [87.7, 1779.0], [87.8, 1779.0], [87.9, 1795.0], [88.0, 1795.0], [88.1, 1817.0], [88.2, 1837.0], [88.3, 1837.0], [88.4, 1845.0], [88.5, 1845.0], [88.6, 1856.0], [88.7, 1886.0], [88.8, 1886.0], [88.9, 1892.0], [89.0, 1892.0], [89.1, 1896.0], [89.2, 1907.0], [89.3, 1907.0], [89.4, 1910.0], [89.5, 1910.0], [89.6, 1933.0], [89.7, 1943.0], [89.8, 1943.0], [89.9, 1944.0], [90.0, 1944.0], [90.1, 1946.0], [90.2, 1948.0], [90.3, 1948.0], [90.4, 1950.0], [90.5, 1950.0], [90.6, 1964.0], [90.7, 1966.0], [90.8, 1966.0], [90.9, 1972.0], [91.0, 1972.0], [91.1, 1973.0], [91.2, 1973.0], [91.3, 1973.0], [91.4, 1974.0], [91.5, 1974.0], [91.6, 1977.0], [91.7, 1987.0], [91.8, 1987.0], [91.9, 1995.0], [92.0, 1995.0], [92.1, 2014.0], [92.2, 2025.0], [92.3, 2025.0], [92.4, 2030.0], [92.5, 2030.0], [92.6, 2116.0], [92.7, 2209.0], [92.8, 2209.0], [92.9, 2213.0], [93.0, 2213.0], [93.1, 2213.0], [93.2, 2262.0], [93.3, 2262.0], [93.4, 2277.0], [93.5, 2277.0], [93.6, 2287.0], [93.7, 2295.0], [93.8, 2295.0], [93.9, 2296.0], [94.0, 2296.0], [94.1, 2311.0], [94.2, 2316.0], [94.3, 2316.0], [94.4, 2333.0], [94.5, 2333.0], [94.6, 2342.0], [94.7, 2354.0], [94.8, 2354.0], [94.9, 2388.0], [95.0, 2388.0], [95.1, 2401.0], [95.2, 2401.0], [95.3, 2401.0], [95.4, 2402.0], [95.5, 2402.0], [95.6, 2404.0], [95.7, 2470.0], [95.8, 2470.0], [95.9, 2512.0], [96.0, 2512.0], [96.1, 2543.0], [96.2, 2546.0], [96.3, 2546.0], [96.4, 2554.0], [96.5, 2554.0], [96.6, 2573.0], [96.7, 2580.0], [96.8, 2580.0], [96.9, 2601.0], [97.0, 2601.0], [97.1, 2605.0], [97.2, 2627.0], [97.3, 2627.0], [97.4, 2643.0], [97.5, 2643.0], [97.6, 2936.0], [97.7, 2970.0], [97.8, 2970.0], [97.9, 4501.0], [98.0, 4501.0], [98.1, 4621.0], [98.2, 4638.0], [98.3, 4638.0], [98.4, 4738.0], [98.5, 4738.0], [98.6, 4755.0], [98.7, 4855.0], [98.8, 4855.0], [98.9, 5561.0], [99.0, 5561.0], [99.1, 5572.0], [99.2, 5621.0], [99.3, 5621.0], [99.4, 5654.0], [99.5, 5654.0], [99.6, 13875.0], [99.7, 13878.0], [99.8, 13878.0], [99.9, 13880.0], [100.0, 13880.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[0.0, 263.0], [0.1, 263.0], [0.2, 264.0], [0.3, 264.0], [0.4, 265.0], [0.5, 266.0], [0.6, 266.0], [0.7, 266.0], [0.8, 266.0], [0.9, 266.0], [1.0, 266.0], [1.1, 266.0], [1.2, 266.0], [1.3, 266.0], [1.4, 266.0], [1.5, 267.0], [1.6, 267.0], [1.7, 267.0], [1.8, 267.0], [1.9, 267.0], [2.0, 267.0], [2.1, 267.0], [2.2, 267.0], [2.3, 267.0], [2.4, 267.0], [2.5, 267.0], [2.6, 267.0], [2.7, 268.0], [2.8, 268.0], [2.9, 268.0], [3.0, 268.0], [3.1, 268.0], [3.2, 268.0], [3.3, 268.0], [3.4, 268.0], [3.5, 268.0], [3.6, 268.0], [3.7, 268.0], [3.8, 268.0], [3.9, 268.0], [4.0, 268.0], [4.1, 268.0], [4.2, 268.0], [4.3, 268.0], [4.4, 268.0], [4.5, 269.0], [4.6, 269.0], [4.7, 269.0], [4.8, 269.0], [4.9, 269.0], [5.0, 269.0], [5.1, 269.0], [5.2, 269.0], [5.3, 269.0], [5.4, 269.0], [5.5, 270.0], [5.6, 270.0], [5.7, 270.0], [5.8, 270.0], [5.9, 271.0], [6.0, 271.0], [6.1, 271.0], [6.2, 271.0], [6.3, 271.0], [6.4, 271.0], [6.5, 272.0], [6.6, 272.0], [6.7, 272.0], [6.8, 272.0], [6.9, 272.0], [7.0, 272.0], [7.1, 272.0], [7.2, 272.0], [7.3, 272.0], [7.4, 272.0], [7.5, 273.0], [7.6, 273.0], [7.7, 273.0], [7.8, 273.0], [7.9, 274.0], [8.0, 274.0], [8.1, 274.0], [8.2, 274.0], [8.3, 274.0], [8.4, 274.0], [8.5, 275.0], [8.6, 275.0], [8.7, 275.0], [8.8, 275.0], [8.9, 275.0], [9.0, 275.0], [9.1, 275.0], [9.2, 275.0], [9.3, 275.0], [9.4, 275.0], [9.5, 275.0], [9.6, 275.0], [9.7, 275.0], [9.8, 275.0], [9.9, 275.0], [10.0, 276.0], [10.1, 276.0], [10.2, 276.0], [10.3, 276.0], [10.4, 276.0], [10.5, 276.0], [10.6, 276.0], [10.7, 277.0], [10.8, 277.0], [10.9, 277.0], [11.0, 278.0], [11.1, 278.0], [11.2, 278.0], [11.3, 278.0], [11.4, 278.0], [11.5, 278.0], [11.6, 278.0], [11.7, 279.0], [11.8, 279.0], [11.9, 279.0], [12.0, 279.0], [12.1, 279.0], [12.2, 279.0], [12.3, 279.0], [12.4, 279.0], [12.5, 279.0], [12.6, 279.0], [12.7, 280.0], [12.8, 280.0], [12.9, 280.0], [13.0, 280.0], [13.1, 280.0], [13.2, 281.0], [13.3, 281.0], [13.4, 281.0], [13.5, 281.0], [13.6, 281.0], [13.7, 281.0], [13.8, 281.0], [13.9, 281.0], [14.0, 281.0], [14.1, 281.0], [14.2, 281.0], [14.3, 281.0], [14.4, 281.0], [14.5, 281.0], [14.6, 281.0], [14.7, 282.0], [14.8, 282.0], [14.9, 282.0], [15.0, 282.0], [15.1, 282.0], [15.2, 282.0], [15.3, 282.0], [15.4, 282.0], [15.5, 283.0], [15.6, 283.0], [15.7, 283.0], [15.8, 283.0], [15.9, 284.0], [16.0, 284.0], [16.1, 284.0], [16.2, 284.0], [16.3, 284.0], [16.4, 284.0], [16.5, 284.0], [16.6, 284.0], [16.7, 284.0], [16.8, 284.0], [16.9, 285.0], [17.0, 285.0], [17.1, 285.0], [17.2, 285.0], [17.3, 285.0], [17.4, 285.0], [17.5, 285.0], [17.6, 285.0], [17.7, 285.0], [17.8, 285.0], [17.9, 285.0], [18.0, 285.0], [18.1, 285.0], [18.2, 286.0], [18.3, 286.0], [18.4, 287.0], [18.5, 287.0], [18.6, 287.0], [18.7, 287.0], [18.8, 287.0], [18.9, 287.0], [19.0, 287.0], [19.1, 288.0], [19.2, 288.0], [19.3, 288.0], [19.4, 288.0], [19.5, 288.0], [19.6, 288.0], [19.7, 288.0], [19.8, 288.0], [19.9, 288.0], [20.0, 288.0], [20.1, 288.0], [20.2, 289.0], [20.3, 289.0], [20.4, 289.0], [20.5, 289.0], [20.6, 289.0], [20.7, 290.0], [20.8, 290.0], [20.9, 290.0], [21.0, 290.0], [21.1, 290.0], [21.2, 290.0], [21.3, 290.0], [21.4, 291.0], [21.5, 291.0], [21.6, 292.0], [21.7, 293.0], [21.8, 293.0], [21.9, 293.0], [22.0, 293.0], [22.1, 293.0], [22.2, 293.0], [22.3, 293.0], [22.4, 293.0], [22.5, 293.0], [22.6, 293.0], [22.7, 293.0], [22.8, 293.0], [22.9, 293.0], [23.0, 293.0], [23.1, 293.0], [23.2, 293.0], [23.3, 293.0], [23.4, 293.0], [23.5, 293.0], [23.6, 294.0], [23.7, 294.0], [23.8, 294.0], [23.9, 294.0], [24.0, 294.0], [24.1, 294.0], [24.2, 294.0], [24.3, 294.0], [24.4, 295.0], [24.5, 295.0], [24.6, 296.0], [24.7, 296.0], [24.8, 296.0], [24.9, 296.0], [25.0, 296.0], [25.1, 296.0], [25.2, 296.0], [25.3, 296.0], [25.4, 296.0], [25.5, 296.0], [25.6, 297.0], [25.7, 297.0], [25.8, 297.0], [25.9, 297.0], [26.0, 297.0], [26.1, 297.0], [26.2, 297.0], [26.3, 297.0], [26.4, 297.0], [26.5, 297.0], [26.6, 297.0], [26.7, 297.0], [26.8, 297.0], [26.9, 297.0], [27.0, 297.0], [27.1, 298.0], [27.2, 299.0], [27.3, 299.0], [27.4, 299.0], [27.5, 299.0], [27.6, 299.0], [27.7, 299.0], [27.8, 299.0], [27.9, 299.0], [28.0, 299.0], [28.1, 299.0], [28.2, 299.0], [28.3, 299.0], [28.4, 300.0], [28.5, 300.0], [28.6, 300.0], [28.7, 300.0], [28.8, 300.0], [28.9, 301.0], [29.0, 301.0], [29.1, 301.0], [29.2, 302.0], [29.3, 302.0], [29.4, 302.0], [29.5, 302.0], [29.6, 302.0], [29.7, 304.0], [29.8, 304.0], [29.9, 304.0], [30.0, 304.0], [30.1, 304.0], [30.2, 305.0], [30.3, 305.0], [30.4, 305.0], [30.5, 305.0], [30.6, 306.0], [30.7, 306.0], [30.8, 306.0], [30.9, 307.0], [31.0, 307.0], [31.1, 308.0], [31.2, 308.0], [31.3, 308.0], [31.4, 310.0], [31.5, 310.0], [31.6, 310.0], [31.7, 310.0], [31.8, 310.0], [31.9, 310.0], [32.0, 310.0], [32.1, 311.0], [32.2, 311.0], [32.3, 311.0], [32.4, 311.0], [32.5, 311.0], [32.6, 312.0], [32.7, 312.0], [32.8, 312.0], [32.9, 312.0], [33.0, 312.0], [33.1, 312.0], [33.2, 312.0], [33.3, 312.0], [33.4, 313.0], [33.5, 313.0], [33.6, 313.0], [33.7, 313.0], [33.8, 313.0], [33.9, 313.0], [34.0, 313.0], [34.1, 313.0], [34.2, 314.0], [34.3, 314.0], [34.4, 314.0], [34.5, 314.0], [34.6, 315.0], [34.7, 315.0], [34.8, 315.0], [34.9, 315.0], [35.0, 315.0], [35.1, 316.0], [35.2, 317.0], [35.3, 317.0], [35.4, 318.0], [35.5, 318.0], [35.6, 318.0], [35.7, 318.0], [35.8, 318.0], [35.9, 318.0], [36.0, 318.0], [36.1, 319.0], [36.2, 319.0], [36.3, 319.0], [36.4, 321.0], [36.5, 321.0], [36.6, 322.0], [36.7, 322.0], [36.8, 322.0], [36.9, 323.0], [37.0, 323.0], [37.1, 324.0], [37.2, 324.0], [37.3, 324.0], [37.4, 324.0], [37.5, 324.0], [37.6, 324.0], [37.7, 327.0], [37.8, 327.0], [37.9, 327.0], [38.0, 327.0], [38.1, 327.0], [38.2, 328.0], [38.3, 328.0], [38.4, 328.0], [38.5, 328.0], [38.6, 329.0], [38.7, 329.0], [38.8, 329.0], [38.9, 329.0], [39.0, 329.0], [39.1, 329.0], [39.2, 329.0], [39.3, 329.0], [39.4, 330.0], [39.5, 330.0], [39.6, 331.0], [39.7, 331.0], [39.8, 331.0], [39.9, 332.0], [40.0, 332.0], [40.1, 333.0], [40.2, 333.0], [40.3, 333.0], [40.4, 333.0], [40.5, 333.0], [40.6, 334.0], [40.7, 334.0], [40.8, 334.0], [40.9, 334.0], [41.0, 334.0], [41.1, 335.0], [41.2, 337.0], [41.3, 337.0], [41.4, 337.0], [41.5, 337.0], [41.6, 337.0], [41.7, 338.0], [41.8, 338.0], [41.9, 339.0], [42.0, 340.0], [42.1, 340.0], [42.2, 341.0], [42.3, 341.0], [42.4, 341.0], [42.5, 341.0], [42.6, 341.0], [42.7, 341.0], [42.8, 341.0], [42.9, 342.0], [43.0, 342.0], [43.1, 342.0], [43.2, 343.0], [43.3, 343.0], [43.4, 345.0], [43.5, 345.0], [43.6, 345.0], [43.7, 346.0], [43.8, 346.0], [43.9, 347.0], [44.0, 349.0], [44.1, 349.0], [44.2, 349.0], [44.3, 349.0], [44.4, 351.0], [44.5, 353.0], [44.6, 353.0], [44.7, 353.0], [44.8, 353.0], [44.9, 354.0], [45.0, 354.0], [45.1, 354.0], [45.2, 354.0], [45.3, 354.0], [45.4, 361.0], [45.5, 367.0], [45.6, 367.0], [45.7, 367.0], [45.8, 367.0], [45.9, 370.0], [46.0, 371.0], [46.1, 371.0], [46.2, 373.0], [46.3, 373.0], [46.4, 374.0], [46.5, 375.0], [46.6, 375.0], [46.7, 378.0], [46.8, 378.0], [46.9, 380.0], [47.0, 381.0], [47.1, 381.0], [47.2, 383.0], [47.3, 383.0], [47.4, 384.0], [47.5, 387.0], [47.6, 387.0], [47.7, 389.0], [47.8, 389.0], [47.9, 392.0], [48.0, 395.0], [48.1, 395.0], [48.2, 395.0], [48.3, 395.0], [48.4, 396.0], [48.5, 400.0], [48.6, 400.0], [48.7, 403.0], [48.8, 403.0], [48.9, 404.0], [49.0, 408.0], [49.1, 408.0], [49.2, 413.0], [49.3, 413.0], [49.4, 415.0], [49.5, 418.0], [49.6, 418.0], [49.7, 420.0], [49.8, 420.0], [49.9, 422.0], [50.0, 425.0], [50.1, 425.0], [50.2, 430.0], [50.3, 430.0], [50.4, 432.0], [50.5, 432.0], [50.6, 432.0], [50.7, 434.0], [50.8, 434.0], [50.9, 435.0], [51.0, 445.0], [51.1, 445.0], [51.2, 446.0], [51.3, 446.0], [51.4, 457.0], [51.5, 464.0], [51.6, 464.0], [51.7, 465.0], [51.8, 465.0], [51.9, 474.0], [52.0, 475.0], [52.1, 475.0], [52.2, 486.0], [52.3, 486.0], [52.4, 487.0], [52.5, 489.0], [52.6, 489.0], [52.7, 494.0], [52.8, 494.0], [52.9, 497.0], [53.0, 510.0], [53.1, 510.0], [53.2, 533.0], [53.3, 533.0], [53.4, 539.0], [53.5, 561.0], [53.6, 561.0], [53.7, 575.0], [53.8, 575.0], [53.9, 586.0], [54.0, 612.0], [54.1, 612.0], [54.2, 648.0], [54.3, 648.0], [54.4, 1032.0], [54.5, 1040.0], [54.6, 1040.0], [54.7, 1047.0], [54.8, 1047.0], [54.9, 1049.0], [55.0, 1049.0], [55.1, 1049.0], [55.2, 1052.0], [55.3, 1052.0], [55.4, 1052.0], [55.5, 1054.0], [55.6, 1054.0], [55.7, 1055.0], [55.8, 1055.0], [55.9, 1057.0], [56.0, 1058.0], [56.1, 1058.0], [56.2, 1059.0], [56.3, 1059.0], [56.4, 1059.0], [56.5, 1059.0], [56.6, 1059.0], [56.7, 1063.0], [56.8, 1063.0], [56.9, 1064.0], [57.0, 1064.0], [57.1, 1064.0], [57.2, 1065.0], [57.3, 1065.0], [57.4, 1066.0], [57.5, 1066.0], [57.6, 1066.0], [57.7, 1068.0], [57.8, 1068.0], [57.9, 1072.0], [58.0, 1073.0], [58.1, 1073.0], [58.2, 1073.0], [58.3, 1073.0], [58.4, 1073.0], [58.5, 1075.0], [58.6, 1075.0], [58.7, 1076.0], [58.8, 1076.0], [58.9, 1094.0], [59.0, 1302.0], [59.1, 1302.0], [59.2, 1388.0], [59.3, 1388.0], [59.4, 1389.0], [59.5, 1395.0], [59.6, 1395.0], [59.7, 1396.0], [59.8, 1396.0], [59.9, 1398.0], [60.0, 1435.0], [60.1, 1435.0], [60.2, 1441.0], [60.3, 1441.0], [60.4, 1441.0], [60.5, 1442.0], [60.6, 1442.0], [60.7, 1443.0], [60.8, 1443.0], [60.9, 1454.0], [61.0, 1456.0], [61.1, 1456.0], [61.2, 1457.0], [61.3, 1457.0], [61.4, 1458.0], [61.5, 1458.0], [61.6, 1458.0], [61.7, 1459.0], [61.8, 1459.0], [61.9, 1476.0], [62.0, 1484.0], [62.1, 1484.0], [62.2, 1492.0], [62.3, 1492.0], [62.4, 1492.0], [62.5, 1499.0], [62.6, 1499.0], [62.7, 1505.0], [62.8, 1505.0], [62.9, 1511.0], [63.0, 1515.0], [63.1, 1515.0], [63.2, 1515.0], [63.3, 1515.0], [63.4, 1521.0], [63.5, 1528.0], [63.6, 1528.0], [63.7, 1530.0], [63.8, 1530.0], [63.9, 1532.0], [64.0, 1533.0], [64.1, 1533.0], [64.2, 1548.0], [64.3, 1548.0], [64.4, 1550.0], [64.5, 1556.0], [64.6, 1556.0], [64.7, 1558.0], [64.8, 1558.0], [64.9, 1558.0], [65.0, 1568.0], [65.1, 1568.0], [65.2, 1574.0], [65.3, 1574.0], [65.4, 1577.0], [65.5, 1578.0], [65.6, 1578.0], [65.7, 1580.0], [65.8, 1580.0], [65.9, 1586.0], [66.0, 1589.0], [66.1, 1589.0], [66.2, 1600.0], [66.3, 1600.0], [66.4, 1603.0], [66.5, 1605.0], [66.6, 1605.0], [66.7, 1606.0], [66.8, 1606.0], [66.9, 1613.0], [67.0, 1613.0], [67.1, 1613.0], [67.2, 1615.0], [67.3, 1615.0], [67.4, 1617.0], [67.5, 1618.0], [67.6, 1618.0], [67.7, 1619.0], [67.8, 1619.0], [67.9, 1623.0], [68.0, 1625.0], [68.1, 1625.0], [68.2, 1627.0], [68.3, 1627.0], [68.4, 1628.0], [68.5, 1629.0], [68.6, 1629.0], [68.7, 1632.0], [68.8, 1632.0], [68.9, 1633.0], [69.0, 1634.0], [69.1, 1634.0], [69.2, 1634.0], [69.3, 1634.0], [69.4, 1638.0], [69.5, 1643.0], [69.6, 1643.0], [69.7, 1646.0], [69.8, 1646.0], [69.9, 1648.0], [70.0, 1649.0], [70.1, 1649.0], [70.2, 1650.0], [70.3, 1650.0], [70.4, 1651.0], [70.5, 1656.0], [70.6, 1656.0], [70.7, 1657.0], [70.8, 1657.0], [70.9, 1658.0], [71.0, 1661.0], [71.1, 1661.0], [71.2, 1662.0], [71.3, 1662.0], [71.4, 1664.0], [71.5, 1670.0], [71.6, 1670.0], [71.7, 1674.0], [71.8, 1674.0], [71.9, 1676.0], [72.0, 1678.0], [72.1, 1678.0], [72.2, 1679.0], [72.3, 1679.0], [72.4, 1680.0], [72.5, 1680.0], [72.6, 1680.0], [72.7, 1682.0], [72.8, 1682.0], [72.9, 1688.0], [73.0, 1688.0], [73.1, 1690.0], [73.2, 1695.0], [73.3, 1695.0], [73.4, 1695.0], [73.5, 1695.0], [73.6, 1726.0], [73.7, 1726.0], [73.8, 1726.0], [73.9, 1727.0], [74.0, 1727.0], [74.1, 1728.0], [74.2, 1731.0], [74.3, 1731.0], [74.4, 1731.0], [74.5, 1731.0], [74.6, 1735.0], [74.7, 1737.0], [74.8, 1737.0], [74.9, 1737.0], [75.0, 1737.0], [75.1, 1740.0], [75.2, 1742.0], [75.3, 1742.0], [75.4, 1754.0], [75.5, 1754.0], [75.6, 1756.0], [75.7, 1757.0], [75.8, 1757.0], [75.9, 1762.0], [76.0, 1762.0], [76.1, 1763.0], [76.2, 1764.0], [76.3, 1764.0], [76.4, 1766.0], [76.5, 1766.0], [76.6, 1768.0], [76.7, 1770.0], [76.8, 1770.0], [76.9, 1778.0], [77.0, 1778.0], [77.1, 1778.0], [77.2, 1781.0], [77.3, 1781.0], [77.4, 1782.0], [77.5, 1782.0], [77.6, 1782.0], [77.7, 1782.0], [77.8, 1782.0], [77.9, 1786.0], [78.0, 1786.0], [78.1, 1790.0], [78.2, 1808.0], [78.3, 1808.0], [78.4, 1808.0], [78.5, 1808.0], [78.6, 1808.0], [78.7, 1812.0], [78.8, 1812.0], [78.9, 1815.0], [79.0, 1815.0], [79.1, 1815.0], [79.2, 1818.0], [79.3, 1818.0], [79.4, 1824.0], [79.5, 1824.0], [79.6, 1826.0], [79.7, 1829.0], [79.8, 1829.0], [79.9, 1829.0], [80.0, 1829.0], [80.1, 1830.0], [80.2, 1831.0], [80.3, 1831.0], [80.4, 1832.0], [80.5, 1832.0], [80.6, 1833.0], [80.7, 1839.0], [80.8, 1839.0], [80.9, 1839.0], [81.0, 1839.0], [81.1, 1840.0], [81.2, 1851.0], [81.3, 1851.0], [81.4, 1889.0], [81.5, 1889.0], [81.6, 1892.0], [81.7, 1896.0], [81.8, 1896.0], [81.9, 1903.0], [82.0, 1903.0], [82.1, 1903.0], [82.2, 1907.0], [82.3, 1907.0], [82.4, 1917.0], [82.5, 1917.0], [82.6, 1931.0], [82.7, 1931.0], [82.8, 1931.0], [82.9, 1944.0], [83.0, 1944.0], [83.1, 1946.0], [83.2, 1946.0], [83.3, 1946.0], [83.4, 1951.0], [83.5, 1951.0], [83.6, 1954.0], [83.7, 1963.0], [83.8, 1963.0], [83.9, 1964.0], [84.0, 1964.0], [84.1, 1971.0], [84.2, 1981.0], [84.3, 1981.0], [84.4, 1983.0], [84.5, 1983.0], [84.6, 1988.0], [84.7, 1991.0], [84.8, 1991.0], [84.9, 2007.0], [85.0, 2007.0], [85.1, 2016.0], [85.2, 2017.0], [85.3, 2017.0], [85.4, 2030.0], [85.5, 2030.0], [85.6, 2031.0], [85.7, 2032.0], [85.8, 2032.0], [85.9, 2040.0], [86.0, 2040.0], [86.1, 2045.0], [86.2, 2046.0], [86.3, 2046.0], [86.4, 2050.0], [86.5, 2050.0], [86.6, 2053.0], [86.7, 2056.0], [86.8, 2056.0], [86.9, 2069.0], [87.0, 2069.0], [87.1, 2072.0], [87.2, 2089.0], [87.3, 2089.0], [87.4, 2092.0], [87.5, 2092.0], [87.6, 2093.0], [87.7, 2175.0], [87.8, 2175.0], [87.9, 2182.0], [88.0, 2182.0], [88.1, 2199.0], [88.2, 2201.0], [88.3, 2201.0], [88.4, 2315.0], [88.5, 2315.0], [88.6, 2324.0], [88.7, 2342.0], [88.8, 2342.0], [88.9, 2342.0], [89.0, 2342.0], [89.1, 2343.0], [89.2, 2348.0], [89.3, 2348.0], [89.4, 2361.0], [89.5, 2361.0], [89.6, 2366.0], [89.7, 2385.0], [89.8, 2385.0], [89.9, 2395.0], [90.0, 2395.0], [90.1, 2407.0], [90.2, 2415.0], [90.3, 2415.0], [90.4, 2439.0], [90.5, 2439.0], [90.6, 2451.0], [90.7, 2471.0], [90.8, 2471.0], [90.9, 2480.0], [91.0, 2480.0], [91.1, 2522.0], [91.2, 2536.0], [91.3, 2536.0], [91.4, 2536.0], [91.5, 2536.0], [91.6, 2544.0], [91.7, 2545.0], [91.8, 2545.0], [91.9, 2550.0], [92.0, 2550.0], [92.1, 2551.0], [92.2, 2564.0], [92.3, 2564.0], [92.4, 2573.0], [92.5, 2573.0], [92.6, 2580.0], [92.7, 2582.0], [92.8, 2582.0], [92.9, 2582.0], [93.0, 2582.0], [93.1, 2590.0], [93.2, 2590.0], [93.3, 2590.0], [93.4, 2590.0], [93.5, 2590.0], [93.6, 2593.0], [93.7, 2610.0], [93.8, 2610.0], [93.9, 2611.0], [94.0, 2611.0], [94.1, 2611.0], [94.2, 2621.0], [94.3, 2621.0], [94.4, 2637.0], [94.5, 2637.0], [94.6, 2645.0], [94.7, 2694.0], [94.8, 2694.0], [94.9, 2694.0], [95.0, 2694.0], [95.1, 2702.0], [95.2, 2718.0], [95.3, 2718.0], [95.4, 2807.0], [95.5, 2807.0], [95.6, 2963.0], [95.7, 2964.0], [95.8, 2964.0], [95.9, 2965.0], [96.0, 2965.0], [96.1, 3015.0], [96.2, 3169.0], [96.3, 3169.0], [96.4, 3193.0], [96.5, 3193.0], [96.6, 3220.0], [96.7, 3372.0], [96.8, 3372.0], [96.9, 3375.0], [97.0, 3375.0], [97.1, 3387.0], [97.2, 3497.0], [97.3, 3497.0], [97.4, 3512.0], [97.5, 3512.0], [97.6, 3639.0], [97.7, 3648.0], [97.8, 3648.0], [97.9, 3766.0], [98.0, 3766.0], [98.1, 3987.0], [98.2, 4393.0], [98.3, 4393.0], [98.4, 4525.0], [98.5, 4525.0], [98.6, 4600.0], [98.7, 4612.0], [98.8, 4612.0], [98.9, 4675.0], [99.0, 4675.0], [99.1, 4729.0], [99.2, 4738.0], [99.3, 4738.0], [99.4, 4771.0], [99.5, 4771.0], [99.6, 4854.0], [99.7, 4987.0], [99.8, 4987.0], [99.9, 5458.0], [100.0, 5458.0]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[0.0, 529.0], [0.1, 529.0], [0.2, 531.0], [0.3, 531.0], [0.4, 537.0], [0.5, 546.0], [0.6, 546.0], [0.7, 546.0], [0.8, 546.0], [0.9, 548.0], [1.0, 549.0], [1.1, 549.0], [1.2, 549.0], [1.3, 549.0], [1.4, 551.0], [1.5, 555.0], [1.6, 555.0], [1.7, 555.0], [1.8, 555.0], [1.9, 555.0], [2.0, 555.0], [2.1, 555.0], [2.2, 555.0], [2.3, 555.0], [2.4, 556.0], [2.5, 558.0], [2.6, 558.0], [2.7, 1032.0], [2.8, 1032.0], [2.9, 1033.0], [3.0, 1033.0], [3.1, 1033.0], [3.2, 1034.0], [3.3, 1034.0], [3.4, 1034.0], [3.5, 1041.0], [3.6, 1041.0], [3.7, 1041.0], [3.8, 1041.0], [3.9, 1041.0], [4.0, 1042.0], [4.1, 1042.0], [4.2, 1043.0], [4.3, 1043.0], [4.4, 1044.0], [4.5, 1044.0], [4.6, 1044.0], [4.7, 1044.0], [4.8, 1044.0], [4.9, 1045.0], [5.0, 1045.0], [5.1, 1045.0], [5.2, 1045.0], [5.3, 1045.0], [5.4, 1046.0], [5.5, 1046.0], [5.6, 1046.0], [5.7, 1046.0], [5.8, 1046.0], [5.9, 1046.0], [6.0, 1046.0], [6.1, 1047.0], [6.2, 1047.0], [6.3, 1047.0], [6.4, 1047.0], [6.5, 1047.0], [6.6, 1047.0], [6.7, 1048.0], [6.8, 1048.0], [6.9, 1048.0], [7.0, 1048.0], [7.1, 1049.0], [7.2, 1051.0], [7.3, 1051.0], [7.4, 1052.0], [7.5, 1052.0], [7.6, 1053.0], [7.7, 1054.0], [7.8, 1054.0], [7.9, 1056.0], [8.0, 1056.0], [8.1, 1058.0], [8.2, 1058.0], [8.3, 1058.0], [8.4, 1059.0], [8.5, 1059.0], [8.6, 1060.0], [8.7, 1060.0], [8.8, 1060.0], [8.9, 1061.0], [9.0, 1061.0], [9.1, 1061.0], [9.2, 1062.0], [9.3, 1062.0], [9.4, 1062.0], [9.5, 1062.0], [9.6, 1063.0], [9.7, 1064.0], [9.8, 1064.0], [9.9, 1065.0], [10.0, 1065.0], [10.1, 1066.0], [10.2, 1066.0], [10.3, 1066.0], [10.4, 1067.0], [10.5, 1067.0], [10.6, 1067.0], [10.7, 1067.0], [10.8, 1067.0], [10.9, 1067.0], [11.0, 1067.0], [11.1, 1068.0], [11.2, 1068.0], [11.3, 1068.0], [11.4, 1069.0], [11.5, 1069.0], [11.6, 1069.0], [11.7, 1069.0], [11.8, 1069.0], [11.9, 1071.0], [12.0, 1071.0], [12.1, 1071.0], [12.2, 1071.0], [12.3, 1071.0], [12.4, 1071.0], [12.5, 1071.0], [12.6, 1072.0], [12.7, 1072.0], [12.8, 1072.0], [12.9, 1073.0], [13.0, 1073.0], [13.1, 1074.0], [13.2, 1074.0], [13.3, 1074.0], [13.4, 1075.0], [13.5, 1075.0], [13.6, 1076.0], [13.7, 1077.0], [13.8, 1077.0], [13.9, 1077.0], [14.0, 1077.0], [14.1, 1078.0], [14.2, 1078.0], [14.3, 1078.0], [14.4, 1079.0], [14.5, 1079.0], [14.6, 1080.0], [14.7, 1080.0], [14.8, 1080.0], [14.9, 1081.0], [15.0, 1081.0], [15.1, 1081.0], [15.2, 1084.0], [15.3, 1084.0], [15.4, 1085.0], [15.5, 1085.0], [15.6, 1086.0], [15.7, 1087.0], [15.8, 1087.0], [15.9, 1087.0], [16.0, 1087.0], [16.1, 1087.0], [16.2, 1087.0], [16.3, 1087.0], [16.4, 1089.0], [16.5, 1089.0], [16.6, 1089.0], [16.7, 1089.0], [16.8, 1089.0], [16.9, 1092.0], [17.0, 1092.0], [17.1, 1092.0], [17.2, 1093.0], [17.3, 1093.0], [17.4, 1096.0], [17.5, 1096.0], [17.6, 1098.0], [17.7, 1100.0], [17.8, 1100.0], [17.9, 1101.0], [18.0, 1101.0], [18.1, 1101.0], [18.2, 1104.0], [18.3, 1104.0], [18.4, 1104.0], [18.5, 1104.0], [18.6, 1108.0], [18.7, 1115.0], [18.8, 1115.0], [18.9, 1117.0], [19.0, 1117.0], [19.1, 1118.0], [19.2, 1121.0], [19.3, 1121.0], [19.4, 1122.0], [19.5, 1122.0], [19.6, 1126.0], [19.7, 1127.0], [19.8, 1127.0], [19.9, 1128.0], [20.0, 1128.0], [20.1, 1129.0], [20.2, 1130.0], [20.3, 1130.0], [20.4, 1133.0], [20.5, 1133.0], [20.6, 1134.0], [20.7, 1136.0], [20.8, 1136.0], [20.9, 1140.0], [21.0, 1140.0], [21.1, 1142.0], [21.2, 1144.0], [21.3, 1144.0], [21.4, 1144.0], [21.5, 1144.0], [21.6, 1144.0], [21.7, 1145.0], [21.8, 1145.0], [21.9, 1146.0], [22.0, 1146.0], [22.1, 1153.0], [22.2, 1161.0], [22.3, 1161.0], [22.4, 1313.0], [22.5, 1313.0], [22.6, 1446.0], [22.7, 1450.0], [22.8, 1450.0], [22.9, 1456.0], [23.0, 1456.0], [23.1, 1464.0], [23.2, 1466.0], [23.3, 1466.0], [23.4, 1471.0], [23.5, 1471.0], [23.6, 1473.0], [23.7, 1479.0], [23.8, 1479.0], [23.9, 1484.0], [24.0, 1484.0], [24.1, 1485.0], [24.2, 1489.0], [24.3, 1489.0], [24.4, 1494.0], [24.5, 1494.0], [24.6, 1495.0], [24.7, 1496.0], [24.8, 1496.0], [24.9, 1496.0], [25.0, 1496.0], [25.1, 1498.0], [25.2, 1502.0], [25.3, 1502.0], [25.4, 1503.0], [25.5, 1503.0], [25.6, 1503.0], [25.7, 1503.0], [25.8, 1503.0], [25.9, 1504.0], [26.0, 1504.0], [26.1, 1509.0], [26.2, 1517.0], [26.3, 1517.0], [26.4, 1526.0], [26.5, 1526.0], [26.6, 1527.0], [26.7, 1528.0], [26.8, 1528.0], [26.9, 1529.0], [27.0, 1529.0], [27.1, 1529.0], [27.2, 1530.0], [27.3, 1530.0], [27.4, 1531.0], [27.5, 1531.0], [27.6, 1533.0], [27.7, 1534.0], [27.8, 1534.0], [27.9, 1538.0], [28.0, 1538.0], [28.1, 1540.0], [28.2, 1542.0], [28.3, 1542.0], [28.4, 1544.0], [28.5, 1544.0], [28.6, 1555.0], [28.7, 1555.0], [28.8, 1555.0], [28.9, 1562.0], [29.0, 1562.0], [29.1, 1571.0], [29.2, 1572.0], [29.3, 1572.0], [29.4, 1572.0], [29.5, 1572.0], [29.6, 1577.0], [29.7, 1581.0], [29.8, 1581.0], [29.9, 1588.0], [30.0, 1588.0], [30.1, 1591.0], [30.2, 1595.0], [30.3, 1595.0], [30.4, 1597.0], [30.5, 1597.0], [30.6, 1602.0], [30.7, 1608.0], [30.8, 1608.0], [30.9, 1608.0], [31.0, 1608.0], [31.1, 1611.0], [31.2, 1611.0], [31.3, 1611.0], [31.4, 1615.0], [31.5, 1615.0], [31.6, 1619.0], [31.7, 1620.0], [31.8, 1620.0], [31.9, 1625.0], [32.0, 1625.0], [32.1, 1626.0], [32.2, 1630.0], [32.3, 1630.0], [32.4, 1633.0], [32.5, 1633.0], [32.6, 1634.0], [32.7, 1636.0], [32.8, 1636.0], [32.9, 1636.0], [33.0, 1636.0], [33.1, 1640.0], [33.2, 1644.0], [33.3, 1644.0], [33.4, 1644.0], [33.5, 1644.0], [33.6, 1645.0], [33.7, 1653.0], [33.8, 1653.0], [33.9, 1654.0], [34.0, 1654.0], [34.1, 1654.0], [34.2, 1660.0], [34.3, 1660.0], [34.4, 1673.0], [34.5, 1673.0], [34.6, 1673.0], [34.7, 1682.0], [34.8, 1682.0], [34.9, 1692.0], [35.0, 1692.0], [35.1, 1692.0], [35.2, 1700.0], [35.3, 1700.0], [35.4, 1706.0], [35.5, 1706.0], [35.6, 1716.0], [35.7, 1720.0], [35.8, 1720.0], [35.9, 1720.0], [36.0, 1720.0], [36.1, 1725.0], [36.2, 1734.0], [36.3, 1734.0], [36.4, 1735.0], [36.5, 1735.0], [36.6, 1735.0], [36.7, 1746.0], [36.8, 1746.0], [36.9, 1747.0], [37.0, 1747.0], [37.1, 1753.0], [37.2, 1755.0], [37.3, 1755.0], [37.4, 1755.0], [37.5, 1755.0], [37.6, 1757.0], [37.7, 1761.0], [37.8, 1761.0], [37.9, 1763.0], [38.0, 1763.0], [38.1, 1763.0], [38.2, 1767.0], [38.3, 1767.0], [38.4, 1767.0], [38.5, 1767.0], [38.6, 1770.0], [38.7, 1771.0], [38.8, 1771.0], [38.9, 1772.0], [39.0, 1772.0], [39.1, 1774.0], [39.2, 1775.0], [39.3, 1775.0], [39.4, 1775.0], [39.5, 1775.0], [39.6, 1775.0], [39.7, 1778.0], [39.8, 1778.0], [39.9, 1779.0], [40.0, 1779.0], [40.1, 1779.0], [40.2, 1781.0], [40.3, 1781.0], [40.4, 1787.0], [40.5, 1787.0], [40.6, 1787.0], [40.7, 1787.0], [40.8, 1787.0], [40.9, 1789.0], [41.0, 1789.0], [41.1, 1790.0], [41.2, 1797.0], [41.3, 1797.0], [41.4, 1799.0], [41.5, 1799.0], [41.6, 1800.0], [41.7, 1803.0], [41.8, 1803.0], [41.9, 1805.0], [42.0, 1805.0], [42.1, 1807.0], [42.2, 1809.0], [42.3, 1809.0], [42.4, 1809.0], [42.5, 1809.0], [42.6, 1810.0], [42.7, 1812.0], [42.8, 1812.0], [42.9, 1812.0], [43.0, 1812.0], [43.1, 1814.0], [43.2, 1815.0], [43.3, 1815.0], [43.4, 1819.0], [43.5, 1819.0], [43.6, 1821.0], [43.7, 1822.0], [43.8, 1822.0], [43.9, 1822.0], [44.0, 1822.0], [44.1, 1822.0], [44.2, 1823.0], [44.3, 1823.0], [44.4, 1827.0], [44.5, 1827.0], [44.6, 1828.0], [44.7, 1831.0], [44.8, 1831.0], [44.9, 1832.0], [45.0, 1836.0], [45.1, 1836.0], [45.2, 1840.0], [45.3, 1840.0], [45.4, 1841.0], [45.5, 1843.0], [45.6, 1843.0], [45.7, 1845.0], [45.8, 1845.0], [45.9, 1845.0], [46.0, 1846.0], [46.1, 1846.0], [46.2, 1847.0], [46.3, 1847.0], [46.4, 1849.0], [46.5, 1850.0], [46.6, 1850.0], [46.7, 1851.0], [46.8, 1851.0], [46.9, 1852.0], [47.0, 1861.0], [47.1, 1861.0], [47.2, 1862.0], [47.3, 1862.0], [47.4, 1877.0], [47.5, 1877.0], [47.6, 1877.0], [47.7, 1881.0], [47.8, 1881.0], [47.9, 1882.0], [48.0, 1885.0], [48.1, 1885.0], [48.2, 1890.0], [48.3, 1890.0], [48.4, 1890.0], [48.5, 1893.0], [48.6, 1893.0], [48.7, 1901.0], [48.8, 1901.0], [48.9, 1903.0], [49.0, 1909.0], [49.1, 1909.0], [49.2, 1911.0], [49.3, 1911.0], [49.4, 1912.0], [49.5, 1915.0], [49.6, 1915.0], [49.7, 1917.0], [49.8, 1917.0], [49.9, 1918.0], [50.0, 1918.0], [50.1, 1918.0], [50.2, 1924.0], [50.3, 1924.0], [50.4, 1931.0], [50.5, 1933.0], [50.6, 1933.0], [50.7, 1934.0], [50.8, 1934.0], [50.9, 1943.0], [51.0, 1947.0], [51.1, 1947.0], [51.2, 1949.0], [51.3, 1949.0], [51.4, 1952.0], [51.5, 1956.0], [51.6, 1956.0], [51.7, 1959.0], [51.8, 1959.0], [51.9, 1961.0], [52.0, 1966.0], [52.1, 1966.0], [52.2, 1967.0], [52.3, 1967.0], [52.4, 1968.0], [52.5, 1969.0], [52.6, 1969.0], [52.7, 1972.0], [52.8, 1972.0], [52.9, 1973.0], [53.0, 1976.0], [53.1, 1976.0], [53.2, 1977.0], [53.3, 1977.0], [53.4, 1978.0], [53.5, 1988.0], [53.6, 1988.0], [53.7, 1989.0], [53.8, 1989.0], [53.9, 1989.0], [54.0, 1990.0], [54.1, 1990.0], [54.2, 1998.0], [54.3, 1998.0], [54.4, 1998.0], [54.5, 2000.0], [54.6, 2000.0], [54.7, 2007.0], [54.8, 2007.0], [54.9, 2007.0], [55.0, 2008.0], [55.1, 2008.0], [55.2, 2013.0], [55.3, 2013.0], [55.4, 2018.0], [55.5, 2024.0], [55.6, 2024.0], [55.7, 2030.0], [55.8, 2030.0], [55.9, 2031.0], [56.0, 2032.0], [56.1, 2032.0], [56.2, 2033.0], [56.3, 2033.0], [56.4, 2034.0], [56.5, 2034.0], [56.6, 2034.0], [56.7, 2038.0], [56.8, 2038.0], [56.9, 2046.0], [57.0, 2057.0], [57.1, 2057.0], [57.2, 2064.0], [57.3, 2064.0], [57.4, 2070.0], [57.5, 2076.0], [57.6, 2076.0], [57.7, 2078.0], [57.8, 2078.0], [57.9, 2079.0], [58.0, 2079.0], [58.1, 2079.0], [58.2, 2090.0], [58.3, 2090.0], [58.4, 2091.0], [58.5, 2093.0], [58.6, 2093.0], [58.7, 2093.0], [58.8, 2093.0], [58.9, 2096.0], [59.0, 2096.0], [59.1, 2096.0], [59.2, 2096.0], [59.3, 2096.0], [59.4, 2097.0], [59.5, 2098.0], [59.6, 2098.0], [59.7, 2099.0], [59.8, 2099.0], [59.9, 2111.0], [60.0, 2116.0], [60.1, 2116.0], [60.2, 2123.0], [60.3, 2123.0], [60.4, 2128.0], [60.5, 2230.0], [60.6, 2230.0], [60.7, 2232.0], [60.8, 2232.0], [60.9, 2232.0], [61.0, 2234.0], [61.1, 2234.0], [61.2, 2237.0], [61.3, 2237.0], [61.4, 2243.0], [61.5, 2254.0], [61.6, 2254.0], [61.7, 2257.0], [61.8, 2257.0], [61.9, 2265.0], [62.0, 2266.0], [62.1, 2266.0], [62.2, 2286.0], [62.3, 2286.0], [62.4, 2296.0], [62.5, 2323.0], [62.6, 2323.0], [62.7, 2326.0], [62.8, 2326.0], [62.9, 2339.0], [63.0, 2339.0], [63.1, 2339.0], [63.2, 2358.0], [63.3, 2358.0], [63.4, 2368.0], [63.5, 2384.0], [63.6, 2384.0], [63.7, 2410.0], [63.8, 2410.0], [63.9, 2446.0], [64.0, 2450.0], [64.1, 2450.0], [64.2, 2452.0], [64.3, 2452.0], [64.4, 2453.0], [64.5, 2459.0], [64.6, 2459.0], [64.7, 2468.0], [64.8, 2468.0], [64.9, 2484.0], [65.0, 2485.0], [65.1, 2485.0], [65.2, 2486.0], [65.3, 2486.0], [65.4, 2491.0], [65.5, 2523.0], [65.6, 2523.0], [65.7, 2526.0], [65.8, 2526.0], [65.9, 2533.0], [66.0, 2540.0], [66.1, 2540.0], [66.2, 2544.0], [66.3, 2544.0], [66.4, 2545.0], [66.5, 2552.0], [66.6, 2552.0], [66.7, 2553.0], [66.8, 2553.0], [66.9, 2556.0], [67.0, 2560.0], [67.1, 2560.0], [67.2, 2560.0], [67.3, 2560.0], [67.4, 2562.0], [67.5, 2564.0], [67.6, 2564.0], [67.7, 2571.0], [67.8, 2571.0], [67.9, 2572.0], [68.0, 2572.0], [68.1, 2572.0], [68.2, 2576.0], [68.3, 2576.0], [68.4, 2584.0], [68.5, 2591.0], [68.6, 2591.0], [68.7, 2599.0], [68.8, 2599.0], [68.9, 2618.0], [69.0, 2621.0], [69.1, 2621.0], [69.2, 2624.0], [69.3, 2624.0], [69.4, 2625.0], [69.5, 2630.0], [69.6, 2630.0], [69.7, 2634.0], [69.8, 2634.0], [69.9, 2640.0], [70.0, 2642.0], [70.1, 2642.0], [70.2, 2646.0], [70.3, 2646.0], [70.4, 2651.0], [70.5, 2659.0], [70.6, 2659.0], [70.7, 2661.0], [70.8, 2661.0], [70.9, 2663.0], [71.0, 2669.0], [71.1, 2669.0], [71.2, 2675.0], [71.3, 2675.0], [71.4, 2677.0], [71.5, 2683.0], [71.6, 2683.0], [71.7, 2690.0], [71.8, 2690.0], [71.9, 2692.0], [72.0, 2692.0], [72.1, 2698.0], [72.2, 2698.0], [72.3, 2698.0], [72.4, 2698.0], [72.5, 2698.0], [72.6, 2699.0], [72.7, 2701.0], [72.8, 2701.0], [72.9, 2721.0], [73.0, 2721.0], [73.1, 2722.0], [73.2, 2722.0], [73.3, 2722.0], [73.4, 2724.0], [73.5, 2724.0], [73.6, 2731.0], [73.7, 2757.0], [73.8, 2757.0], [73.9, 2771.0], [74.0, 2771.0], [74.1, 2784.0], [74.2, 2792.0], [74.3, 2792.0], [74.4, 2793.0], [74.5, 2793.0], [74.6, 2803.0], [74.7, 2804.0], [74.8, 2804.0], [74.9, 2808.0], [75.0, 2808.0], [75.1, 2814.0], [75.2, 2819.0], [75.3, 2819.0], [75.4, 2822.0], [75.5, 2822.0], [75.6, 2824.0], [75.7, 2837.0], [75.8, 2837.0], [75.9, 2839.0], [76.0, 2839.0], [76.1, 2850.0], [76.2, 2864.0], [76.3, 2864.0], [76.4, 2867.0], [76.5, 2867.0], [76.6, 2885.0], [76.7, 2889.0], [76.8, 2889.0], [76.9, 2893.0], [77.0, 2893.0], [77.1, 2894.0], [77.2, 2897.0], [77.3, 2897.0], [77.4, 2898.0], [77.5, 2898.0], [77.6, 2900.0], [77.7, 2901.0], [77.8, 2901.0], [77.9, 2904.0], [78.0, 2904.0], [78.1, 2915.0], [78.2, 2921.0], [78.3, 2921.0], [78.4, 2935.0], [78.5, 2935.0], [78.6, 2950.0], [78.7, 2956.0], [78.8, 2956.0], [78.9, 2969.0], [79.0, 2969.0], [79.1, 2986.0], [79.2, 2988.0], [79.3, 2988.0], [79.4, 2989.0], [79.5, 2989.0], [79.6, 3034.0], [79.7, 3174.0], [79.8, 3174.0], [79.9, 3204.0], [80.0, 3204.0], [80.1, 3205.0], [80.2, 3209.0], [80.3, 3209.0], [80.4, 3216.0], [80.5, 3216.0], [80.6, 3217.0], [80.7, 3225.0], [80.8, 3225.0], [80.9, 3239.0], [81.0, 3239.0], [81.1, 3246.0], [81.2, 3254.0], [81.3, 3254.0], [81.4, 3255.0], [81.5, 3255.0], [81.6, 3272.0], [81.7, 3272.0], [81.8, 3272.0], [81.9, 3284.0], [82.0, 3284.0], [82.1, 3285.0], [82.2, 3320.0], [82.3, 3320.0], [82.4, 3323.0], [82.5, 3323.0], [82.6, 3323.0], [82.7, 3328.0], [82.8, 3328.0], [82.9, 3336.0], [83.0, 3336.0], [83.1, 3338.0], [83.2, 3346.0], [83.3, 3346.0], [83.4, 3349.0], [83.5, 3349.0], [83.6, 3349.0], [83.7, 3353.0], [83.8, 3353.0], [83.9, 3360.0], [84.0, 3360.0], [84.1, 3361.0], [84.2, 3367.0], [84.3, 3367.0], [84.4, 3375.0], [84.5, 3375.0], [84.6, 3384.0], [84.7, 3407.0], [84.8, 3407.0], [84.9, 3410.0], [85.0, 3410.0], [85.1, 3411.0], [85.2, 3423.0], [85.3, 3423.0], [85.4, 3428.0], [85.5, 3428.0], [85.6, 3439.0], [85.7, 3440.0], [85.8, 3440.0], [85.9, 3450.0], [86.0, 3450.0], [86.1, 3454.0], [86.2, 3455.0], [86.3, 3455.0], [86.4, 3468.0], [86.5, 3468.0], [86.6, 3476.0], [86.7, 3499.0], [86.8, 3499.0], [86.9, 3500.0], [87.0, 3500.0], [87.1, 3515.0], [87.2, 3541.0], [87.3, 3541.0], [87.4, 3554.0], [87.5, 3554.0], [87.6, 3564.0], [87.7, 3571.0], [87.8, 3571.0], [87.9, 3629.0], [88.0, 3629.0], [88.1, 3645.0], [88.2, 3693.0], [88.3, 3693.0], [88.4, 3698.0], [88.5, 3698.0], [88.6, 3701.0], [88.7, 3783.0], [88.8, 3783.0], [88.9, 3886.0], [89.0, 3886.0], [89.1, 3891.0], [89.2, 3904.0], [89.3, 3904.0], [89.4, 3918.0], [89.5, 3918.0], [89.6, 4004.0], [89.7, 4014.0], [89.8, 4014.0], [89.9, 4031.0], [90.0, 4031.0], [90.1, 4032.0], [90.2, 4035.0], [90.3, 4035.0], [90.4, 4123.0], [90.5, 4123.0], [90.6, 4171.0], [90.7, 4276.0], [90.8, 4276.0], [90.9, 4328.0], [91.0, 4328.0], [91.1, 4400.0], [91.2, 4432.0], [91.3, 4432.0], [91.4, 4559.0], [91.5, 4559.0], [91.6, 4605.0], [91.7, 4726.0], [91.8, 4726.0], [91.9, 4749.0], [92.0, 4749.0], [92.1, 4750.0], [92.2, 4860.0], [92.3, 4860.0], [92.4, 4887.0], [92.5, 4887.0], [92.6, 4897.0], [92.7, 4918.0], [92.8, 4918.0], [92.9, 4931.0], [93.0, 4931.0], [93.1, 4934.0], [93.2, 4940.0], [93.3, 4940.0], [93.4, 4956.0], [93.5, 4956.0], [93.6, 4971.0], [93.7, 5019.0], [93.8, 5019.0], [93.9, 5048.0], [94.0, 5048.0], [94.1, 5052.0], [94.2, 5059.0], [94.3, 5059.0], [94.4, 5060.0], [94.5, 5060.0], [94.6, 5122.0], [94.7, 5163.0], [94.8, 5163.0], [94.9, 5300.0], [95.0, 5300.0], [95.1, 5336.0], [95.2, 5539.0], [95.3, 5539.0], [95.4, 5846.0], [95.5, 5846.0], [95.6, 5861.0], [95.7, 7806.0], [95.8, 7806.0], [95.9, 7831.0], [96.0, 7831.0], [96.1, 7838.0], [96.2, 7849.0], [96.3, 7849.0], [96.4, 7850.0], [96.5, 7850.0], [96.6, 7915.0], [96.7, 7964.0], [96.8, 7964.0], [96.9, 7979.0], [97.0, 7979.0], [97.1, 8048.0], [97.2, 8064.0], [97.3, 8064.0], [97.4, 8072.0], [97.5, 8072.0], [97.6, 8072.0], [97.7, 8306.0], [97.8, 8306.0], [97.9, 8528.0], [98.0, 8528.0], [98.1, 11145.0], [98.2, 13766.0], [98.3, 13766.0], [98.4, 13831.0], [98.5, 13831.0], [98.6, 13852.0], [98.7, 13884.0], [98.8, 13884.0], [98.9, 13884.0], [99.0, 13884.0], [99.1, 13893.0], [99.2, 13894.0], [99.3, 13894.0], [99.4, 13900.0], [99.5, 13900.0], [99.6, 14062.0], [99.7, 14861.0], [99.8, 14861.0], [99.9, 14900.0], [100.0, 14900.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 356.0, "series": [{"data": [[8500.0, 21.0], [9000.0, 20.0], [9500.0, 29.0], [10000.0, 17.0], [10500.0, 6.0], [11000.0, 7.0], [11500.0, 43.0], [12000.0, 1.0], [13500.0, 3.0], [14500.0, 16.0], [15000.0, 13.0], [1000.0, 15.0], [16000.0, 32.0], [16500.0, 27.0], [17000.0, 2.0], [1500.0, 1.0], [2500.0, 14.0], [3000.0, 5.0], [3500.0, 18.0], [4000.0, 8.0], [4500.0, 41.0], [5000.0, 31.0], [5500.0, 89.0], [6000.0, 54.0], [6500.0, 16.0], [7500.0, 1.0], [8000.0, 70.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 356.0], [4500.0, 6.0], [2500.0, 12.0], [5500.0, 4.0], [1500.0, 110.0], [13500.0, 3.0], [2000.0, 23.0], [1000.0, 70.0], [500.0, 16.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[0.0, 318.0], [4500.0, 9.0], [5000.0, 1.0], [2500.0, 30.0], [1500.0, 133.0], [3000.0, 8.0], [3500.0, 5.0], [2000.0, 37.0], [500.0, 8.0], [1000.0, 50.0], [4000.0, 1.0]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[8500.0, 1.0], [2500.0, 84.0], [11000.0, 1.0], [3000.0, 44.0], [13500.0, 8.0], [3500.0, 16.0], [14000.0, 1.0], [14500.0, 2.0], [4000.0, 11.0], [1000.0, 135.0], [4500.0, 14.0], [5000.0, 9.0], [5500.0, 3.0], [1500.0, 176.0], [7500.0, 8.0], [500.0, 16.0], [2000.0, 66.0], [8000.0, 5.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 500, "maxX": 17000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 311.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1415.0, "series": [{"data": [[1.0, 311.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[0.0, 674.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[2.0, 1415.0]], "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 389.32541666666634, "minX": 1.60814556E12, "maxY": 389.32541666666634, "series": [{"data": [[1.60814556E12, 389.32541666666634]], "isOverall": false, "label": "Slypee", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814556E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 263.5, "minX": 1.0, "maxY": 16938.199999999997, "series": [{"data": [[534.0, 9242.8], [533.0, 9348.0], [524.0, 9426.0], [521.0, 9097.75], [520.0, 9704.0], [519.0, 9728.333333333332], [574.0, 8891.4], [571.0, 8895.0], [570.0, 8970.6], [569.0, 8967.0], [568.0, 8963.333333333334], [565.0, 8971.0], [561.0, 8984.0], [550.0, 9098.0], [592.0, 5894.394736842106], [596.0, 4853.339506172838], [594.0, 6083.599999999999], [593.0, 5987.466666666667], [591.0, 5578.0], [580.0, 8278.5], [582.0, 8346.416666666666], [581.0, 8634.285714285714], [590.0, 5987.0], [589.0, 6040.0], [588.0, 7116.400000000001], [587.0, 8092.8], [586.0, 8239.833333333332], [584.0, 8297.0], [75.0, 16938.199999999997], [98.0, 16353.0], [97.0, 16375.07142857143], [103.0, 14978.571428571428], [100.0, 16241.433333333332], [106.0, 13873.0], [104.0, 13884.0], [119.0, 14694.0], [120.0, 14726.0], [242.0, 13962.0], [318.0, 11755.75], [315.0, 11725.0], [314.0, 11775.0], [312.0, 11726.5], [310.0, 11902.0], [305.0, 11892.0], [304.0, 11916.0], [333.0, 11555.0], [332.0, 11575.666666666666], [324.0, 11648.5], [321.0, 11701.5], [338.0, 11583.0], [356.0, 6337.0], [357.0, 1260.5], [359.0, 1176.8], [360.0, 8177.666666666667], [352.0, 11492.0], [427.0, 11930.95238095238], [456.0, 9617.4], [459.0, 11253.0], [458.0, 10420.5], [457.0, 10431.0], [454.0, 10489.0], [451.0, 10446.0], [450.0, 10963.0], [477.0, 10788.0], [474.0, 10850.0], [473.0, 10883.0], [472.0, 10883.0], [471.0, 11006.333333333334], [488.0, 10112.0], [487.0, 9659.7], [508.0, 9703.666666666666], [507.0, 9638.5], [501.0, 10022.0], [500.0, 9693.5], [499.0, 9346.666666666666], [497.0, 10060.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[479.7083333333333, 8434.031666666659]], "isOverall": false, "label": "HomePage-Aggregated", "isController": false}, {"data": [[2.0, 286.0], [3.0, 285.0], [4.0, 285.0], [5.0, 287.0], [6.0, 283.0], [7.0, 283.0], [8.0, 281.0], [9.0, 272.0], [10.0, 271.0], [11.0, 270.0], [12.0, 269.0], [13.0, 269.0], [14.0, 270.0], [15.0, 267.0], [16.0, 305.0], [17.0, 318.0], [18.0, 317.0], [19.0, 314.0], [20.0, 310.0], [21.0, 299.0], [22.0, 306.0], [23.0, 299.0], [24.0, 270.0], [25.0, 300.0], [26.0, 305.0], [27.0, 325.0], [28.0, 316.0], [29.0, 308.0], [30.0, 319.0], [31.0, 300.0], [33.0, 297.0], [32.0, 299.0], [35.0, 303.0], [34.0, 307.0], [37.0, 292.0], [36.0, 291.0], [39.0, 292.0], [38.0, 287.0], [41.0, 269.0], [40.0, 288.0], [43.0, 267.0], [42.0, 271.0], [45.0, 269.0], [44.0, 265.0], [47.0, 308.0], [46.0, 301.0], [49.0, 301.0], [48.0, 304.0], [51.0, 308.0], [50.0, 301.0], [53.0, 304.0], [52.0, 301.0], [55.0, 313.0], [54.0, 295.0], [57.0, 302.0], [56.0, 310.0], [59.0, 297.0], [58.0, 295.0], [61.0, 308.0], [60.0, 295.0], [63.0, 288.0], [62.0, 280.0], [67.0, 268.0], [66.0, 265.0], [65.0, 269.0], [64.0, 284.0], [71.0, 289.0], [70.0, 265.0], [69.0, 269.0], [68.0, 264.0], [75.0, 287.0], [74.0, 287.0], [73.0, 291.0], [72.0, 292.0], [79.0, 304.0], [78.0, 270.0], [77.0, 267.0], [76.0, 274.0], [83.0, 289.0], [82.0, 298.0], [81.0, 289.0], [80.0, 301.0], [87.0, 315.0], [86.0, 287.0], [85.0, 289.0], [84.0, 309.0], [91.0, 280.0], [90.0, 279.0], [89.0, 278.0], [88.0, 296.0], [95.0, 278.0], [94.0, 278.0], [93.0, 285.0], [92.0, 272.0], [99.0, 303.0], [98.0, 279.0], [97.0, 278.0], [96.0, 284.0], [103.0, 269.0], [102.0, 269.0], [101.0, 269.0], [100.0, 287.0], [107.0, 269.0], [106.0, 13880.0], [105.0, 13875.0], [104.0, 13878.0], [111.0, 264.0], [110.0, 266.0], [109.0, 267.0], [108.0, 270.0], [115.0, 267.0], [114.0, 1049.0], [113.0, 1044.0], [112.0, 1053.0], [119.0, 269.0], [118.0, 267.0], [117.0, 267.0], [116.0, 269.0], [123.0, 280.0], [122.0, 269.0], [121.0, 274.0], [120.0, 270.0], [127.0, 274.0], [126.0, 279.0], [125.0, 275.0], [124.0, 275.0], [135.0, 275.0], [134.0, 279.0], [133.0, 273.0], [132.0, 270.0], [131.0, 268.0], [130.0, 270.0], [129.0, 269.0], [128.0, 276.0], [143.0, 1141.0], [142.0, 265.0], [141.0, 269.0], [140.0, 271.0], [139.0, 1044.0], [138.0, 272.0], [137.0, 272.0], [136.0, 281.0], [151.0, 1112.0], [150.0, 1137.0], [149.0, 1131.0], [148.0, 1094.0], [147.0, 1139.0], [146.0, 1156.0], [145.0, 1148.0], [144.0, 1163.0], [159.0, 1050.0], [158.0, 1040.0], [157.0, 1077.0], [156.0, 1110.0], [155.0, 1116.0], [154.0, 1127.0], [153.0, 1122.0], [152.0, 1118.0], [167.0, 339.0], [165.0, 330.0], [164.0, 325.0], [162.0, 328.0], [161.0, 375.0], [160.0, 265.0], [175.0, 317.0], [174.0, 313.0], [173.0, 292.0], [172.0, 327.0], [171.0, 318.0], [170.0, 318.0], [169.0, 381.0], [168.0, 328.5], [183.0, 288.0], [182.0, 306.0], [181.0, 308.0], [180.0, 310.0], [179.0, 318.0], [178.0, 310.0], [177.0, 273.0], [176.0, 320.0], [191.0, 271.0], [190.0, 270.0], [189.0, 278.0], [188.0, 272.0], [187.0, 275.0], [186.0, 1055.0], [185.0, 299.0], [184.0, 288.0], [199.0, 1086.0], [198.0, 1080.0], [196.0, 1092.0], [195.0, 1054.0], [194.0, 1055.0], [193.0, 264.0], [192.0, 1038.0], [207.0, 393.0], [206.0, 306.0], [205.0, 1048.0], [204.0, 406.0], [203.0, 1057.0], [202.0, 281.0], [201.0, 1066.0], [200.0, 1071.0], [215.0, 4738.0], [214.0, 277.0], [213.0, 274.0], [212.0, 291.0], [211.0, 354.0], [210.0, 328.0], [209.0, 287.0], [208.0, 393.0], [223.0, 1455.0], [222.0, 1103.0], [221.0, 1591.0], [220.0, 1522.0], [219.0, 1591.0], [218.0, 1113.0], [217.0, 1144.0], [216.0, 1167.0], [231.0, 1075.0], [230.0, 1140.0], [229.0, 1112.0], [228.0, 1084.0], [227.0, 1389.0], [226.0, 1572.0], [225.0, 1417.0], [224.0, 318.0], [239.0, 1496.0], [238.0, 1370.0], [237.0, 1071.0], [236.0, 276.0], [235.0, 288.0], [234.0, 279.0], [233.0, 1517.0], [232.0, 1512.0], [247.0, 265.0], [246.0, 265.0], [245.0, 268.0], [244.0, 273.0], [243.0, 271.0], [242.0, 269.0], [241.0, 268.0], [240.0, 269.0], [255.0, 285.0], [254.0, 1775.0], [253.0, 1779.0], [252.0, 270.0], [251.0, 269.0], [250.0, 270.0], [249.0, 267.0], [248.0, 266.0], [270.0, 1575.0], [271.0, 1580.0], [269.0, 1588.0], [268.0, 1587.0], [267.0, 1613.0], [266.0, 1625.0], [265.0, 1650.0], [264.0, 1579.0], [263.0, 270.0], [257.0, 279.0], [256.0, 279.0], [259.0, 1529.0], [258.0, 1763.0], [262.0, 1534.0], [261.0, 283.0], [260.0, 267.0], [286.0, 422.0], [287.0, 427.0], [285.0, 1517.0], [284.0, 1536.0], [283.0, 446.0], [282.0, 1537.0], [281.0, 1510.0], [280.0, 413.0], [279.0, 436.0], [273.0, 1584.0], [272.0, 1575.0], [275.0, 1561.0], [274.0, 1564.0], [278.0, 456.0], [277.0, 280.0], [276.0, 1540.0], [302.0, 344.0], [303.0, 416.0], [301.0, 418.0], [300.0, 405.0], [299.0, 368.0], [298.0, 417.0], [297.0, 424.0], [296.0, 429.0], [295.0, 428.0], [289.0, 444.0], [288.0, 401.0], [291.0, 371.0], [290.0, 438.0], [294.0, 1493.0], [293.0, 425.0], [292.0, 341.0], [318.0, 334.0], [319.0, 326.0], [317.0, 332.0], [316.0, 345.0], [315.0, 1373.0], [314.0, 341.0], [313.0, 324.0], [312.0, 1420.0], [311.0, 1424.0], [305.0, 1491.0], [304.0, 409.0], [307.0, 1465.0], [306.0, 1457.0], [310.0, 1455.0], [309.0, 1470.0], [308.0, 1436.0], [334.0, 1693.0], [335.0, 1527.0], [333.0, 1449.0], [332.0, 1589.0], [331.0, 1307.0], [330.0, 265.0], [329.0, 1886.0], [328.0, 1448.0], [327.0, 1599.0], [321.0, 333.0], [320.0, 333.0], [323.0, 305.0], [322.0, 303.0], [326.0, 4621.0], [325.0, 281.0], [324.0, 316.0], [350.0, 2970.0], [351.0, 1964.0], [349.0, 1528.0], [348.0, 1638.0], [347.0, 1384.0], [346.0, 1354.0], [345.0, 1521.0], [344.0, 1987.0], [343.0, 1670.0], [337.0, 1553.0], [336.0, 1977.0], [339.0, 2512.0], [338.0, 1680.0], [342.0, 1489.0], [341.0, 1995.0], [340.0, 1972.0], [366.0, 1355.0], [367.0, 283.0], [365.0, 290.0], [364.0, 1948.0], [363.0, 307.0], [362.0, 1729.0], [361.0, 1966.0], [360.0, 1398.0], [359.0, 447.0], [353.0, 584.0], [355.0, 1155.5], [354.0, 1516.0], [358.0, 2030.0], [357.0, 2025.0], [356.0, 431.0], [382.0, 374.0], [383.0, 315.0], [381.0, 355.0], [380.0, 382.0], [379.0, 380.0], [378.0, 396.0], [377.0, 427.0], [376.0, 399.0], [375.0, 416.0], [369.0, 1974.0], [368.0, 1346.0], [371.0, 1845.0], [370.0, 1350.0], [374.0, 425.0], [373.0, 393.0], [372.0, 1527.0], [398.0, 670.0], [399.0, 565.0], [397.0, 512.0], [396.0, 1625.0], [395.0, 645.0], [394.0, 272.0], [393.0, 1701.0], [392.0, 1707.0], [391.0, 280.0], [385.0, 275.0], [384.0, 283.0], [387.0, 301.0], [386.0, 329.0], [390.0, 277.0], [389.0, 282.0], [388.0, 306.0], [414.0, 1587.0], [415.0, 509.0], [413.0, 1673.0], [412.0, 2401.0], [411.0, 2402.0], [410.0, 1577.0], [409.0, 1731.0], [408.0, 2470.0], [407.0, 1775.0], [401.0, 655.0], [400.0, 606.0], [403.0, 447.0], [402.0, 400.0], [406.0, 287.0], [405.0, 543.0], [404.0, 523.0], [430.0, 1511.0], [431.0, 1517.0], [429.0, 1500.0], [428.0, 1528.0], [427.0, 2316.0], [426.0, 2643.0], [425.0, 305.0], [424.0, 1665.0], [423.0, 434.0], [417.0, 367.0], [416.0, 1642.0], [419.0, 490.0], [418.0, 2404.0], [422.0, 459.0], [421.0, 470.0], [420.0, 1653.0], [446.0, 2116.0], [447.0, 1944.0], [445.0, 291.0], [444.0, 273.0], [443.0, 2601.0], [442.0, 1487.0], [441.0, 1517.0], [440.0, 1621.0], [439.0, 2543.0], [433.0, 1540.0], [432.0, 269.0], [435.0, 2014.0], [434.0, 1625.0], [438.0, 1593.0], [437.0, 1595.0], [436.0, 2554.0], [462.0, 2546.0], [463.0, 1728.0], [461.0, 2580.0], [460.0, 297.0], [459.0, 1765.0], [458.0, 319.0], [457.0, 313.0], [456.0, 1701.0], [455.0, 2936.0], [449.0, 1946.0], [448.0, 1973.0], [451.0, 1907.0], [450.0, 2605.0], [454.0, 1910.0], [453.0, 1721.0], [452.0, 1950.0], [478.0, 2209.0], [479.0, 1679.0], [477.0, 2213.0], [476.0, 2213.0], [475.0, 1506.0], [474.0, 299.0], [473.0, 2262.0], [472.0, 2295.0], [471.0, 414.0], [465.0, 622.0], [464.0, 508.0], [467.0, 487.0], [466.0, 556.0], [470.0, 572.0], [469.0, 571.0], [468.0, 538.0], [494.0, 2311.0], [495.0, 2573.0], [493.0, 1624.0], [492.0, 1636.0], [491.0, 297.0], [490.0, 1643.0], [489.0, 2333.0], [488.0, 2342.0], [487.0, 1626.0], [481.0, 1482.0], [480.0, 1512.0], [483.0, 1495.0], [482.0, 1667.0], [486.0, 1642.0], [485.0, 1646.0], [484.0, 1663.0], [510.0, 270.0], [511.0, 2287.0], [509.0, 272.0], [508.0, 1731.0], [507.0, 1892.0], [506.0, 1733.0], [505.0, 2354.0], [504.0, 1741.0], [503.0, 1754.0], [497.0, 2401.0], [496.0, 1795.0], [499.0, 1776.0], [498.0, 1765.0], [502.0, 1758.0], [501.0, 1758.0], [500.0, 2388.0], [540.0, 379.0], [543.0, 334.0], [529.0, 375.0], [528.0, 423.0], [531.0, 367.0], [530.0, 1856.0], [533.0, 1896.0], [532.0, 359.0], [542.0, 323.0], [541.0, 367.0], [539.0, 304.0], [538.0, 375.0], [537.0, 377.0], [536.0, 307.0], [527.0, 453.0], [513.0, 2277.0], [512.0, 2296.0], [515.0, 270.0], [514.0, 273.0], [517.0, 277.0], [516.0, 287.0], [519.0, 272.0], [518.0, 266.0], [526.0, 416.0], [525.0, 411.0], [524.0, 1933.0], [523.0, 1837.0], [522.0, 1973.0], [521.0, 268.0], [520.0, 286.0], [535.0, 308.0], [534.0, 1817.0], [572.0, 292.0], [575.0, 344.0], [560.0, 326.0], [563.0, 296.0], [561.0, 270.0], [565.0, 299.0], [564.0, 325.0], [574.0, 272.0], [573.0, 276.0], [571.0, 290.0], [570.0, 287.0], [569.0, 287.0], [568.0, 331.0], [559.0, 1481.0], [545.0, 346.0], [544.0, 293.0], [547.0, 337.0], [546.0, 328.0], [549.0, 338.0], [548.0, 342.0], [551.0, 311.0], [550.0, 340.0], [556.0, 288.0], [555.0, 277.0], [554.0, 305.0], [553.0, 319.0], [552.0, 325.0], [567.0, 289.0], [566.0, 297.0], [592.0, 5561.0], [596.0, 4501.0], [600.0, 268.0], [583.0, 325.0], [582.0, 292.0], [581.0, 267.0], [580.0, 284.0], [579.0, 275.0], [578.0, 303.0], [577.0, 326.0], [576.0, 339.0], [599.0, 277.0], [598.0, 291.0], [597.0, 292.0], [595.0, 4638.0], [594.0, 4755.0], [593.0, 4855.0], [591.0, 5572.0], [590.0, 5621.0], [589.0, 5654.0], [588.0, 311.0], [587.0, 288.0], [586.0, 286.0], [585.0, 292.0], [584.0, 320.0], [1.0, 285.0]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[300.5216666666667, 946.8350000000003]], "isOverall": false, "label": "Detail Category Page-Aggregated", "isController": false}, {"data": [[15.0, 304.0], [16.0, 305.5], [17.0, 307.3333333333333], [19.0, 310.0], [22.0, 292.0], [24.0, 267.75], [41.0, 1066.0], [43.0, 1065.1666666666667], [42.0, 1073.0], [45.0, 321.8181818181818], [70.0, 296.78260869565224], [75.0, 274.0], [73.0, 329.0], [98.0, 357.90909090909093], [97.0, 1073.0], [103.0, 268.0], [100.0, 263.5], [115.0, 905.2], [117.0, 1040.0], [135.0, 279.0], [132.0, 272.0], [139.0, 268.0], [138.0, 1052.0], [151.0, 293.0], [150.0, 294.0], [147.0, 274.0], [146.0, 271.0], [156.0, 267.5], [154.0, 272.0], [153.0, 276.0], [152.0, 285.5], [162.0, 288.0], [171.0, 296.5], [170.0, 314.0], [182.0, 278.0], [191.0, 1032.0], [189.0, 272.0], [188.0, 274.0], [185.0, 267.0], [199.0, 1068.0], [196.0, 1064.0], [195.0, 1070.25], [194.0, 1058.0], [193.0, 1047.0], [206.0, 345.0], [201.0, 1055.0], [200.0, 1049.0], [215.0, 285.0], [214.0, 315.0], [212.0, 311.0], [210.0, 313.0], [209.0, 339.5], [208.0, 307.0], [222.0, 1515.0], [226.0, 1499.0], [240.0, 1396.0], [253.0, 287.0], [252.0, 1731.0], [251.0, 272.0], [264.0, 1578.0], [267.0, 1257.25], [266.0, 1558.0], [265.0, 1112.5], [261.0, 281.875], [259.0, 267.0], [258.0, 272.0], [257.0, 1763.0], [256.0, 1744.5], [285.0, 354.0], [278.0, 943.0], [277.0, 997.5], [273.0, 1550.0], [300.0, 391.0], [299.0, 395.0], [298.0, 389.0], [297.0, 430.0], [296.0, 396.0], [295.0, 413.75], [292.0, 415.0], [290.0, 4729.0], [312.0, 4525.0], [308.0, 1441.0], [304.0, 921.0], [334.0, 284.0], [333.0, 1506.0], [327.0, 1568.0], [324.0, 4393.0], [321.0, 310.0], [351.0, 1562.5], [349.0, 1476.0], [345.0, 1530.0], [342.0, 1678.0], [340.0, 1456.0], [338.0, 2427.5], [336.0, 1457.0], [364.0, 1393.0], [360.0, 2023.2], [359.0, 489.0], [357.0, 495.5], [356.0, 1458.5], [354.0, 3766.0], [352.0, 2234.833333333333], [382.0, 411.3333333333333], [379.0, 391.25], [374.0, 370.0], [373.0, 1582.25], [371.0, 1461.0], [369.0, 1672.0], [398.0, 513.0], [396.0, 487.0], [395.0, 1114.5], [394.0, 310.0], [392.0, 266.0], [388.0, 1019.0], [387.0, 1754.0], [386.0, 342.1666666666667], [414.0, 2390.0], [413.0, 1737.0], [411.0, 2066.5], [410.0, 1731.0], [409.0, 1656.0], [406.0, 1216.0], [405.0, 1098.75], [431.0, 3144.0], [429.0, 1501.5], [428.0, 4675.0], [427.0, 2371.25], [424.0, 2694.6666666666665], [419.0, 1672.0], [418.0, 1676.5], [416.0, 847.6666666666666], [447.0, 1230.0], [445.0, 1574.0], [443.0, 1450.75], [442.0, 658.6], [434.0, 1649.0], [462.0, 1726.0], [463.0, 2870.25], [461.0, 2600.0], [451.0, 1295.0], [450.0, 1710.0], [448.0, 926.6666666666666], [459.0, 1546.3333333333333], [458.0, 279.0], [456.0, 1475.8333333333333], [455.0, 3181.0], [454.0, 1849.0], [453.0, 1773.142857142857], [474.0, 331.0], [471.0, 1782.8333333333335], [470.0, 492.0], [469.0, 548.0], [468.0, 519.5], [495.0, 1020.5], [494.0, 1605.0], [493.0, 2315.0], [492.0, 1617.0], [490.0, 313.0], [487.0, 2208.125], [480.0, 4600.0], [508.0, 2026.0], [506.0, 1832.0], [505.0, 1740.0], [502.0, 2936.5], [499.0, 2632.5], [497.0, 1690.5], [496.0, 3220.0], [542.0, 367.0], [533.0, 1808.0], [531.0, 1851.0], [530.0, 345.0], [527.0, 432.0], [512.0, 269.0], [519.0, 1868.0], [518.0, 3372.0], [526.0, 335.5], [523.0, 1252.8], [522.0, 978.4285714285714], [521.0, 1466.75], [575.0, 277.5], [566.0, 275.0], [574.0, 340.5], [570.0, 2536.0], [569.0, 278.0], [568.0, 291.5], [559.0, 1907.0], [551.0, 2593.0], [550.0, 1565.5], [556.0, 277.0], [555.0, 2611.75], [552.0, 2615.3333333333335], [564.0, 310.0], [562.0, 1815.0], [561.0, 1037.0], [560.0, 1513.8], [588.0, 687.5555555555555], [576.0, 492.74999999999994], [577.0, 1183.2], [578.0, 281.0], [579.0, 945.6551724137931], [592.0, 5458.0], [587.0, 1550.0], [586.0, 291.3333333333333], [585.0, 302.0], [584.0, 305.3333333333333], [582.0, 1659.7272727272727], [581.0, 1416.6666666666665], [580.0, 1060.4166666666665]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[363.68500000000046, 1089.5699999999983]], "isOverall": false, "label": "Category Page-Aggregated", "isController": false}, {"data": [[41.0, 1089.0], [43.0, 1068.5], [42.0, 1075.3333333333333], [45.0, 1072.3599999999997], [75.0, 4787.0625], [78.0, 1040.0], [99.0, 1060.5], [98.0, 1069.6250000000002], [97.0, 1091.4], [103.0, 4224.75], [100.0, 4235.5], [118.0, 1059.0], [157.0, 1067.0], [156.0, 1067.0], [171.0, 1042.5], [191.0, 1050.0], [189.0, 1055.3333333333333], [188.0, 1070.0], [186.0, 1053.5], [196.0, 1046.0], [195.0, 1092.0], [194.0, 1045.0], [193.0, 1049.3333333333333], [206.0, 1048.0], [202.0, 1065.5], [215.0, 1826.5], [214.0, 6747.4], [225.0, 8528.0], [252.0, 1517.0], [262.0, 2599.0], [259.0, 1512.111111111111], [258.0, 1521.0], [257.0, 1553.6666666666667], [285.0, 1504.0], [278.0, 1529.0], [272.0, 1571.0], [298.0, 1509.0], [312.0, 1446.0], [310.0, 1456.0], [309.0, 1460.5], [308.0, 1473.0], [307.0, 1472.5], [306.0, 1503.0], [305.0, 1484.0], [304.0, 1492.6666666666667], [333.0, 1983.0], [328.0, 1810.0], [327.0, 1313.0], [326.0, 2814.0], [324.0, 4432.0], [351.0, 8306.0], [350.0, 2699.0], [348.0, 1959.0], [344.0, 2078.0], [342.0, 1954.25], [340.0, 2038.5], [338.0, 3328.0], [336.0, 1918.0], [363.0, 1619.0], [361.0, 1630.0], [360.0, 1801.0], [356.0, 1988.5], [354.0, 1934.0], [352.0, 1753.0], [371.0, 1654.0], [386.0, 1819.0], [413.0, 1626.5], [410.0, 4238.8], [409.0, 1555.0], [408.0, 1789.0], [407.0, 1787.0], [406.0, 1672.0], [405.0, 1854.125], [431.0, 2125.5], [429.0, 1506.0], [427.0, 1605.0], [425.0, 1625.0], [418.0, 1692.0], [444.0, 2969.0], [443.0, 2757.0], [442.0, 3588.5], [440.0, 4710.5], [439.0, 7838.0], [435.0, 7806.0], [462.0, 3498.75], [463.0, 2613.142857142857], [461.0, 2263.3571428571427], [456.0, 1626.0], [455.0, 2921.0], [454.0, 1636.0], [453.0, 2753.0], [449.0, 2096.0], [448.0, 2390.6666666666665], [479.0, 4605.0], [478.0, 2237.0], [472.0, 2296.0], [471.0, 4430.714285714285], [470.0, 1718.0], [469.0, 7850.0], [468.0, 2446.0], [465.0, 2468.0], [495.0, 1779.0], [488.0, 1634.0], [487.0, 2856.2], [486.0, 2410.0], [508.0, 2389.3333333333335], [507.0, 5122.0], [505.0, 2310.0], [502.0, 2428.6666666666665], [499.0, 2396.6666666666665], [526.0, 555.0], [518.0, 531.0], [521.0, 1901.0], [522.0, 2867.0], [524.0, 886.25], [525.0, 555.5], [527.0, 552.0], [528.0, 553.0], [539.0, 1851.0], [519.0, 3495.4375], [534.0, 2202.1], [532.0, 2020.0], [550.0, 3849.375], [570.0, 2186.0], [574.0, 1813.0], [568.0, 3571.0], [547.0, 1845.0], [546.0, 2279.4], [561.0, 2363.0], [560.0, 2961.0], [559.0, 2619.5], [556.0, 1890.0], [555.0, 3440.0], [552.0, 3411.0], [592.0, 3537.923076923077], [600.0, 529.0], [582.0, 2206.722222222222], [581.0, 2740.9230769230767], [580.0, 1976.0000000000002], [579.0, 1664.7142857142856], [577.0, 1774.5], [596.0, 3918.0], [594.0, 3893.6666666666665], [593.0, 3554.7272727272725], [590.0, 2874.0], [589.0, 2656.25], [588.0, 2678.8909090909087], [587.0, 2642.258064516129], [586.0, 2701.777777777778]], "isOverall": false, "label": "Detail Game Page", "isController": false}, {"data": [[413.38666666666654, 2508.611666666665]], "isOverall": false, "label": "Detail Game Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 600.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 6790.0, "minX": 1.60814556E12, "maxY": 2265570.0, "series": [{"data": [[1.60814556E12, 2265570.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.60814556E12, 6790.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814556E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 946.8350000000003, "minX": 1.60814556E12, "maxY": 8434.031666666659, "series": [{"data": [[1.60814556E12, 8434.031666666659]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60814556E12, 946.8350000000003]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60814556E12, 1089.5699999999983]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60814556E12, 2508.611666666665]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814556E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 748.2600000000001, "minX": 1.60814556E12, "maxY": 7918.904999999998, "series": [{"data": [[1.60814556E12, 7918.904999999998]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60814556E12, 748.2600000000001]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60814556E12, 852.2350000000004]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60814556E12, 1997.6000000000004]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814556E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 132.28166666666672, "minX": 1.60814556E12, "maxY": 3563.875000000004, "series": [{"data": [[1.60814556E12, 3563.875000000004]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60814556E12, 132.28166666666672]], "isOverall": false, "label": "Detail Category Page", "isController": false}, {"data": [[1.60814556E12, 135.69833333333332]], "isOverall": false, "label": "Category Page", "isController": false}, {"data": [[1.60814556E12, 378.18166666666673]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814556E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 263.0, "minX": 1.60814556E12, "maxY": 17016.0, "series": [{"data": [[1.60814556E12, 17016.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.60814556E12, 263.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.60814556E12, 8966.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.60814556E12, 16522.94]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.60814556E12, 11913.9]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814556E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1736.0, "minX": 40.0, "maxY": 1736.0, "series": [{"data": [[40.0, 1736.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 40.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1222.5, "minX": 40.0, "maxY": 1222.5, "series": [{"data": [[40.0, 1222.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 40.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 40.0, "minX": 1.60814556E12, "maxY": 40.0, "series": [{"data": [[1.60814556E12, 40.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814556E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 40.0, "minX": 1.60814556E12, "maxY": 40.0, "series": [{"data": [[1.60814556E12, 40.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60814556E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.60814556E12, "maxY": 10.0, "series": [{"data": [[1.60814556E12, 10.0]], "isOverall": false, "label": "Category Page-success", "isController": false}, {"data": [[1.60814556E12, 10.0]], "isOverall": false, "label": "Detail Category Page-success", "isController": false}, {"data": [[1.60814556E12, 10.0]], "isOverall": false, "label": "Detail Game Page-success", "isController": false}, {"data": [[1.60814556E12, 10.0]], "isOverall": false, "label": "HomePage-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60814556E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
