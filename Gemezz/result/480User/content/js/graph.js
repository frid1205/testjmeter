/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
    $(".portlet-header").css("cursor", "auto");
});

var showControllersOnly = false;
var seriesFilter = "";
var filtersOnlySampleSeries = true;

// Fixes time stamps
function fixTimeStamps(series, offset){
    $.each(series, function(index, item) {
        $.each(item.data, function(index, coord) {
            coord[0] += offset;
        });
    });
}

// Check if the specified jquery object is a graph
function isGraph(object){
    return object.data('plot') !== undefined;
}

/**
 * Export graph to a PNG
 */
function exportToPNG(graphName, target) {
    var plot = $("#"+graphName).data('plot');
    var flotCanvas = plot.getCanvas();
    var image = flotCanvas.toDataURL();
    image = image.replace("image/png", "image/octet-stream");
    
    var downloadAttrSupported = ("download" in document.createElement("a"));
    if(downloadAttrSupported === true) {
        target.download = graphName + ".png";
        target.href = image;
    }
    else {
        document.location.href = image;
    }
    
}

// Override the specified graph options to fit the requirements of an overview
function prepareOverviewOptions(graphOptions){
    var overviewOptions = {
        series: {
            shadowSize: 0,
            lines: {
                lineWidth: 1
            },
            points: {
                // Show points on overview only when linked graph does not show
                // lines
                show: getProperty('series.lines.show', graphOptions) == false,
                radius : 1
            }
        },
        xaxis: {
            ticks: 2,
            axisLabel: null
        },
        yaxis: {
            ticks: 2,
            axisLabel: null
        },
        legend: {
            show: false,
            container: null
        },
        grid: {
            hoverable: false
        },
        tooltip: false
    };
    return $.extend(true, {}, graphOptions, overviewOptions);
}

// Force axes boundaries using graph extra options
function prepareOptions(options, data) {
    options.canvas = true;
    var extraOptions = data.extraOptions;
    if(extraOptions !== undefined){
        var xOffset = options.xaxis.mode === "time" ? 0 : 0;
        var yOffset = options.yaxis.mode === "time" ? 0 : 0;

        if(!isNaN(extraOptions.minX))
        	options.xaxis.min = parseFloat(extraOptions.minX) + xOffset;
        
        if(!isNaN(extraOptions.maxX))
        	options.xaxis.max = parseFloat(extraOptions.maxX) + xOffset;
        
        if(!isNaN(extraOptions.minY))
        	options.yaxis.min = parseFloat(extraOptions.minY) + yOffset;
        
        if(!isNaN(extraOptions.maxY))
        	options.yaxis.max = parseFloat(extraOptions.maxY) + yOffset;
    }
}

// Filter, mark series and sort data
/**
 * @param data
 * @param noMatchColor if defined and true, series.color are not matched with index
 */
function prepareSeries(data, noMatchColor){
    var result = data.result;

    // Keep only series when needed
    if(seriesFilter && (!filtersOnlySampleSeries || result.supportsControllersDiscrimination)){
        // Insensitive case matching
        var regexp = new RegExp(seriesFilter, 'i');
        result.series = $.grep(result.series, function(series, index){
            return regexp.test(series.label);
        });
    }

    // Keep only controllers series when supported and needed
    if(result.supportsControllersDiscrimination && showControllersOnly){
        result.series = $.grep(result.series, function(series, index){
            return series.isController;
        });
    }

    // Sort data and mark series
    $.each(result.series, function(index, series) {
        series.data.sort(compareByXCoordinate);
        if(!(noMatchColor && noMatchColor===true)) {
	        series.color = index;
	    }
    });
}

// Set the zoom on the specified plot object
function zoomPlot(plot, xmin, xmax, ymin, ymax){
    var axes = plot.getAxes();
    // Override axes min and max options
    $.extend(true, axes, {
        xaxis: {
            options : { min: xmin, max: xmax }
        },
        yaxis: {
            options : { min: ymin, max: ymax }
        }
    });

    // Redraw the plot
    plot.setupGrid();
    plot.draw();
}

// Prepares DOM items to add zoom function on the specified graph
function setGraphZoomable(graphSelector, overviewSelector){
    var graph = $(graphSelector);
    var overview = $(overviewSelector);

    // Ignore mouse down event
    graph.bind("mousedown", function() { return false; });
    overview.bind("mousedown", function() { return false; });

    // Zoom on selection
    graph.bind("plotselected", function (event, ranges) {
        // clamp the zooming to prevent infinite zoom
        if (ranges.xaxis.to - ranges.xaxis.from < 0.00001) {
            ranges.xaxis.to = ranges.xaxis.from + 0.00001;
        }
        if (ranges.yaxis.to - ranges.yaxis.from < 0.00001) {
            ranges.yaxis.to = ranges.yaxis.from + 0.00001;
        }

        // Do the zooming
        var plot = graph.data('plot');
        zoomPlot(plot, ranges.xaxis.from, ranges.xaxis.to, ranges.yaxis.from, ranges.yaxis.to);
        plot.clearSelection();

        // Synchronize overview selection
        overview.data('plot').setSelection(ranges, true);
    });

    // Zoom linked graph on overview selection
    overview.bind("plotselected", function (event, ranges) {
        graph.data('plot').setSelection(ranges);
    });

    // Reset linked graph zoom when reseting overview selection
    overview.bind("plotunselected", function () {
        var overviewAxes = overview.data('plot').getAxes();
        zoomPlot(graph.data('plot'), overviewAxes.xaxis.min, overviewAxes.xaxis.max, overviewAxes.yaxis.min, overviewAxes.yaxis.max);
    });
}

var responseTimePercentilesInfos = {
        data: {"result": {"minY": 41.0, "minX": 0.0, "maxY": 1388.0, "series": [{"data": [[0.0, 84.0], [0.1, 84.0], [0.2, 84.0], [0.3, 88.0], [0.4, 88.0], [0.5, 88.0], [0.6, 88.0], [0.7, 88.0], [0.8, 88.0], [0.9, 91.0], [1.0, 91.0], [1.1, 92.0], [1.2, 92.0], [1.3, 92.0], [1.4, 92.0], [1.5, 92.0], [1.6, 92.0], [1.7, 94.0], [1.8, 94.0], [1.9, 94.0], [2.0, 94.0], [2.1, 94.0], [2.2, 94.0], [2.3, 94.0], [2.4, 94.0], [2.5, 94.0], [2.6, 94.0], [2.7, 94.0], [2.8, 94.0], [2.9, 94.0], [3.0, 94.0], [3.1, 94.0], [3.2, 95.0], [3.3, 95.0], [3.4, 95.0], [3.5, 95.0], [3.6, 96.0], [3.7, 96.0], [3.8, 96.0], [3.9, 96.0], [4.0, 96.0], [4.1, 96.0], [4.2, 96.0], [4.3, 96.0], [4.4, 97.0], [4.5, 97.0], [4.6, 97.0], [4.7, 97.0], [4.8, 97.0], [4.9, 97.0], [5.0, 98.0], [5.1, 98.0], [5.2, 98.0], [5.3, 98.0], [5.4, 98.0], [5.5, 98.0], [5.6, 98.0], [5.7, 99.0], [5.8, 99.0], [5.9, 99.0], [6.0, 99.0], [6.1, 100.0], [6.2, 100.0], [6.3, 100.0], [6.4, 100.0], [6.5, 101.0], [6.6, 101.0], [6.7, 101.0], [6.8, 101.0], [6.9, 101.0], [7.0, 101.0], [7.1, 101.0], [7.2, 101.0], [7.3, 102.0], [7.4, 102.0], [7.5, 103.0], [7.6, 103.0], [7.7, 103.0], [7.8, 103.0], [7.9, 103.0], [8.0, 103.0], [8.1, 103.0], [8.2, 104.0], [8.3, 104.0], [8.4, 105.0], [8.5, 105.0], [8.6, 105.0], [8.7, 105.0], [8.8, 105.0], [8.9, 105.0], [9.0, 106.0], [9.1, 106.0], [9.2, 106.0], [9.3, 106.0], [9.4, 107.0], [9.5, 107.0], [9.6, 107.0], [9.7, 107.0], [9.8, 107.0], [9.9, 107.0], [10.0, 109.0], [10.1, 109.0], [10.2, 109.0], [10.3, 109.0], [10.4, 109.0], [10.5, 109.0], [10.6, 109.0], [10.7, 110.0], [10.8, 110.0], [10.9, 110.0], [11.0, 110.0], [11.1, 110.0], [11.2, 110.0], [11.3, 110.0], [11.4, 110.0], [11.5, 111.0], [11.6, 111.0], [11.7, 113.0], [11.8, 113.0], [11.9, 114.0], [12.0, 114.0], [12.1, 114.0], [12.2, 114.0], [12.3, 115.0], [12.4, 115.0], [12.5, 115.0], [12.6, 115.0], [12.7, 115.0], [12.8, 115.0], [12.9, 115.0], [13.0, 116.0], [13.1, 116.0], [13.2, 117.0], [13.3, 117.0], [13.4, 118.0], [13.5, 118.0], [13.6, 118.0], [13.7, 118.0], [13.8, 118.0], [13.9, 118.0], [14.0, 118.0], [14.1, 118.0], [14.2, 119.0], [14.3, 119.0], [14.4, 119.0], [14.5, 119.0], [14.6, 120.0], [14.7, 120.0], [14.8, 120.0], [14.9, 120.0], [15.0, 120.0], [15.1, 120.0], [15.2, 120.0], [15.3, 121.0], [15.4, 121.0], [15.5, 121.0], [15.6, 121.0], [15.7, 123.0], [15.8, 123.0], [15.9, 123.0], [16.0, 123.0], [16.1, 124.0], [16.2, 124.0], [16.3, 124.0], [16.4, 124.0], [16.5, 125.0], [16.6, 125.0], [16.7, 126.0], [16.8, 126.0], [16.9, 126.0], [17.0, 126.0], [17.1, 126.0], [17.2, 126.0], [17.3, 126.0], [17.4, 126.0], [17.5, 127.0], [17.6, 127.0], [17.7, 127.0], [17.8, 127.0], [17.9, 127.0], [18.0, 128.0], [18.1, 128.0], [18.2, 128.0], [18.3, 128.0], [18.4, 128.0], [18.5, 128.0], [18.6, 128.0], [18.7, 128.0], [18.8, 128.0], [18.9, 128.0], [19.0, 129.0], [19.1, 129.0], [19.2, 129.0], [19.3, 129.0], [19.4, 129.0], [19.5, 129.0], [19.6, 130.0], [19.7, 130.0], [19.8, 130.0], [19.9, 130.0], [20.0, 130.0], [20.1, 131.0], [20.2, 131.0], [20.3, 131.0], [20.4, 131.0], [20.5, 132.0], [20.6, 132.0], [20.7, 133.0], [20.8, 133.0], [20.9, 133.0], [21.0, 133.0], [21.1, 133.0], [21.2, 133.0], [21.3, 133.0], [21.4, 133.0], [21.5, 134.0], [21.6, 134.0], [21.7, 134.0], [21.8, 134.0], [21.9, 135.0], [22.0, 135.0], [22.1, 135.0], [22.2, 135.0], [22.3, 135.0], [22.4, 135.0], [22.5, 135.0], [22.6, 136.0], [22.7, 136.0], [22.8, 136.0], [22.9, 136.0], [23.0, 137.0], [23.1, 137.0], [23.2, 137.0], [23.3, 137.0], [23.4, 138.0], [23.5, 138.0], [23.6, 138.0], [23.7, 138.0], [23.8, 139.0], [23.9, 139.0], [24.0, 139.0], [24.1, 139.0], [24.2, 140.0], [24.3, 140.0], [24.4, 140.0], [24.5, 140.0], [24.6, 141.0], [24.7, 141.0], [24.8, 142.0], [24.9, 142.0], [25.0, 142.0], [25.1, 142.0], [25.2, 142.0], [25.3, 143.0], [25.4, 143.0], [25.5, 143.0], [25.6, 143.0], [25.7, 144.0], [25.8, 144.0], [25.9, 144.0], [26.0, 144.0], [26.1, 147.0], [26.2, 147.0], [26.3, 148.0], [26.4, 148.0], [26.5, 149.0], [26.6, 149.0], [26.7, 153.0], [26.8, 153.0], [26.9, 154.0], [27.0, 154.0], [27.1, 157.0], [27.2, 157.0], [27.3, 157.0], [27.4, 157.0], [27.5, 157.0], [27.6, 158.0], [27.7, 158.0], [27.8, 160.0], [27.9, 160.0], [28.0, 161.0], [28.1, 161.0], [28.2, 163.0], [28.3, 163.0], [28.4, 165.0], [28.5, 165.0], [28.6, 166.0], [28.7, 166.0], [28.8, 167.0], [28.9, 167.0], [29.0, 168.0], [29.1, 168.0], [29.2, 168.0], [29.3, 168.0], [29.4, 169.0], [29.5, 169.0], [29.6, 169.0], [29.7, 169.0], [29.8, 170.0], [29.9, 170.0], [30.0, 171.0], [30.1, 171.0], [30.2, 171.0], [30.3, 174.0], [30.4, 174.0], [30.5, 174.0], [30.6, 174.0], [30.7, 175.0], [30.8, 175.0], [30.9, 175.0], [31.0, 175.0], [31.1, 176.0], [31.2, 176.0], [31.3, 176.0], [31.4, 176.0], [31.5, 177.0], [31.6, 177.0], [31.7, 177.0], [31.8, 177.0], [31.9, 177.0], [32.0, 177.0], [32.1, 177.0], [32.2, 177.0], [32.3, 177.0], [32.4, 177.0], [32.5, 178.0], [32.6, 178.0], [32.7, 178.0], [32.8, 179.0], [32.9, 179.0], [33.0, 180.0], [33.1, 180.0], [33.2, 181.0], [33.3, 181.0], [33.4, 181.0], [33.5, 181.0], [33.6, 183.0], [33.7, 183.0], [33.8, 183.0], [33.9, 183.0], [34.0, 183.0], [34.1, 183.0], [34.2, 184.0], [34.3, 184.0], [34.4, 185.0], [34.5, 185.0], [34.6, 187.0], [34.7, 187.0], [34.8, 187.0], [34.9, 187.0], [35.0, 187.0], [35.1, 190.0], [35.2, 190.0], [35.3, 190.0], [35.4, 190.0], [35.5, 190.0], [35.6, 190.0], [35.7, 191.0], [35.8, 191.0], [35.9, 192.0], [36.0, 192.0], [36.1, 192.0], [36.2, 192.0], [36.3, 193.0], [36.4, 193.0], [36.5, 193.0], [36.6, 193.0], [36.7, 194.0], [36.8, 194.0], [36.9, 196.0], [37.0, 196.0], [37.1, 197.0], [37.2, 197.0], [37.3, 198.0], [37.4, 198.0], [37.5, 198.0], [37.6, 199.0], [37.7, 199.0], [37.8, 199.0], [37.9, 199.0], [38.0, 203.0], [38.1, 203.0], [38.2, 204.0], [38.3, 204.0], [38.4, 206.0], [38.5, 206.0], [38.6, 206.0], [38.7, 206.0], [38.8, 207.0], [38.9, 207.0], [39.0, 207.0], [39.1, 207.0], [39.2, 210.0], [39.3, 210.0], [39.4, 210.0], [39.5, 210.0], [39.6, 210.0], [39.7, 210.0], [39.8, 213.0], [39.9, 213.0], [40.0, 213.0], [40.1, 213.0], [40.2, 213.0], [40.3, 214.0], [40.4, 214.0], [40.5, 215.0], [40.6, 215.0], [40.7, 215.0], [40.8, 215.0], [40.9, 216.0], [41.0, 216.0], [41.1, 218.0], [41.2, 218.0], [41.3, 218.0], [41.4, 218.0], [41.5, 218.0], [41.6, 218.0], [41.7, 219.0], [41.8, 219.0], [41.9, 220.0], [42.0, 220.0], [42.1, 220.0], [42.2, 220.0], [42.3, 220.0], [42.4, 220.0], [42.5, 220.0], [42.6, 222.0], [42.7, 222.0], [42.8, 225.0], [42.9, 225.0], [43.0, 228.0], [43.1, 228.0], [43.2, 233.0], [43.3, 233.0], [43.4, 237.0], [43.5, 237.0], [43.6, 238.0], [43.7, 238.0], [43.8, 240.0], [43.9, 240.0], [44.0, 244.0], [44.1, 244.0], [44.2, 247.0], [44.3, 247.0], [44.4, 249.0], [44.5, 249.0], [44.6, 250.0], [44.7, 250.0], [44.8, 251.0], [44.9, 251.0], [45.0, 251.0], [45.1, 258.0], [45.2, 258.0], [45.3, 267.0], [45.4, 267.0], [45.5, 270.0], [45.6, 270.0], [45.7, 272.0], [45.8, 272.0], [45.9, 280.0], [46.0, 280.0], [46.1, 281.0], [46.2, 281.0], [46.3, 282.0], [46.4, 282.0], [46.5, 283.0], [46.6, 283.0], [46.7, 285.0], [46.8, 285.0], [46.9, 286.0], [47.0, 286.0], [47.1, 287.0], [47.2, 287.0], [47.3, 289.0], [47.4, 289.0], [47.5, 289.0], [47.6, 289.0], [47.7, 289.0], [47.8, 290.0], [47.9, 290.0], [48.0, 292.0], [48.1, 292.0], [48.2, 293.0], [48.3, 293.0], [48.4, 293.0], [48.5, 293.0], [48.6, 294.0], [48.7, 294.0], [48.8, 295.0], [48.9, 295.0], [49.0, 296.0], [49.1, 296.0], [49.2, 297.0], [49.3, 297.0], [49.4, 297.0], [49.5, 297.0], [49.6, 298.0], [49.7, 298.0], [49.8, 298.0], [49.9, 298.0], [50.0, 298.0], [50.1, 298.0], [50.2, 298.0], [50.3, 298.0], [50.4, 298.0], [50.5, 300.0], [50.6, 300.0], [50.7, 302.0], [50.8, 302.0], [50.9, 303.0], [51.0, 303.0], [51.1, 303.0], [51.2, 303.0], [51.3, 303.0], [51.4, 303.0], [51.5, 305.0], [51.6, 305.0], [51.7, 308.0], [51.8, 308.0], [51.9, 310.0], [52.0, 310.0], [52.1, 315.0], [52.2, 315.0], [52.3, 320.0], [52.4, 320.0], [52.5, 320.0], [52.6, 324.0], [52.7, 324.0], [52.8, 328.0], [52.9, 328.0], [53.0, 334.0], [53.1, 334.0], [53.2, 335.0], [53.3, 335.0], [53.4, 336.0], [53.5, 336.0], [53.6, 338.0], [53.7, 338.0], [53.8, 338.0], [53.9, 338.0], [54.0, 339.0], [54.1, 339.0], [54.2, 341.0], [54.3, 341.0], [54.4, 350.0], [54.5, 350.0], [54.6, 361.0], [54.7, 361.0], [54.8, 377.0], [54.9, 377.0], [55.0, 377.0], [55.1, 379.0], [55.2, 379.0], [55.3, 380.0], [55.4, 380.0], [55.5, 382.0], [55.6, 382.0], [55.7, 388.0], [55.8, 388.0], [55.9, 413.0], [56.0, 413.0], [56.1, 414.0], [56.2, 414.0], [56.3, 422.0], [56.4, 422.0], [56.5, 427.0], [56.6, 427.0], [56.7, 427.0], [56.8, 427.0], [56.9, 430.0], [57.0, 430.0], [57.1, 430.0], [57.2, 430.0], [57.3, 444.0], [57.4, 444.0], [57.5, 444.0], [57.6, 458.0], [57.7, 458.0], [57.8, 460.0], [57.9, 460.0], [58.0, 472.0], [58.1, 472.0], [58.2, 473.0], [58.3, 473.0], [58.4, 474.0], [58.5, 474.0], [58.6, 489.0], [58.7, 489.0], [58.8, 491.0], [58.9, 491.0], [59.0, 492.0], [59.1, 492.0], [59.2, 492.0], [59.3, 492.0], [59.4, 492.0], [59.5, 492.0], [59.6, 497.0], [59.7, 497.0], [59.8, 498.0], [59.9, 498.0], [60.0, 498.0], [60.1, 499.0], [60.2, 499.0], [60.3, 501.0], [60.4, 501.0], [60.5, 501.0], [60.6, 501.0], [60.7, 501.0], [60.8, 501.0], [60.9, 504.0], [61.0, 504.0], [61.1, 507.0], [61.2, 507.0], [61.3, 507.0], [61.4, 507.0], [61.5, 509.0], [61.6, 509.0], [61.7, 510.0], [61.8, 510.0], [61.9, 512.0], [62.0, 512.0], [62.1, 512.0], [62.2, 512.0], [62.3, 512.0], [62.4, 512.0], [62.5, 512.0], [62.6, 513.0], [62.7, 513.0], [62.8, 513.0], [62.9, 513.0], [63.0, 515.0], [63.1, 515.0], [63.2, 515.0], [63.3, 515.0], [63.4, 516.0], [63.5, 516.0], [63.6, 516.0], [63.7, 516.0], [63.8, 518.0], [63.9, 518.0], [64.0, 521.0], [64.1, 521.0], [64.2, 523.0], [64.3, 523.0], [64.4, 525.0], [64.5, 525.0], [64.6, 526.0], [64.7, 526.0], [64.8, 527.0], [64.9, 527.0], [65.0, 527.0], [65.1, 528.0], [65.2, 528.0], [65.3, 532.0], [65.4, 532.0], [65.5, 532.0], [65.6, 532.0], [65.7, 534.0], [65.8, 534.0], [65.9, 534.0], [66.0, 534.0], [66.1, 535.0], [66.2, 535.0], [66.3, 536.0], [66.4, 536.0], [66.5, 536.0], [66.6, 536.0], [66.7, 539.0], [66.8, 539.0], [66.9, 543.0], [67.0, 543.0], [67.1, 545.0], [67.2, 545.0], [67.3, 546.0], [67.4, 546.0], [67.5, 546.0], [67.6, 550.0], [67.7, 550.0], [67.8, 550.0], [67.9, 550.0], [68.0, 551.0], [68.1, 551.0], [68.2, 553.0], [68.3, 553.0], [68.4, 554.0], [68.5, 554.0], [68.6, 554.0], [68.7, 554.0], [68.8, 554.0], [68.9, 554.0], [69.0, 555.0], [69.1, 555.0], [69.2, 555.0], [69.3, 555.0], [69.4, 556.0], [69.5, 556.0], [69.6, 557.0], [69.7, 557.0], [69.8, 558.0], [69.9, 558.0], [70.0, 558.0], [70.1, 558.0], [70.2, 558.0], [70.3, 558.0], [70.4, 558.0], [70.5, 559.0], [70.6, 559.0], [70.7, 563.0], [70.8, 563.0], [70.9, 565.0], [71.0, 565.0], [71.1, 567.0], [71.2, 567.0], [71.3, 568.0], [71.4, 568.0], [71.5, 569.0], [71.6, 569.0], [71.7, 569.0], [71.8, 569.0], [71.9, 571.0], [72.0, 571.0], [72.1, 572.0], [72.2, 572.0], [72.3, 573.0], [72.4, 573.0], [72.5, 573.0], [72.6, 573.0], [72.7, 573.0], [72.8, 573.0], [72.9, 573.0], [73.0, 573.0], [73.1, 573.0], [73.2, 574.0], [73.3, 574.0], [73.4, 574.0], [73.5, 574.0], [73.6, 575.0], [73.7, 575.0], [73.8, 576.0], [73.9, 576.0], [74.0, 577.0], [74.1, 577.0], [74.2, 579.0], [74.3, 579.0], [74.4, 583.0], [74.5, 583.0], [74.6, 584.0], [74.7, 584.0], [74.8, 587.0], [74.9, 587.0], [75.0, 587.0], [75.1, 588.0], [75.2, 588.0], [75.3, 593.0], [75.4, 593.0], [75.5, 594.0], [75.6, 594.0], [75.7, 608.0], [75.8, 608.0], [75.9, 618.0], [76.0, 618.0], [76.1, 619.0], [76.2, 619.0], [76.3, 619.0], [76.4, 619.0], [76.5, 619.0], [76.6, 619.0], [76.7, 622.0], [76.8, 622.0], [76.9, 631.0], [77.0, 631.0], [77.1, 640.0], [77.2, 640.0], [77.3, 646.0], [77.4, 646.0], [77.5, 648.0], [77.6, 648.0], [77.7, 648.0], [77.8, 651.0], [77.9, 651.0], [78.0, 653.0], [78.1, 653.0], [78.2, 657.0], [78.3, 657.0], [78.4, 660.0], [78.5, 660.0], [78.6, 662.0], [78.7, 662.0], [78.8, 666.0], [78.9, 666.0], [79.0, 667.0], [79.1, 667.0], [79.2, 669.0], [79.3, 669.0], [79.4, 669.0], [79.5, 669.0], [79.6, 670.0], [79.7, 670.0], [79.8, 677.0], [79.9, 677.0], [80.0, 678.0], [80.1, 678.0], [80.2, 678.0], [80.3, 680.0], [80.4, 680.0], [80.5, 680.0], [80.6, 680.0], [80.7, 694.0], [80.8, 694.0], [80.9, 702.0], [81.0, 702.0], [81.1, 708.0], [81.2, 708.0], [81.3, 708.0], [81.4, 708.0], [81.5, 714.0], [81.6, 714.0], [81.7, 715.0], [81.8, 715.0], [81.9, 717.0], [82.0, 717.0], [82.1, 717.0], [82.2, 717.0], [82.3, 718.0], [82.4, 718.0], [82.5, 720.0], [82.6, 720.0], [82.7, 720.0], [82.8, 723.0], [82.9, 723.0], [83.0, 724.0], [83.1, 724.0], [83.2, 725.0], [83.3, 725.0], [83.4, 728.0], [83.5, 728.0], [83.6, 729.0], [83.7, 729.0], [83.8, 730.0], [83.9, 730.0], [84.0, 731.0], [84.1, 731.0], [84.2, 733.0], [84.3, 733.0], [84.4, 734.0], [84.5, 734.0], [84.6, 737.0], [84.7, 737.0], [84.8, 738.0], [84.9, 738.0], [85.0, 742.0], [85.1, 742.0], [85.2, 742.0], [85.3, 744.0], [85.4, 744.0], [85.5, 746.0], [85.6, 746.0], [85.7, 748.0], [85.8, 748.0], [85.9, 749.0], [86.0, 749.0], [86.1, 750.0], [86.2, 750.0], [86.3, 750.0], [86.4, 750.0], [86.5, 751.0], [86.6, 751.0], [86.7, 765.0], [86.8, 765.0], [86.9, 797.0], [87.0, 797.0], [87.1, 802.0], [87.2, 802.0], [87.3, 807.0], [87.4, 807.0], [87.5, 813.0], [87.6, 813.0], [87.7, 813.0], [87.8, 813.0], [87.9, 813.0], [88.0, 814.0], [88.1, 814.0], [88.2, 819.0], [88.3, 819.0], [88.4, 820.0], [88.5, 820.0], [88.6, 821.0], [88.7, 821.0], [88.8, 822.0], [88.9, 822.0], [89.0, 827.0], [89.1, 827.0], [89.2, 829.0], [89.3, 829.0], [89.4, 881.0], [89.5, 881.0], [89.6, 883.0], [89.7, 883.0], [89.8, 921.0], [89.9, 921.0], [90.0, 963.0], [90.1, 963.0], [90.2, 963.0], [90.3, 976.0], [90.4, 976.0], [90.5, 981.0], [90.6, 981.0], [90.7, 987.0], [90.8, 987.0], [90.9, 989.0], [91.0, 989.0], [91.1, 989.0], [91.2, 989.0], [91.3, 991.0], [91.4, 991.0], [91.5, 994.0], [91.6, 994.0], [91.7, 997.0], [91.8, 997.0], [91.9, 997.0], [92.0, 997.0], [92.1, 1002.0], [92.2, 1002.0], [92.3, 1014.0], [92.4, 1014.0], [92.5, 1023.0], [92.6, 1023.0], [92.7, 1023.0], [92.8, 1151.0], [92.9, 1151.0], [93.0, 1154.0], [93.1, 1154.0], [93.2, 1155.0], [93.3, 1155.0], [93.4, 1161.0], [93.5, 1161.0], [93.6, 1161.0], [93.7, 1161.0], [93.8, 1162.0], [93.9, 1162.0], [94.0, 1163.0], [94.1, 1163.0], [94.2, 1166.0], [94.3, 1166.0], [94.4, 1171.0], [94.5, 1171.0], [94.6, 1171.0], [94.7, 1171.0], [94.8, 1174.0], [94.9, 1174.0], [95.0, 1176.0], [95.1, 1176.0], [95.2, 1176.0], [95.3, 1178.0], [95.4, 1178.0], [95.5, 1183.0], [95.6, 1183.0], [95.7, 1184.0], [95.8, 1184.0], [95.9, 1184.0], [96.0, 1184.0], [96.1, 1184.0], [96.2, 1184.0], [96.3, 1184.0], [96.4, 1184.0], [96.5, 1187.0], [96.6, 1187.0], [96.7, 1188.0], [96.8, 1188.0], [96.9, 1188.0], [97.0, 1188.0], [97.1, 1192.0], [97.2, 1192.0], [97.3, 1192.0], [97.4, 1192.0], [97.5, 1194.0], [97.6, 1194.0], [97.7, 1194.0], [97.8, 1195.0], [97.9, 1195.0], [98.0, 1199.0], [98.1, 1199.0], [98.2, 1200.0], [98.3, 1200.0], [98.4, 1211.0], [98.5, 1211.0], [98.6, 1211.0], [98.7, 1211.0], [98.8, 1213.0], [98.9, 1213.0], [99.0, 1214.0], [99.1, 1214.0], [99.2, 1216.0], [99.3, 1216.0], [99.4, 1300.0], [99.5, 1300.0], [99.6, 1320.0], [99.7, 1320.0], [99.8, 1342.0], [99.9, 1342.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 41.0], [0.1, 41.0], [0.2, 41.0], [0.3, 42.0], [0.4, 42.0], [0.5, 43.0], [0.6, 43.0], [0.7, 43.0], [0.8, 43.0], [0.9, 44.0], [1.0, 44.0], [1.1, 44.0], [1.2, 44.0], [1.3, 45.0], [1.4, 45.0], [1.5, 45.0], [1.6, 45.0], [1.7, 45.0], [1.8, 45.0], [1.9, 45.0], [2.0, 45.0], [2.1, 45.0], [2.2, 45.0], [2.3, 46.0], [2.4, 46.0], [2.5, 46.0], [2.6, 46.0], [2.7, 46.0], [2.8, 46.0], [2.9, 46.0], [3.0, 46.0], [3.1, 46.0], [3.2, 46.0], [3.3, 46.0], [3.4, 46.0], [3.5, 46.0], [3.6, 46.0], [3.7, 46.0], [3.8, 46.0], [3.9, 46.0], [4.0, 46.0], [4.1, 46.0], [4.2, 46.0], [4.3, 46.0], [4.4, 46.0], [4.5, 46.0], [4.6, 47.0], [4.7, 47.0], [4.8, 47.0], [4.9, 47.0], [5.0, 47.0], [5.1, 47.0], [5.2, 47.0], [5.3, 47.0], [5.4, 47.0], [5.5, 48.0], [5.6, 48.0], [5.7, 48.0], [5.8, 48.0], [5.9, 48.0], [6.0, 48.0], [6.1, 48.0], [6.2, 48.0], [6.3, 48.0], [6.4, 48.0], [6.5, 48.0], [6.6, 48.0], [6.7, 48.0], [6.8, 48.0], [6.9, 48.0], [7.0, 48.0], [7.1, 48.0], [7.2, 48.0], [7.3, 48.0], [7.4, 48.0], [7.5, 48.0], [7.6, 48.0], [7.7, 48.0], [7.8, 48.0], [7.9, 48.0], [8.0, 49.0], [8.1, 49.0], [8.2, 49.0], [8.3, 49.0], [8.4, 49.0], [8.5, 49.0], [8.6, 49.0], [8.7, 49.0], [8.8, 49.0], [8.9, 49.0], [9.0, 49.0], [9.1, 49.0], [9.2, 49.0], [9.3, 49.0], [9.4, 49.0], [9.5, 49.0], [9.6, 49.0], [9.7, 49.0], [9.8, 49.0], [9.9, 49.0], [10.0, 49.0], [10.1, 49.0], [10.2, 49.0], [10.3, 49.0], [10.4, 49.0], [10.5, 49.0], [10.6, 49.0], [10.7, 49.0], [10.8, 49.0], [10.9, 49.0], [11.0, 49.0], [11.1, 49.0], [11.2, 49.0], [11.3, 49.0], [11.4, 49.0], [11.5, 49.0], [11.6, 49.0], [11.7, 49.0], [11.8, 49.0], [11.9, 49.0], [12.0, 49.0], [12.1, 49.0], [12.2, 49.0], [12.3, 49.0], [12.4, 49.0], [12.5, 49.0], [12.6, 49.0], [12.7, 49.0], [12.8, 50.0], [12.9, 50.0], [13.0, 50.0], [13.1, 50.0], [13.2, 50.0], [13.3, 50.0], [13.4, 50.0], [13.5, 50.0], [13.6, 50.0], [13.7, 50.0], [13.8, 50.0], [13.9, 50.0], [14.0, 50.0], [14.1, 50.0], [14.2, 50.0], [14.3, 50.0], [14.4, 50.0], [14.5, 50.0], [14.6, 50.0], [14.7, 50.0], [14.8, 50.0], [14.9, 50.0], [15.0, 50.0], [15.1, 50.0], [15.2, 50.0], [15.3, 51.0], [15.4, 51.0], [15.5, 51.0], [15.6, 51.0], [15.7, 51.0], [15.8, 51.0], [15.9, 51.0], [16.0, 51.0], [16.1, 51.0], [16.2, 51.0], [16.3, 51.0], [16.4, 51.0], [16.5, 51.0], [16.6, 51.0], [16.7, 51.0], [16.8, 51.0], [16.9, 51.0], [17.0, 51.0], [17.1, 51.0], [17.2, 51.0], [17.3, 51.0], [17.4, 51.0], [17.5, 52.0], [17.6, 52.0], [17.7, 52.0], [17.8, 52.0], [17.9, 52.0], [18.0, 52.0], [18.1, 52.0], [18.2, 52.0], [18.3, 52.0], [18.4, 52.0], [18.5, 52.0], [18.6, 52.0], [18.7, 52.0], [18.8, 52.0], [18.9, 52.0], [19.0, 52.0], [19.1, 52.0], [19.2, 52.0], [19.3, 52.0], [19.4, 53.0], [19.5, 53.0], [19.6, 53.0], [19.7, 53.0], [19.8, 53.0], [19.9, 53.0], [20.0, 53.0], [20.1, 53.0], [20.2, 53.0], [20.3, 53.0], [20.4, 53.0], [20.5, 53.0], [20.6, 53.0], [20.7, 54.0], [20.8, 54.0], [20.9, 54.0], [21.0, 54.0], [21.1, 54.0], [21.2, 54.0], [21.3, 54.0], [21.4, 54.0], [21.5, 54.0], [21.6, 54.0], [21.7, 54.0], [21.8, 54.0], [21.9, 54.0], [22.0, 54.0], [22.1, 54.0], [22.2, 54.0], [22.3, 54.0], [22.4, 54.0], [22.5, 55.0], [22.6, 55.0], [22.7, 55.0], [22.8, 55.0], [22.9, 55.0], [23.0, 55.0], [23.1, 55.0], [23.2, 55.0], [23.3, 55.0], [23.4, 55.0], [23.5, 55.0], [23.6, 55.0], [23.7, 55.0], [23.8, 55.0], [23.9, 55.0], [24.0, 55.0], [24.1, 55.0], [24.2, 56.0], [24.3, 56.0], [24.4, 56.0], [24.5, 56.0], [24.6, 56.0], [24.7, 56.0], [24.8, 56.0], [24.9, 56.0], [25.0, 56.0], [25.1, 56.0], [25.2, 56.0], [25.3, 56.0], [25.4, 56.0], [25.5, 56.0], [25.6, 56.0], [25.7, 56.0], [25.8, 56.0], [25.9, 56.0], [26.0, 56.0], [26.1, 57.0], [26.2, 57.0], [26.3, 57.0], [26.4, 57.0], [26.5, 57.0], [26.6, 57.0], [26.7, 57.0], [26.8, 57.0], [26.9, 58.0], [27.0, 58.0], [27.1, 58.0], [27.2, 58.0], [27.3, 58.0], [27.4, 58.0], [27.5, 59.0], [27.6, 59.0], [27.7, 59.0], [27.8, 59.0], [27.9, 59.0], [28.0, 59.0], [28.1, 59.0], [28.2, 60.0], [28.3, 60.0], [28.4, 60.0], [28.5, 60.0], [28.6, 60.0], [28.7, 60.0], [28.8, 60.0], [28.9, 60.0], [29.0, 60.0], [29.1, 60.0], [29.2, 61.0], [29.3, 61.0], [29.4, 61.0], [29.5, 61.0], [29.6, 61.0], [29.7, 61.0], [29.8, 61.0], [29.9, 61.0], [30.0, 61.0], [30.1, 61.0], [30.2, 61.0], [30.3, 62.0], [30.4, 62.0], [30.5, 62.0], [30.6, 62.0], [30.7, 62.0], [30.8, 62.0], [30.9, 62.0], [31.0, 62.0], [31.1, 62.0], [31.2, 62.0], [31.3, 62.0], [31.4, 62.0], [31.5, 62.0], [31.6, 62.0], [31.7, 63.0], [31.8, 63.0], [31.9, 63.0], [32.0, 63.0], [32.1, 64.0], [32.2, 64.0], [32.3, 65.0], [32.4, 65.0], [32.5, 65.0], [32.6, 65.0], [32.7, 65.0], [32.8, 65.0], [32.9, 65.0], [33.0, 65.0], [33.1, 65.0], [33.2, 66.0], [33.3, 66.0], [33.4, 68.0], [33.5, 68.0], [33.6, 69.0], [33.7, 69.0], [33.8, 70.0], [33.9, 70.0], [34.0, 70.0], [34.1, 70.0], [34.2, 70.0], [34.3, 70.0], [34.4, 70.0], [34.5, 70.0], [34.6, 70.0], [34.7, 70.0], [34.8, 71.0], [34.9, 71.0], [35.0, 71.0], [35.1, 71.0], [35.2, 71.0], [35.3, 71.0], [35.4, 71.0], [35.5, 71.0], [35.6, 71.0], [35.7, 73.0], [35.8, 73.0], [35.9, 73.0], [36.0, 73.0], [36.1, 73.0], [36.2, 73.0], [36.3, 74.0], [36.4, 74.0], [36.5, 74.0], [36.6, 74.0], [36.7, 75.0], [36.8, 75.0], [36.9, 76.0], [37.0, 76.0], [37.1, 76.0], [37.2, 76.0], [37.3, 76.0], [37.4, 76.0], [37.5, 76.0], [37.6, 77.0], [37.7, 77.0], [37.8, 77.0], [37.9, 77.0], [38.0, 77.0], [38.1, 77.0], [38.2, 78.0], [38.3, 78.0], [38.4, 79.0], [38.5, 79.0], [38.6, 79.0], [38.7, 79.0], [38.8, 79.0], [38.9, 79.0], [39.0, 80.0], [39.1, 80.0], [39.2, 80.0], [39.3, 80.0], [39.4, 80.0], [39.5, 80.0], [39.6, 80.0], [39.7, 80.0], [39.8, 81.0], [39.9, 81.0], [40.0, 81.0], [40.1, 81.0], [40.2, 81.0], [40.3, 82.0], [40.4, 82.0], [40.5, 82.0], [40.6, 82.0], [40.7, 82.0], [40.8, 82.0], [40.9, 82.0], [41.0, 82.0], [41.1, 83.0], [41.2, 83.0], [41.3, 83.0], [41.4, 83.0], [41.5, 84.0], [41.6, 84.0], [41.7, 84.0], [41.8, 84.0], [41.9, 84.0], [42.0, 84.0], [42.1, 84.0], [42.2, 84.0], [42.3, 85.0], [42.4, 85.0], [42.5, 85.0], [42.6, 86.0], [42.7, 86.0], [42.8, 87.0], [42.9, 87.0], [43.0, 88.0], [43.1, 88.0], [43.2, 88.0], [43.3, 88.0], [43.4, 88.0], [43.5, 88.0], [43.6, 89.0], [43.7, 89.0], [43.8, 90.0], [43.9, 90.0], [44.0, 90.0], [44.1, 90.0], [44.2, 92.0], [44.3, 92.0], [44.4, 94.0], [44.5, 94.0], [44.6, 95.0], [44.7, 95.0], [44.8, 96.0], [44.9, 96.0], [45.0, 96.0], [45.1, 96.0], [45.2, 96.0], [45.3, 99.0], [45.4, 99.0], [45.5, 102.0], [45.6, 102.0], [45.7, 102.0], [45.8, 102.0], [45.9, 102.0], [46.0, 102.0], [46.1, 103.0], [46.2, 103.0], [46.3, 103.0], [46.4, 103.0], [46.5, 103.0], [46.6, 103.0], [46.7, 104.0], [46.8, 104.0], [46.9, 104.0], [47.0, 104.0], [47.1, 104.0], [47.2, 104.0], [47.3, 104.0], [47.4, 104.0], [47.5, 104.0], [47.6, 105.0], [47.7, 105.0], [47.8, 105.0], [47.9, 105.0], [48.0, 106.0], [48.1, 106.0], [48.2, 107.0], [48.3, 107.0], [48.4, 108.0], [48.5, 108.0], [48.6, 108.0], [48.7, 108.0], [48.8, 108.0], [48.9, 108.0], [49.0, 108.0], [49.1, 108.0], [49.2, 108.0], [49.3, 108.0], [49.4, 108.0], [49.5, 108.0], [49.6, 108.0], [49.7, 108.0], [49.8, 109.0], [49.9, 109.0], [50.0, 109.0], [50.1, 109.0], [50.2, 109.0], [50.3, 109.0], [50.4, 109.0], [50.5, 110.0], [50.6, 110.0], [50.7, 110.0], [50.8, 110.0], [50.9, 110.0], [51.0, 110.0], [51.1, 111.0], [51.2, 111.0], [51.3, 111.0], [51.4, 111.0], [51.5, 111.0], [51.6, 111.0], [51.7, 112.0], [51.8, 112.0], [51.9, 112.0], [52.0, 112.0], [52.1, 113.0], [52.2, 113.0], [52.3, 113.0], [52.4, 113.0], [52.5, 113.0], [52.6, 114.0], [52.7, 114.0], [52.8, 114.0], [52.9, 114.0], [53.0, 114.0], [53.1, 114.0], [53.2, 114.0], [53.3, 114.0], [53.4, 114.0], [53.5, 114.0], [53.6, 114.0], [53.7, 114.0], [53.8, 115.0], [53.9, 115.0], [54.0, 115.0], [54.1, 115.0], [54.2, 115.0], [54.3, 115.0], [54.4, 116.0], [54.5, 116.0], [54.6, 116.0], [54.7, 116.0], [54.8, 116.0], [54.9, 116.0], [55.0, 116.0], [55.1, 116.0], [55.2, 116.0], [55.3, 116.0], [55.4, 116.0], [55.5, 117.0], [55.6, 117.0], [55.7, 117.0], [55.8, 117.0], [55.9, 117.0], [56.0, 117.0], [56.1, 117.0], [56.2, 117.0], [56.3, 117.0], [56.4, 117.0], [56.5, 117.0], [56.6, 117.0], [56.7, 118.0], [56.8, 118.0], [56.9, 118.0], [57.0, 118.0], [57.1, 119.0], [57.2, 119.0], [57.3, 119.0], [57.4, 119.0], [57.5, 119.0], [57.6, 119.0], [57.7, 119.0], [57.8, 119.0], [57.9, 119.0], [58.0, 119.0], [58.1, 119.0], [58.2, 120.0], [58.3, 120.0], [58.4, 120.0], [58.5, 120.0], [58.6, 120.0], [58.7, 120.0], [58.8, 120.0], [58.9, 120.0], [59.0, 120.0], [59.1, 120.0], [59.2, 120.0], [59.3, 120.0], [59.4, 120.0], [59.5, 120.0], [59.6, 121.0], [59.7, 121.0], [59.8, 121.0], [59.9, 121.0], [60.0, 121.0], [60.1, 121.0], [60.2, 121.0], [60.3, 121.0], [60.4, 121.0], [60.5, 122.0], [60.6, 122.0], [60.7, 122.0], [60.8, 122.0], [60.9, 122.0], [61.0, 122.0], [61.1, 122.0], [61.2, 122.0], [61.3, 122.0], [61.4, 122.0], [61.5, 122.0], [61.6, 122.0], [61.7, 122.0], [61.8, 122.0], [61.9, 122.0], [62.0, 122.0], [62.1, 123.0], [62.2, 123.0], [62.3, 123.0], [62.4, 123.0], [62.5, 123.0], [62.6, 124.0], [62.7, 124.0], [62.8, 124.0], [62.9, 124.0], [63.0, 124.0], [63.1, 124.0], [63.2, 125.0], [63.3, 125.0], [63.4, 125.0], [63.5, 125.0], [63.6, 127.0], [63.7, 127.0], [63.8, 127.0], [63.9, 127.0], [64.0, 127.0], [64.1, 127.0], [64.2, 128.0], [64.3, 128.0], [64.4, 129.0], [64.5, 129.0], [64.6, 129.0], [64.7, 129.0], [64.8, 129.0], [64.9, 129.0], [65.0, 129.0], [65.1, 131.0], [65.2, 131.0], [65.3, 132.0], [65.4, 132.0], [65.5, 132.0], [65.6, 132.0], [65.7, 132.0], [65.8, 132.0], [65.9, 132.0], [66.0, 132.0], [66.1, 134.0], [66.2, 134.0], [66.3, 135.0], [66.4, 135.0], [66.5, 135.0], [66.6, 135.0], [66.7, 135.0], [66.8, 135.0], [66.9, 135.0], [67.0, 135.0], [67.1, 137.0], [67.2, 137.0], [67.3, 137.0], [67.4, 137.0], [67.5, 138.0], [67.6, 138.0], [67.7, 138.0], [67.8, 138.0], [67.9, 138.0], [68.0, 141.0], [68.1, 141.0], [68.2, 141.0], [68.3, 141.0], [68.4, 144.0], [68.5, 144.0], [68.6, 145.0], [68.7, 145.0], [68.8, 145.0], [68.9, 145.0], [69.0, 148.0], [69.1, 148.0], [69.2, 148.0], [69.3, 148.0], [69.4, 149.0], [69.5, 149.0], [69.6, 150.0], [69.7, 150.0], [69.8, 150.0], [69.9, 150.0], [70.0, 150.0], [70.1, 150.0], [70.2, 150.0], [70.3, 150.0], [70.4, 150.0], [70.5, 150.0], [70.6, 150.0], [70.7, 150.0], [70.8, 150.0], [70.9, 151.0], [71.0, 151.0], [71.1, 151.0], [71.2, 151.0], [71.3, 152.0], [71.4, 152.0], [71.5, 152.0], [71.6, 152.0], [71.7, 152.0], [71.8, 152.0], [71.9, 152.0], [72.0, 152.0], [72.1, 153.0], [72.2, 153.0], [72.3, 153.0], [72.4, 153.0], [72.5, 153.0], [72.6, 154.0], [72.7, 154.0], [72.8, 154.0], [72.9, 154.0], [73.0, 155.0], [73.1, 155.0], [73.2, 155.0], [73.3, 155.0], [73.4, 155.0], [73.5, 155.0], [73.6, 156.0], [73.7, 156.0], [73.8, 156.0], [73.9, 156.0], [74.0, 156.0], [74.1, 156.0], [74.2, 156.0], [74.3, 156.0], [74.4, 157.0], [74.5, 157.0], [74.6, 157.0], [74.7, 157.0], [74.8, 157.0], [74.9, 157.0], [75.0, 157.0], [75.1, 158.0], [75.2, 158.0], [75.3, 159.0], [75.4, 159.0], [75.5, 161.0], [75.6, 161.0], [75.7, 161.0], [75.8, 161.0], [75.9, 162.0], [76.0, 162.0], [76.1, 163.0], [76.2, 163.0], [76.3, 163.0], [76.4, 163.0], [76.5, 164.0], [76.6, 164.0], [76.7, 165.0], [76.8, 165.0], [76.9, 165.0], [77.0, 165.0], [77.1, 165.0], [77.2, 165.0], [77.3, 168.0], [77.4, 168.0], [77.5, 168.0], [77.6, 168.0], [77.7, 168.0], [77.8, 169.0], [77.9, 169.0], [78.0, 171.0], [78.1, 171.0], [78.2, 171.0], [78.3, 171.0], [78.4, 171.0], [78.5, 171.0], [78.6, 175.0], [78.7, 175.0], [78.8, 175.0], [78.9, 175.0], [79.0, 175.0], [79.1, 175.0], [79.2, 176.0], [79.3, 176.0], [79.4, 178.0], [79.5, 178.0], [79.6, 180.0], [79.7, 180.0], [79.8, 180.0], [79.9, 180.0], [80.0, 181.0], [80.1, 181.0], [80.2, 181.0], [80.3, 182.0], [80.4, 182.0], [80.5, 182.0], [80.6, 182.0], [80.7, 183.0], [80.8, 183.0], [80.9, 184.0], [81.0, 184.0], [81.1, 184.0], [81.2, 184.0], [81.3, 185.0], [81.4, 185.0], [81.5, 185.0], [81.6, 185.0], [81.7, 186.0], [81.8, 186.0], [81.9, 188.0], [82.0, 188.0], [82.1, 189.0], [82.2, 189.0], [82.3, 190.0], [82.4, 190.0], [82.5, 190.0], [82.6, 190.0], [82.7, 190.0], [82.8, 190.0], [82.9, 190.0], [83.0, 190.0], [83.1, 190.0], [83.2, 191.0], [83.3, 191.0], [83.4, 192.0], [83.5, 192.0], [83.6, 192.0], [83.7, 192.0], [83.8, 195.0], [83.9, 195.0], [84.0, 196.0], [84.1, 196.0], [84.2, 198.0], [84.3, 198.0], [84.4, 203.0], [84.5, 203.0], [84.6, 214.0], [84.7, 214.0], [84.8, 217.0], [84.9, 217.0], [85.0, 218.0], [85.1, 218.0], [85.2, 218.0], [85.3, 219.0], [85.4, 219.0], [85.5, 219.0], [85.6, 219.0], [85.7, 220.0], [85.8, 220.0], [85.9, 221.0], [86.0, 221.0], [86.1, 224.0], [86.2, 224.0], [86.3, 225.0], [86.4, 225.0], [86.5, 225.0], [86.6, 225.0], [86.7, 229.0], [86.8, 229.0], [86.9, 232.0], [87.0, 232.0], [87.1, 234.0], [87.2, 234.0], [87.3, 234.0], [87.4, 234.0], [87.5, 238.0], [87.6, 238.0], [87.7, 238.0], [87.8, 240.0], [87.9, 240.0], [88.0, 240.0], [88.1, 240.0], [88.2, 245.0], [88.3, 245.0], [88.4, 245.0], [88.5, 245.0], [88.6, 246.0], [88.7, 246.0], [88.8, 249.0], [88.9, 249.0], [89.0, 251.0], [89.1, 251.0], [89.2, 252.0], [89.3, 252.0], [89.4, 252.0], [89.5, 252.0], [89.6, 253.0], [89.7, 253.0], [89.8, 258.0], [89.9, 258.0], [90.0, 261.0], [90.1, 261.0], [90.2, 261.0], [90.3, 265.0], [90.4, 265.0], [90.5, 265.0], [90.6, 265.0], [90.7, 267.0], [90.8, 267.0], [90.9, 272.0], [91.0, 272.0], [91.1, 275.0], [91.2, 275.0], [91.3, 275.0], [91.4, 275.0], [91.5, 278.0], [91.6, 278.0], [91.7, 280.0], [91.8, 280.0], [91.9, 281.0], [92.0, 281.0], [92.1, 281.0], [92.2, 281.0], [92.3, 295.0], [92.4, 295.0], [92.5, 299.0], [92.6, 299.0], [92.7, 299.0], [92.8, 305.0], [92.9, 305.0], [93.0, 308.0], [93.1, 308.0], [93.2, 308.0], [93.3, 308.0], [93.4, 309.0], [93.5, 309.0], [93.6, 309.0], [93.7, 309.0], [93.8, 310.0], [93.9, 310.0], [94.0, 312.0], [94.1, 312.0], [94.2, 316.0], [94.3, 316.0], [94.4, 317.0], [94.5, 317.0], [94.6, 319.0], [94.7, 319.0], [94.8, 321.0], [94.9, 321.0], [95.0, 322.0], [95.1, 322.0], [95.2, 322.0], [95.3, 341.0], [95.4, 341.0], [95.5, 351.0], [95.6, 351.0], [95.7, 353.0], [95.8, 353.0], [95.9, 355.0], [96.0, 355.0], [96.1, 356.0], [96.2, 356.0], [96.3, 358.0], [96.4, 358.0], [96.5, 371.0], [96.6, 371.0], [96.7, 452.0], [96.8, 452.0], [96.9, 474.0], [97.0, 474.0], [97.1, 476.0], [97.2, 476.0], [97.3, 479.0], [97.4, 479.0], [97.5, 480.0], [97.6, 480.0], [97.7, 480.0], [97.8, 481.0], [97.9, 481.0], [98.0, 484.0], [98.1, 484.0], [98.2, 565.0], [98.3, 565.0], [98.4, 1072.0], [98.5, 1072.0], [98.6, 1074.0], [98.7, 1074.0], [98.8, 1084.0], [98.9, 1084.0], [99.0, 1092.0], [99.1, 1092.0], [99.2, 1098.0], [99.3, 1098.0], [99.4, 1099.0], [99.5, 1099.0], [99.6, 1138.0], [99.7, 1138.0], [99.8, 1259.0], [99.9, 1259.0]], "isOverall": false, "label": "WinnersList", "isController": false}, {"data": [[0.0, 41.0], [0.1, 41.0], [0.2, 41.0], [0.3, 42.0], [0.4, 42.0], [0.5, 42.0], [0.6, 42.0], [0.7, 42.0], [0.8, 42.0], [0.9, 43.0], [1.0, 43.0], [1.1, 44.0], [1.2, 44.0], [1.3, 45.0], [1.4, 45.0], [1.5, 45.0], [1.6, 45.0], [1.7, 45.0], [1.8, 45.0], [1.9, 45.0], [2.0, 45.0], [2.1, 45.0], [2.2, 45.0], [2.3, 45.0], [2.4, 45.0], [2.5, 45.0], [2.6, 45.0], [2.7, 45.0], [2.8, 45.0], [2.9, 45.0], [3.0, 45.0], [3.1, 45.0], [3.2, 45.0], [3.3, 45.0], [3.4, 46.0], [3.5, 46.0], [3.6, 46.0], [3.7, 46.0], [3.8, 46.0], [3.9, 46.0], [4.0, 46.0], [4.1, 46.0], [4.2, 46.0], [4.3, 46.0], [4.4, 46.0], [4.5, 46.0], [4.6, 46.0], [4.7, 46.0], [4.8, 46.0], [4.9, 46.0], [5.0, 46.0], [5.1, 46.0], [5.2, 46.0], [5.3, 46.0], [5.4, 46.0], [5.5, 47.0], [5.6, 47.0], [5.7, 47.0], [5.8, 47.0], [5.9, 47.0], [6.0, 47.0], [6.1, 47.0], [6.2, 47.0], [6.3, 47.0], [6.4, 47.0], [6.5, 47.0], [6.6, 47.0], [6.7, 47.0], [6.8, 47.0], [6.9, 47.0], [7.0, 47.0], [7.1, 47.0], [7.2, 47.0], [7.3, 47.0], [7.4, 47.0], [7.5, 47.0], [7.6, 47.0], [7.7, 47.0], [7.8, 47.0], [7.9, 47.0], [8.0, 48.0], [8.1, 48.0], [8.2, 48.0], [8.3, 48.0], [8.4, 48.0], [8.5, 48.0], [8.6, 48.0], [8.7, 48.0], [8.8, 48.0], [8.9, 48.0], [9.0, 48.0], [9.1, 48.0], [9.2, 48.0], [9.3, 48.0], [9.4, 48.0], [9.5, 48.0], [9.6, 48.0], [9.7, 48.0], [9.8, 48.0], [9.9, 48.0], [10.0, 49.0], [10.1, 49.0], [10.2, 49.0], [10.3, 49.0], [10.4, 49.0], [10.5, 49.0], [10.6, 49.0], [10.7, 49.0], [10.8, 49.0], [10.9, 49.0], [11.0, 49.0], [11.1, 49.0], [11.2, 49.0], [11.3, 49.0], [11.4, 49.0], [11.5, 49.0], [11.6, 49.0], [11.7, 49.0], [11.8, 49.0], [11.9, 49.0], [12.0, 49.0], [12.1, 49.0], [12.2, 49.0], [12.3, 49.0], [12.4, 49.0], [12.5, 49.0], [12.6, 49.0], [12.7, 49.0], [12.8, 49.0], [12.9, 49.0], [13.0, 49.0], [13.1, 49.0], [13.2, 50.0], [13.3, 50.0], [13.4, 50.0], [13.5, 50.0], [13.6, 50.0], [13.7, 50.0], [13.8, 50.0], [13.9, 50.0], [14.0, 50.0], [14.1, 50.0], [14.2, 50.0], [14.3, 50.0], [14.4, 50.0], [14.5, 50.0], [14.6, 50.0], [14.7, 50.0], [14.8, 50.0], [14.9, 50.0], [15.0, 50.0], [15.1, 50.0], [15.2, 50.0], [15.3, 50.0], [15.4, 50.0], [15.5, 50.0], [15.6, 50.0], [15.7, 50.0], [15.8, 50.0], [15.9, 51.0], [16.0, 51.0], [16.1, 51.0], [16.2, 51.0], [16.3, 51.0], [16.4, 51.0], [16.5, 51.0], [16.6, 51.0], [16.7, 51.0], [16.8, 51.0], [16.9, 51.0], [17.0, 51.0], [17.1, 51.0], [17.2, 51.0], [17.3, 51.0], [17.4, 51.0], [17.5, 52.0], [17.6, 52.0], [17.7, 52.0], [17.8, 52.0], [17.9, 52.0], [18.0, 52.0], [18.1, 52.0], [18.2, 52.0], [18.3, 52.0], [18.4, 52.0], [18.5, 52.0], [18.6, 53.0], [18.7, 53.0], [18.8, 53.0], [18.9, 53.0], [19.0, 53.0], [19.1, 53.0], [19.2, 53.0], [19.3, 53.0], [19.4, 53.0], [19.5, 53.0], [19.6, 54.0], [19.7, 54.0], [19.8, 54.0], [19.9, 54.0], [20.0, 54.0], [20.1, 54.0], [20.2, 54.0], [20.3, 54.0], [20.4, 54.0], [20.5, 54.0], [20.6, 54.0], [20.7, 54.0], [20.8, 54.0], [20.9, 54.0], [21.0, 54.0], [21.1, 54.0], [21.2, 54.0], [21.3, 55.0], [21.4, 55.0], [21.5, 55.0], [21.6, 55.0], [21.7, 55.0], [21.8, 55.0], [21.9, 55.0], [22.0, 55.0], [22.1, 55.0], [22.2, 55.0], [22.3, 55.0], [22.4, 55.0], [22.5, 55.0], [22.6, 55.0], [22.7, 55.0], [22.8, 55.0], [22.9, 55.0], [23.0, 56.0], [23.1, 56.0], [23.2, 56.0], [23.3, 56.0], [23.4, 56.0], [23.5, 56.0], [23.6, 56.0], [23.7, 56.0], [23.8, 56.0], [23.9, 56.0], [24.0, 57.0], [24.1, 57.0], [24.2, 57.0], [24.3, 57.0], [24.4, 57.0], [24.5, 57.0], [24.6, 58.0], [24.7, 58.0], [24.8, 58.0], [24.9, 58.0], [25.0, 58.0], [25.1, 58.0], [25.2, 58.0], [25.3, 58.0], [25.4, 58.0], [25.5, 59.0], [25.6, 59.0], [25.7, 59.0], [25.8, 59.0], [25.9, 60.0], [26.0, 60.0], [26.1, 61.0], [26.2, 61.0], [26.3, 61.0], [26.4, 61.0], [26.5, 61.0], [26.6, 61.0], [26.7, 61.0], [26.8, 61.0], [26.9, 61.0], [27.0, 61.0], [27.1, 61.0], [27.2, 61.0], [27.3, 61.0], [27.4, 61.0], [27.5, 61.0], [27.6, 61.0], [27.7, 61.0], [27.8, 61.0], [27.9, 61.0], [28.0, 61.0], [28.1, 61.0], [28.2, 62.0], [28.3, 62.0], [28.4, 62.0], [28.5, 62.0], [28.6, 62.0], [28.7, 62.0], [28.8, 62.0], [28.9, 62.0], [29.0, 62.0], [29.1, 62.0], [29.2, 62.0], [29.3, 62.0], [29.4, 63.0], [29.5, 63.0], [29.6, 63.0], [29.7, 63.0], [29.8, 63.0], [29.9, 63.0], [30.0, 63.0], [30.1, 63.0], [30.2, 63.0], [30.3, 63.0], [30.4, 63.0], [30.5, 63.0], [30.6, 63.0], [30.7, 64.0], [30.8, 64.0], [30.9, 64.0], [31.0, 64.0], [31.1, 64.0], [31.2, 64.0], [31.3, 64.0], [31.4, 64.0], [31.5, 65.0], [31.6, 65.0], [31.7, 65.0], [31.8, 65.0], [31.9, 66.0], [32.0, 66.0], [32.1, 67.0], [32.2, 67.0], [32.3, 67.0], [32.4, 67.0], [32.5, 68.0], [32.6, 68.0], [32.7, 68.0], [32.8, 68.0], [32.9, 68.0], [33.0, 69.0], [33.1, 69.0], [33.2, 69.0], [33.3, 69.0], [33.4, 70.0], [33.5, 70.0], [33.6, 71.0], [33.7, 71.0], [33.8, 71.0], [33.9, 71.0], [34.0, 72.0], [34.1, 72.0], [34.2, 72.0], [34.3, 72.0], [34.4, 72.0], [34.5, 72.0], [34.6, 73.0], [34.7, 73.0], [34.8, 73.0], [34.9, 73.0], [35.0, 73.0], [35.1, 73.0], [35.2, 73.0], [35.3, 74.0], [35.4, 74.0], [35.5, 74.0], [35.6, 74.0], [35.7, 74.0], [35.8, 74.0], [35.9, 74.0], [36.0, 74.0], [36.1, 74.0], [36.2, 74.0], [36.3, 74.0], [36.4, 74.0], [36.5, 74.0], [36.6, 74.0], [36.7, 74.0], [36.8, 74.0], [36.9, 74.0], [37.0, 74.0], [37.1, 75.0], [37.2, 75.0], [37.3, 75.0], [37.4, 75.0], [37.5, 75.0], [37.6, 75.0], [37.7, 75.0], [37.8, 76.0], [37.9, 76.0], [38.0, 76.0], [38.1, 76.0], [38.2, 77.0], [38.3, 77.0], [38.4, 77.0], [38.5, 77.0], [38.6, 77.0], [38.7, 77.0], [38.8, 77.0], [38.9, 77.0], [39.0, 78.0], [39.1, 78.0], [39.2, 78.0], [39.3, 78.0], [39.4, 78.0], [39.5, 78.0], [39.6, 79.0], [39.7, 79.0], [39.8, 79.0], [39.9, 79.0], [40.0, 80.0], [40.1, 80.0], [40.2, 80.0], [40.3, 81.0], [40.4, 81.0], [40.5, 81.0], [40.6, 81.0], [40.7, 81.0], [40.8, 81.0], [40.9, 81.0], [41.0, 81.0], [41.1, 81.0], [41.2, 81.0], [41.3, 81.0], [41.4, 81.0], [41.5, 82.0], [41.6, 82.0], [41.7, 82.0], [41.8, 82.0], [41.9, 82.0], [42.0, 82.0], [42.1, 82.0], [42.2, 82.0], [42.3, 83.0], [42.4, 83.0], [42.5, 83.0], [42.6, 83.0], [42.7, 83.0], [42.8, 84.0], [42.9, 84.0], [43.0, 84.0], [43.1, 84.0], [43.2, 85.0], [43.3, 85.0], [43.4, 86.0], [43.5, 86.0], [43.6, 87.0], [43.7, 87.0], [43.8, 87.0], [43.9, 87.0], [44.0, 87.0], [44.1, 87.0], [44.2, 88.0], [44.3, 88.0], [44.4, 89.0], [44.5, 89.0], [44.6, 89.0], [44.7, 89.0], [44.8, 89.0], [44.9, 89.0], [45.0, 90.0], [45.1, 90.0], [45.2, 90.0], [45.3, 90.0], [45.4, 90.0], [45.5, 91.0], [45.6, 91.0], [45.7, 93.0], [45.8, 93.0], [45.9, 94.0], [46.0, 94.0], [46.1, 96.0], [46.2, 96.0], [46.3, 98.0], [46.4, 98.0], [46.5, 100.0], [46.6, 100.0], [46.7, 101.0], [46.8, 101.0], [46.9, 103.0], [47.0, 103.0], [47.1, 103.0], [47.2, 103.0], [47.3, 104.0], [47.4, 104.0], [47.5, 104.0], [47.6, 104.0], [47.7, 104.0], [47.8, 104.0], [47.9, 104.0], [48.0, 105.0], [48.1, 105.0], [48.2, 105.0], [48.3, 105.0], [48.4, 106.0], [48.5, 106.0], [48.6, 106.0], [48.7, 106.0], [48.8, 106.0], [48.9, 106.0], [49.0, 107.0], [49.1, 107.0], [49.2, 108.0], [49.3, 108.0], [49.4, 108.0], [49.5, 108.0], [49.6, 109.0], [49.7, 109.0], [49.8, 109.0], [49.9, 109.0], [50.0, 109.0], [50.1, 111.0], [50.2, 111.0], [50.3, 112.0], [50.4, 112.0], [50.5, 112.0], [50.6, 112.0], [50.7, 112.0], [50.8, 112.0], [50.9, 112.0], [51.0, 112.0], [51.1, 113.0], [51.2, 113.0], [51.3, 114.0], [51.4, 114.0], [51.5, 114.0], [51.6, 114.0], [51.7, 114.0], [51.8, 114.0], [51.9, 115.0], [52.0, 115.0], [52.1, 116.0], [52.2, 116.0], [52.3, 116.0], [52.4, 116.0], [52.5, 116.0], [52.6, 116.0], [52.7, 116.0], [52.8, 117.0], [52.9, 117.0], [53.0, 117.0], [53.1, 117.0], [53.2, 117.0], [53.3, 117.0], [53.4, 117.0], [53.5, 117.0], [53.6, 117.0], [53.7, 117.0], [53.8, 119.0], [53.9, 119.0], [54.0, 120.0], [54.1, 120.0], [54.2, 120.0], [54.3, 120.0], [54.4, 121.0], [54.5, 121.0], [54.6, 123.0], [54.7, 123.0], [54.8, 124.0], [54.9, 124.0], [55.0, 124.0], [55.1, 126.0], [55.2, 126.0], [55.3, 128.0], [55.4, 128.0], [55.5, 130.0], [55.6, 130.0], [55.7, 133.0], [55.8, 133.0], [55.9, 134.0], [56.0, 134.0], [56.1, 134.0], [56.2, 134.0], [56.3, 135.0], [56.4, 135.0], [56.5, 136.0], [56.6, 136.0], [56.7, 136.0], [56.8, 136.0], [56.9, 136.0], [57.0, 136.0], [57.1, 137.0], [57.2, 137.0], [57.3, 137.0], [57.4, 137.0], [57.5, 137.0], [57.6, 138.0], [57.7, 138.0], [57.8, 138.0], [57.9, 138.0], [58.0, 138.0], [58.1, 138.0], [58.2, 139.0], [58.3, 139.0], [58.4, 140.0], [58.5, 140.0], [58.6, 141.0], [58.7, 141.0], [58.8, 141.0], [58.9, 141.0], [59.0, 141.0], [59.1, 141.0], [59.2, 141.0], [59.3, 141.0], [59.4, 141.0], [59.5, 141.0], [59.6, 142.0], [59.7, 142.0], [59.8, 142.0], [59.9, 142.0], [60.0, 142.0], [60.1, 142.0], [60.2, 142.0], [60.3, 143.0], [60.4, 143.0], [60.5, 143.0], [60.6, 143.0], [60.7, 143.0], [60.8, 143.0], [60.9, 143.0], [61.0, 143.0], [61.1, 144.0], [61.2, 144.0], [61.3, 144.0], [61.4, 144.0], [61.5, 145.0], [61.6, 145.0], [61.7, 145.0], [61.8, 145.0], [61.9, 145.0], [62.0, 145.0], [62.1, 146.0], [62.2, 146.0], [62.3, 147.0], [62.4, 147.0], [62.5, 147.0], [62.6, 147.0], [62.7, 147.0], [62.8, 148.0], [62.9, 148.0], [63.0, 148.0], [63.1, 148.0], [63.2, 148.0], [63.3, 148.0], [63.4, 149.0], [63.5, 149.0], [63.6, 149.0], [63.7, 149.0], [63.8, 150.0], [63.9, 150.0], [64.0, 151.0], [64.1, 151.0], [64.2, 151.0], [64.3, 151.0], [64.4, 151.0], [64.5, 151.0], [64.6, 152.0], [64.7, 152.0], [64.8, 152.0], [64.9, 152.0], [65.0, 152.0], [65.1, 152.0], [65.2, 152.0], [65.3, 153.0], [65.4, 153.0], [65.5, 153.0], [65.6, 153.0], [65.7, 153.0], [65.8, 153.0], [65.9, 155.0], [66.0, 155.0], [66.1, 155.0], [66.2, 155.0], [66.3, 156.0], [66.4, 156.0], [66.5, 157.0], [66.6, 157.0], [66.7, 157.0], [66.8, 157.0], [66.9, 158.0], [67.0, 158.0], [67.1, 159.0], [67.2, 159.0], [67.3, 159.0], [67.4, 159.0], [67.5, 159.0], [67.6, 162.0], [67.7, 162.0], [67.8, 163.0], [67.9, 163.0], [68.0, 163.0], [68.1, 163.0], [68.2, 164.0], [68.3, 164.0], [68.4, 164.0], [68.5, 164.0], [68.6, 165.0], [68.7, 165.0], [68.8, 165.0], [68.9, 165.0], [69.0, 165.0], [69.1, 165.0], [69.2, 165.0], [69.3, 165.0], [69.4, 166.0], [69.5, 166.0], [69.6, 167.0], [69.7, 167.0], [69.8, 167.0], [69.9, 167.0], [70.0, 167.0], [70.1, 168.0], [70.2, 168.0], [70.3, 168.0], [70.4, 168.0], [70.5, 169.0], [70.6, 169.0], [70.7, 169.0], [70.8, 169.0], [70.9, 170.0], [71.0, 170.0], [71.1, 170.0], [71.2, 170.0], [71.3, 170.0], [71.4, 170.0], [71.5, 171.0], [71.6, 171.0], [71.7, 171.0], [71.8, 171.0], [71.9, 174.0], [72.0, 174.0], [72.1, 175.0], [72.2, 175.0], [72.3, 177.0], [72.4, 177.0], [72.5, 177.0], [72.6, 177.0], [72.7, 177.0], [72.8, 180.0], [72.9, 180.0], [73.0, 180.0], [73.1, 180.0], [73.2, 183.0], [73.3, 183.0], [73.4, 184.0], [73.5, 184.0], [73.6, 185.0], [73.7, 185.0], [73.8, 185.0], [73.9, 185.0], [74.0, 186.0], [74.1, 186.0], [74.2, 186.0], [74.3, 186.0], [74.4, 186.0], [74.5, 186.0], [74.6, 186.0], [74.7, 186.0], [74.8, 187.0], [74.9, 187.0], [75.0, 187.0], [75.1, 187.0], [75.2, 187.0], [75.3, 189.0], [75.4, 189.0], [75.5, 189.0], [75.6, 189.0], [75.7, 190.0], [75.8, 190.0], [75.9, 191.0], [76.0, 191.0], [76.1, 193.0], [76.2, 193.0], [76.3, 194.0], [76.4, 194.0], [76.5, 216.0], [76.6, 216.0], [76.7, 219.0], [76.8, 219.0], [76.9, 232.0], [77.0, 232.0], [77.1, 234.0], [77.2, 234.0], [77.3, 240.0], [77.4, 240.0], [77.5, 240.0], [77.6, 242.0], [77.7, 242.0], [77.8, 242.0], [77.9, 242.0], [78.0, 243.0], [78.1, 243.0], [78.2, 245.0], [78.3, 245.0], [78.4, 245.0], [78.5, 245.0], [78.6, 246.0], [78.7, 246.0], [78.8, 246.0], [78.9, 246.0], [79.0, 248.0], [79.1, 248.0], [79.2, 249.0], [79.3, 249.0], [79.4, 251.0], [79.5, 251.0], [79.6, 252.0], [79.7, 252.0], [79.8, 252.0], [79.9, 252.0], [80.0, 252.0], [80.1, 256.0], [80.2, 256.0], [80.3, 257.0], [80.4, 257.0], [80.5, 259.0], [80.6, 259.0], [80.7, 259.0], [80.8, 259.0], [80.9, 263.0], [81.0, 263.0], [81.1, 268.0], [81.2, 268.0], [81.3, 271.0], [81.4, 271.0], [81.5, 274.0], [81.6, 274.0], [81.7, 284.0], [81.8, 284.0], [81.9, 309.0], [82.0, 309.0], [82.1, 310.0], [82.2, 310.0], [82.3, 310.0], [82.4, 310.0], [82.5, 316.0], [82.6, 316.0], [82.7, 316.0], [82.8, 316.0], [82.9, 316.0], [83.0, 316.0], [83.1, 316.0], [83.2, 317.0], [83.3, 317.0], [83.4, 318.0], [83.5, 318.0], [83.6, 319.0], [83.7, 319.0], [83.8, 319.0], [83.9, 319.0], [84.0, 319.0], [84.1, 319.0], [84.2, 319.0], [84.3, 319.0], [84.4, 320.0], [84.5, 320.0], [84.6, 321.0], [84.7, 321.0], [84.8, 321.0], [84.9, 321.0], [85.0, 322.0], [85.1, 322.0], [85.2, 322.0], [85.3, 322.0], [85.4, 322.0], [85.5, 325.0], [85.6, 325.0], [85.7, 328.0], [85.8, 328.0], [85.9, 338.0], [86.0, 338.0], [86.1, 338.0], [86.2, 338.0], [86.3, 352.0], [86.4, 352.0], [86.5, 354.0], [86.6, 354.0], [86.7, 355.0], [86.8, 355.0], [86.9, 356.0], [87.0, 356.0], [87.1, 358.0], [87.2, 358.0], [87.3, 363.0], [87.4, 363.0], [87.5, 365.0], [87.6, 365.0], [87.7, 365.0], [87.8, 373.0], [87.9, 373.0], [88.0, 373.0], [88.1, 373.0], [88.2, 374.0], [88.3, 374.0], [88.4, 374.0], [88.5, 374.0], [88.6, 375.0], [88.7, 375.0], [88.8, 375.0], [88.9, 375.0], [89.0, 377.0], [89.1, 377.0], [89.2, 377.0], [89.3, 377.0], [89.4, 378.0], [89.5, 378.0], [89.6, 378.0], [89.7, 378.0], [89.8, 378.0], [89.9, 378.0], [90.0, 379.0], [90.1, 379.0], [90.2, 379.0], [90.3, 379.0], [90.4, 379.0], [90.5, 379.0], [90.6, 379.0], [90.7, 379.0], [90.8, 379.0], [90.9, 380.0], [91.0, 380.0], [91.1, 380.0], [91.2, 380.0], [91.3, 382.0], [91.4, 382.0], [91.5, 383.0], [91.6, 383.0], [91.7, 384.0], [91.8, 384.0], [91.9, 388.0], [92.0, 388.0], [92.1, 408.0], [92.2, 408.0], [92.3, 418.0], [92.4, 418.0], [92.5, 429.0], [92.6, 429.0], [92.7, 429.0], [92.8, 431.0], [92.9, 431.0], [93.0, 459.0], [93.1, 459.0], [93.2, 474.0], [93.3, 474.0], [93.4, 477.0], [93.5, 477.0], [93.6, 478.0], [93.7, 478.0], [93.8, 480.0], [93.9, 480.0], [94.0, 480.0], [94.1, 480.0], [94.2, 483.0], [94.3, 483.0], [94.4, 485.0], [94.5, 485.0], [94.6, 487.0], [94.7, 487.0], [94.8, 551.0], [94.9, 551.0], [95.0, 1069.0], [95.1, 1069.0], [95.2, 1069.0], [95.3, 1084.0], [95.4, 1084.0], [95.5, 1100.0], [95.6, 1100.0], [95.7, 1102.0], [95.8, 1102.0], [95.9, 1104.0], [96.0, 1104.0], [96.1, 1106.0], [96.2, 1106.0], [96.3, 1112.0], [96.4, 1112.0], [96.5, 1116.0], [96.6, 1116.0], [96.7, 1122.0], [96.8, 1122.0], [96.9, 1123.0], [97.0, 1123.0], [97.1, 1250.0], [97.2, 1250.0], [97.3, 1267.0], [97.4, 1267.0], [97.5, 1364.0], [97.6, 1364.0], [97.7, 1364.0], [97.8, 1365.0], [97.9, 1365.0], [98.0, 1373.0], [98.1, 1373.0], [98.2, 1373.0], [98.3, 1373.0], [98.4, 1373.0], [98.5, 1373.0], [98.6, 1377.0], [98.7, 1377.0], [98.8, 1384.0], [98.9, 1384.0], [99.0, 1384.0], [99.1, 1384.0], [99.2, 1384.0], [99.3, 1384.0], [99.4, 1386.0], [99.5, 1386.0], [99.6, 1388.0], [99.7, 1388.0], [99.8, 1388.0], [99.9, 1388.0]], "isOverall": false, "label": "Schedule", "isController": false}, {"data": [[0.0, 41.0], [0.1, 41.0], [0.2, 41.0], [0.3, 41.0], [0.4, 41.0], [0.5, 41.0], [0.6, 41.0], [0.7, 41.0], [0.8, 41.0], [0.9, 41.0], [1.0, 41.0], [1.1, 41.0], [1.2, 41.0], [1.3, 41.0], [1.4, 41.0], [1.5, 41.0], [1.6, 41.0], [1.7, 41.0], [1.8, 41.0], [1.9, 41.0], [2.0, 41.0], [2.1, 41.0], [2.2, 41.0], [2.3, 41.0], [2.4, 41.0], [2.5, 41.0], [2.6, 41.0], [2.7, 41.0], [2.8, 42.0], [2.9, 42.0], [3.0, 42.0], [3.1, 42.0], [3.2, 42.0], [3.3, 42.0], [3.4, 42.0], [3.5, 42.0], [3.6, 42.0], [3.7, 42.0], [3.8, 42.0], [3.9, 42.0], [4.0, 42.0], [4.1, 42.0], [4.2, 42.0], [4.3, 42.0], [4.4, 42.0], [4.5, 42.0], [4.6, 42.0], [4.7, 42.0], [4.8, 42.0], [4.9, 42.0], [5.0, 42.0], [5.1, 42.0], [5.2, 42.0], [5.3, 42.0], [5.4, 42.0], [5.5, 42.0], [5.6, 42.0], [5.7, 42.0], [5.8, 42.0], [5.9, 42.0], [6.0, 42.0], [6.1, 42.0], [6.2, 42.0], [6.3, 42.0], [6.4, 42.0], [6.5, 42.0], [6.6, 42.0], [6.7, 42.0], [6.8, 42.0], [6.9, 43.0], [7.0, 43.0], [7.1, 43.0], [7.2, 43.0], [7.3, 43.0], [7.4, 43.0], [7.5, 43.0], [7.6, 43.0], [7.7, 43.0], [7.8, 43.0], [7.9, 43.0], [8.0, 44.0], [8.1, 44.0], [8.2, 44.0], [8.3, 44.0], [8.4, 44.0], [8.5, 44.0], [8.6, 45.0], [8.7, 45.0], [8.8, 45.0], [8.9, 45.0], [9.0, 45.0], [9.1, 45.0], [9.2, 45.0], [9.3, 45.0], [9.4, 45.0], [9.5, 45.0], [9.6, 45.0], [9.7, 45.0], [9.8, 45.0], [9.9, 45.0], [10.0, 45.0], [10.1, 45.0], [10.2, 45.0], [10.3, 45.0], [10.4, 45.0], [10.5, 45.0], [10.6, 45.0], [10.7, 45.0], [10.8, 45.0], [10.9, 45.0], [11.0, 45.0], [11.1, 45.0], [11.2, 45.0], [11.3, 45.0], [11.4, 45.0], [11.5, 45.0], [11.6, 45.0], [11.7, 45.0], [11.8, 45.0], [11.9, 45.0], [12.0, 45.0], [12.1, 45.0], [12.2, 45.0], [12.3, 45.0], [12.4, 45.0], [12.5, 45.0], [12.6, 45.0], [12.7, 45.0], [12.8, 45.0], [12.9, 45.0], [13.0, 45.0], [13.1, 45.0], [13.2, 45.0], [13.3, 45.0], [13.4, 45.0], [13.5, 45.0], [13.6, 45.0], [13.7, 45.0], [13.8, 45.0], [13.9, 45.0], [14.0, 45.0], [14.1, 45.0], [14.2, 45.0], [14.3, 45.0], [14.4, 45.0], [14.5, 45.0], [14.6, 45.0], [14.7, 45.0], [14.8, 45.0], [14.9, 45.0], [15.0, 45.0], [15.1, 45.0], [15.2, 45.0], [15.3, 45.0], [15.4, 45.0], [15.5, 45.0], [15.6, 45.0], [15.7, 45.0], [15.8, 45.0], [15.9, 45.0], [16.0, 45.0], [16.1, 45.0], [16.2, 45.0], [16.3, 45.0], [16.4, 45.0], [16.5, 45.0], [16.6, 45.0], [16.7, 46.0], [16.8, 46.0], [16.9, 46.0], [17.0, 46.0], [17.1, 46.0], [17.2, 46.0], [17.3, 46.0], [17.4, 46.0], [17.5, 46.0], [17.6, 46.0], [17.7, 46.0], [17.8, 46.0], [17.9, 46.0], [18.0, 46.0], [18.1, 46.0], [18.2, 46.0], [18.3, 46.0], [18.4, 46.0], [18.5, 46.0], [18.6, 46.0], [18.7, 46.0], [18.8, 46.0], [18.9, 46.0], [19.0, 46.0], [19.1, 46.0], [19.2, 46.0], [19.3, 46.0], [19.4, 46.0], [19.5, 46.0], [19.6, 46.0], [19.7, 46.0], [19.8, 46.0], [19.9, 46.0], [20.0, 46.0], [20.1, 46.0], [20.2, 46.0], [20.3, 46.0], [20.4, 46.0], [20.5, 46.0], [20.6, 46.0], [20.7, 46.0], [20.8, 46.0], [20.9, 46.0], [21.0, 46.0], [21.1, 46.0], [21.2, 46.0], [21.3, 46.0], [21.4, 46.0], [21.5, 46.0], [21.6, 46.0], [21.7, 46.0], [21.8, 46.0], [21.9, 46.0], [22.0, 46.0], [22.1, 46.0], [22.2, 46.0], [22.3, 46.0], [22.4, 46.0], [22.5, 46.0], [22.6, 46.0], [22.7, 46.0], [22.8, 47.0], [22.9, 47.0], [23.0, 47.0], [23.1, 47.0], [23.2, 47.0], [23.3, 47.0], [23.4, 47.0], [23.5, 47.0], [23.6, 47.0], [23.7, 47.0], [23.8, 47.0], [23.9, 47.0], [24.0, 47.0], [24.1, 47.0], [24.2, 47.0], [24.3, 47.0], [24.4, 47.0], [24.5, 47.0], [24.6, 47.0], [24.7, 47.0], [24.8, 47.0], [24.9, 47.0], [25.0, 47.0], [25.1, 47.0], [25.2, 47.0], [25.3, 47.0], [25.4, 47.0], [25.5, 47.0], [25.6, 47.0], [25.7, 47.0], [25.8, 47.0], [25.9, 47.0], [26.0, 47.0], [26.1, 47.0], [26.2, 47.0], [26.3, 47.0], [26.4, 47.0], [26.5, 47.0], [26.6, 47.0], [26.7, 47.0], [26.8, 47.0], [26.9, 47.0], [27.0, 47.0], [27.1, 47.0], [27.2, 47.0], [27.3, 47.0], [27.4, 47.0], [27.5, 47.0], [27.6, 47.0], [27.7, 47.0], [27.8, 47.0], [27.9, 47.0], [28.0, 47.0], [28.1, 47.0], [28.2, 47.0], [28.3, 47.0], [28.4, 48.0], [28.5, 48.0], [28.6, 48.0], [28.7, 48.0], [28.8, 48.0], [28.9, 48.0], [29.0, 48.0], [29.1, 48.0], [29.2, 48.0], [29.3, 48.0], [29.4, 48.0], [29.5, 48.0], [29.6, 48.0], [29.7, 48.0], [29.8, 48.0], [29.9, 48.0], [30.0, 48.0], [30.1, 48.0], [30.2, 48.0], [30.3, 48.0], [30.4, 48.0], [30.5, 48.0], [30.6, 48.0], [30.7, 48.0], [30.8, 48.0], [30.9, 48.0], [31.0, 48.0], [31.1, 48.0], [31.2, 48.0], [31.3, 48.0], [31.4, 48.0], [31.5, 48.0], [31.6, 48.0], [31.7, 48.0], [31.8, 48.0], [31.9, 48.0], [32.0, 48.0], [32.1, 48.0], [32.2, 48.0], [32.3, 48.0], [32.4, 48.0], [32.5, 48.0], [32.6, 48.0], [32.7, 48.0], [32.8, 48.0], [32.9, 48.0], [33.0, 48.0], [33.1, 48.0], [33.2, 48.0], [33.3, 48.0], [33.4, 48.0], [33.5, 48.0], [33.6, 48.0], [33.7, 48.0], [33.8, 48.0], [33.9, 48.0], [34.0, 48.0], [34.1, 48.0], [34.2, 48.0], [34.3, 48.0], [34.4, 48.0], [34.5, 48.0], [34.6, 48.0], [34.7, 48.0], [34.8, 49.0], [34.9, 49.0], [35.0, 49.0], [35.1, 49.0], [35.2, 49.0], [35.3, 49.0], [35.4, 49.0], [35.5, 49.0], [35.6, 49.0], [35.7, 49.0], [35.8, 49.0], [35.9, 49.0], [36.0, 49.0], [36.1, 49.0], [36.2, 49.0], [36.3, 49.0], [36.4, 49.0], [36.5, 49.0], [36.6, 49.0], [36.7, 49.0], [36.8, 49.0], [36.9, 49.0], [37.0, 49.0], [37.1, 49.0], [37.2, 49.0], [37.3, 49.0], [37.4, 49.0], [37.5, 49.0], [37.6, 49.0], [37.7, 49.0], [37.8, 49.0], [37.9, 49.0], [38.0, 49.0], [38.1, 49.0], [38.2, 49.0], [38.3, 49.0], [38.4, 49.0], [38.5, 49.0], [38.6, 49.0], [38.7, 49.0], [38.8, 49.0], [38.9, 49.0], [39.0, 49.0], [39.1, 49.0], [39.2, 49.0], [39.3, 49.0], [39.4, 49.0], [39.5, 49.0], [39.6, 49.0], [39.7, 49.0], [39.8, 49.0], [39.9, 49.0], [40.0, 49.0], [40.1, 50.0], [40.2, 50.0], [40.3, 50.0], [40.4, 50.0], [40.5, 50.0], [40.6, 50.0], [40.7, 50.0], [40.8, 50.0], [40.9, 50.0], [41.0, 50.0], [41.1, 50.0], [41.2, 50.0], [41.3, 50.0], [41.4, 50.0], [41.5, 50.0], [41.6, 50.0], [41.7, 50.0], [41.8, 50.0], [41.9, 50.0], [42.0, 50.0], [42.1, 50.0], [42.2, 50.0], [42.3, 50.0], [42.4, 50.0], [42.5, 50.0], [42.6, 50.0], [42.7, 50.0], [42.8, 50.0], [42.9, 50.0], [43.0, 50.0], [43.1, 50.0], [43.2, 50.0], [43.3, 50.0], [43.4, 50.0], [43.5, 50.0], [43.6, 50.0], [43.7, 50.0], [43.8, 50.0], [43.9, 50.0], [44.0, 50.0], [44.1, 50.0], [44.2, 50.0], [44.3, 50.0], [44.4, 50.0], [44.5, 50.0], [44.6, 50.0], [44.7, 50.0], [44.8, 50.0], [44.9, 50.0], [45.0, 50.0], [45.1, 50.0], [45.2, 50.0], [45.3, 50.0], [45.4, 50.0], [45.5, 50.0], [45.6, 50.0], [45.7, 50.0], [45.8, 50.0], [45.9, 50.0], [46.0, 50.0], [46.1, 50.0], [46.2, 50.0], [46.3, 50.0], [46.4, 50.0], [46.5, 50.0], [46.6, 50.0], [46.7, 51.0], [46.8, 51.0], [46.9, 51.0], [47.0, 51.0], [47.1, 51.0], [47.2, 51.0], [47.3, 51.0], [47.4, 51.0], [47.5, 51.0], [47.6, 51.0], [47.7, 51.0], [47.8, 51.0], [47.9, 51.0], [48.0, 51.0], [48.1, 51.0], [48.2, 51.0], [48.3, 51.0], [48.4, 51.0], [48.5, 51.0], [48.6, 51.0], [48.7, 51.0], [48.8, 51.0], [48.9, 51.0], [49.0, 51.0], [49.1, 51.0], [49.2, 51.0], [49.3, 51.0], [49.4, 51.0], [49.5, 51.0], [49.6, 51.0], [49.7, 51.0], [49.8, 51.0], [49.9, 51.0], [50.0, 51.0], [50.1, 51.0], [50.2, 51.0], [50.3, 51.0], [50.4, 51.0], [50.5, 52.0], [50.6, 52.0], [50.7, 52.0], [50.8, 52.0], [50.9, 52.0], [51.0, 52.0], [51.1, 52.0], [51.2, 52.0], [51.3, 52.0], [51.4, 52.0], [51.5, 52.0], [51.6, 52.0], [51.7, 52.0], [51.8, 52.0], [51.9, 52.0], [52.0, 52.0], [52.1, 52.0], [52.2, 52.0], [52.3, 52.0], [52.4, 52.0], [52.5, 52.0], [52.6, 52.0], [52.7, 52.0], [52.8, 52.0], [52.9, 52.0], [53.0, 52.0], [53.1, 52.0], [53.2, 52.0], [53.3, 52.0], [53.4, 52.0], [53.5, 52.0], [53.6, 53.0], [53.7, 53.0], [53.8, 53.0], [53.9, 53.0], [54.0, 53.0], [54.1, 53.0], [54.2, 53.0], [54.3, 53.0], [54.4, 53.0], [54.5, 53.0], [54.6, 53.0], [54.7, 53.0], [54.8, 53.0], [54.9, 53.0], [55.0, 53.0], [55.1, 53.0], [55.2, 53.0], [55.3, 53.0], [55.4, 53.0], [55.5, 54.0], [55.6, 54.0], [55.7, 54.0], [55.8, 54.0], [55.9, 54.0], [56.0, 54.0], [56.1, 54.0], [56.2, 54.0], [56.3, 54.0], [56.4, 54.0], [56.5, 55.0], [56.6, 55.0], [56.7, 55.0], [56.8, 55.0], [56.9, 55.0], [57.0, 55.0], [57.1, 55.0], [57.2, 55.0], [57.3, 55.0], [57.4, 55.0], [57.5, 55.0], [57.6, 55.0], [57.7, 55.0], [57.8, 55.0], [57.9, 55.0], [58.0, 55.0], [58.1, 55.0], [58.2, 55.0], [58.3, 55.0], [58.4, 55.0], [58.5, 55.0], [58.6, 56.0], [58.7, 56.0], [58.8, 57.0], [58.9, 57.0], [59.0, 57.0], [59.1, 57.0], [59.2, 57.0], [59.3, 57.0], [59.4, 57.0], [59.5, 57.0], [59.6, 57.0], [59.7, 57.0], [59.8, 58.0], [59.9, 58.0], [60.0, 58.0], [60.1, 58.0], [60.2, 58.0], [60.3, 59.0], [60.4, 59.0], [60.5, 59.0], [60.6, 59.0], [60.7, 60.0], [60.8, 60.0], [60.9, 60.0], [61.0, 60.0], [61.1, 60.0], [61.2, 60.0], [61.3, 61.0], [61.4, 61.0], [61.5, 61.0], [61.6, 61.0], [61.7, 62.0], [61.8, 62.0], [61.9, 62.0], [62.0, 62.0], [62.1, 62.0], [62.2, 62.0], [62.3, 63.0], [62.4, 63.0], [62.5, 63.0], [62.6, 63.0], [62.7, 63.0], [62.8, 64.0], [62.9, 64.0], [63.0, 64.0], [63.1, 64.0], [63.2, 64.0], [63.3, 64.0], [63.4, 64.0], [63.5, 64.0], [63.6, 64.0], [63.7, 64.0], [63.8, 66.0], [63.9, 66.0], [64.0, 66.0], [64.1, 66.0], [64.2, 66.0], [64.3, 66.0], [64.4, 66.0], [64.5, 66.0], [64.6, 66.0], [64.7, 66.0], [64.8, 66.0], [64.9, 66.0], [65.0, 66.0], [65.1, 66.0], [65.2, 66.0], [65.3, 66.0], [65.4, 66.0], [65.5, 66.0], [65.6, 66.0], [65.7, 67.0], [65.8, 67.0], [65.9, 67.0], [66.0, 67.0], [66.1, 69.0], [66.2, 69.0], [66.3, 69.0], [66.4, 69.0], [66.5, 69.0], [66.6, 69.0], [66.7, 70.0], [66.8, 70.0], [66.9, 70.0], [67.0, 70.0], [67.1, 70.0], [67.2, 70.0], [67.3, 70.0], [67.4, 70.0], [67.5, 70.0], [67.6, 70.0], [67.7, 70.0], [67.8, 70.0], [67.9, 70.0], [68.0, 70.0], [68.1, 70.0], [68.2, 71.0], [68.3, 71.0], [68.4, 71.0], [68.5, 71.0], [68.6, 71.0], [68.7, 71.0], [68.8, 71.0], [68.9, 71.0], [69.0, 72.0], [69.1, 72.0], [69.2, 73.0], [69.3, 73.0], [69.4, 73.0], [69.5, 73.0], [69.6, 73.0], [69.7, 73.0], [69.8, 74.0], [69.9, 74.0], [70.0, 76.0], [70.1, 76.0], [70.2, 76.0], [70.3, 76.0], [70.4, 76.0], [70.5, 76.0], [70.6, 76.0], [70.7, 76.0], [70.8, 76.0], [70.9, 76.0], [71.0, 76.0], [71.1, 76.0], [71.2, 76.0], [71.3, 77.0], [71.4, 77.0], [71.5, 77.0], [71.6, 77.0], [71.7, 77.0], [71.8, 77.0], [71.9, 77.0], [72.0, 77.0], [72.1, 78.0], [72.2, 78.0], [72.3, 78.0], [72.4, 78.0], [72.5, 78.0], [72.6, 78.0], [72.7, 78.0], [72.8, 81.0], [72.9, 81.0], [73.0, 82.0], [73.1, 82.0], [73.2, 82.0], [73.3, 82.0], [73.4, 83.0], [73.5, 83.0], [73.6, 83.0], [73.7, 83.0], [73.8, 84.0], [73.9, 84.0], [74.0, 84.0], [74.1, 84.0], [74.2, 86.0], [74.3, 86.0], [74.4, 91.0], [74.5, 91.0], [74.6, 92.0], [74.7, 92.0], [74.8, 92.0], [74.9, 92.0], [75.0, 92.0], [75.1, 92.0], [75.2, 92.0], [75.3, 93.0], [75.4, 93.0], [75.5, 94.0], [75.6, 94.0], [75.7, 94.0], [75.8, 94.0], [75.9, 96.0], [76.0, 96.0], [76.1, 96.0], [76.2, 96.0], [76.3, 96.0], [76.4, 96.0], [76.5, 100.0], [76.6, 100.0], [76.7, 100.0], [76.8, 100.0], [76.9, 100.0], [77.0, 100.0], [77.1, 101.0], [77.2, 101.0], [77.3, 102.0], [77.4, 102.0], [77.5, 102.0], [77.6, 102.0], [77.7, 102.0], [77.8, 103.0], [77.9, 103.0], [78.0, 103.0], [78.1, 103.0], [78.2, 104.0], [78.3, 104.0], [78.4, 106.0], [78.5, 106.0], [78.6, 106.0], [78.7, 106.0], [78.8, 107.0], [78.9, 107.0], [79.0, 107.0], [79.1, 107.0], [79.2, 108.0], [79.3, 108.0], [79.4, 110.0], [79.5, 110.0], [79.6, 113.0], [79.7, 113.0], [79.8, 114.0], [79.9, 114.0], [80.0, 115.0], [80.1, 115.0], [80.2, 115.0], [80.3, 116.0], [80.4, 116.0], [80.5, 124.0], [80.6, 124.0], [80.7, 125.0], [80.8, 125.0], [80.9, 127.0], [81.0, 127.0], [81.1, 127.0], [81.2, 127.0], [81.3, 129.0], [81.4, 129.0], [81.5, 131.0], [81.6, 131.0], [81.7, 134.0], [81.8, 134.0], [81.9, 135.0], [82.0, 135.0], [82.1, 145.0], [82.2, 145.0], [82.3, 145.0], [82.4, 145.0], [82.5, 147.0], [82.6, 147.0], [82.7, 147.0], [82.8, 152.0], [82.9, 152.0], [83.0, 156.0], [83.1, 156.0], [83.2, 156.0], [83.3, 156.0], [83.4, 157.0], [83.5, 157.0], [83.6, 161.0], [83.7, 161.0], [83.8, 161.0], [83.9, 161.0], [84.0, 165.0], [84.1, 165.0], [84.2, 174.0], [84.3, 174.0], [84.4, 176.0], [84.5, 176.0], [84.6, 177.0], [84.7, 177.0], [84.8, 178.0], [84.9, 178.0], [85.0, 180.0], [85.1, 180.0], [85.2, 180.0], [85.3, 182.0], [85.4, 182.0], [85.5, 182.0], [85.6, 182.0], [85.7, 183.0], [85.8, 183.0], [85.9, 184.0], [86.0, 184.0], [86.1, 185.0], [86.2, 185.0], [86.3, 188.0], [86.4, 188.0], [86.5, 192.0], [86.6, 192.0], [86.7, 197.0], [86.8, 197.0], [86.9, 197.0], [87.0, 197.0], [87.1, 200.0], [87.2, 200.0], [87.3, 211.0], [87.4, 211.0], [87.5, 217.0], [87.6, 217.0], [87.7, 217.0], [87.8, 219.0], [87.9, 219.0], [88.0, 221.0], [88.1, 221.0], [88.2, 222.0], [88.3, 222.0], [88.4, 222.0], [88.5, 222.0], [88.6, 223.0], [88.7, 223.0], [88.8, 229.0], [88.9, 229.0], [89.0, 229.0], [89.1, 229.0], [89.2, 230.0], [89.3, 230.0], [89.4, 234.0], [89.5, 234.0], [89.6, 235.0], [89.7, 235.0], [89.8, 237.0], [89.9, 237.0], [90.0, 237.0], [90.1, 237.0], [90.2, 237.0], [90.3, 242.0], [90.4, 242.0], [90.5, 246.0], [90.6, 246.0], [90.7, 247.0], [90.8, 247.0], [90.9, 248.0], [91.0, 248.0], [91.1, 252.0], [91.2, 252.0], [91.3, 254.0], [91.4, 254.0], [91.5, 256.0], [91.6, 256.0], [91.7, 257.0], [91.8, 257.0], [91.9, 260.0], [92.0, 260.0], [92.1, 260.0], [92.2, 260.0], [92.3, 264.0], [92.4, 264.0], [92.5, 265.0], [92.6, 265.0], [92.7, 265.0], [92.8, 267.0], [92.9, 267.0], [93.0, 268.0], [93.1, 268.0], [93.2, 271.0], [93.3, 271.0], [93.4, 271.0], [93.5, 271.0], [93.6, 274.0], [93.7, 274.0], [93.8, 289.0], [93.9, 289.0], [94.0, 300.0], [94.1, 300.0], [94.2, 304.0], [94.3, 304.0], [94.4, 306.0], [94.5, 306.0], [94.6, 308.0], [94.7, 308.0], [94.8, 314.0], [94.9, 314.0], [95.0, 323.0], [95.1, 323.0], [95.2, 323.0], [95.3, 324.0], [95.4, 324.0], [95.5, 328.0], [95.6, 328.0], [95.7, 330.0], [95.8, 330.0], [95.9, 331.0], [96.0, 331.0], [96.1, 333.0], [96.2, 333.0], [96.3, 338.0], [96.4, 338.0], [96.5, 360.0], [96.6, 360.0], [96.7, 367.0], [96.8, 367.0], [96.9, 380.0], [97.0, 380.0], [97.1, 380.0], [97.2, 380.0], [97.3, 389.0], [97.4, 389.0], [97.5, 464.0], [97.6, 464.0], [97.7, 464.0], [97.8, 465.0], [97.9, 465.0], [98.0, 469.0], [98.1, 469.0], [98.2, 472.0], [98.3, 472.0], [98.4, 472.0], [98.5, 472.0], [98.6, 473.0], [98.7, 473.0], [98.8, 483.0], [98.9, 483.0], [99.0, 509.0], [99.1, 509.0], [99.2, 510.0], [99.3, 510.0], [99.4, 527.0], [99.5, 527.0], [99.6, 679.0], [99.7, 679.0], [99.8, 723.0], [99.9, 723.0]], "isOverall": false, "label": "Game Page", "isController": false}, {"data": [[0.0, 44.0], [0.1, 44.0], [0.2, 44.0], [0.3, 45.0], [0.4, 45.0], [0.5, 45.0], [0.6, 45.0], [0.7, 45.0], [0.8, 45.0], [0.9, 45.0], [1.0, 45.0], [1.1, 45.0], [1.2, 45.0], [1.3, 45.0], [1.4, 45.0], [1.5, 45.0], [1.6, 45.0], [1.7, 45.0], [1.8, 45.0], [1.9, 45.0], [2.0, 45.0], [2.1, 46.0], [2.2, 46.0], [2.3, 46.0], [2.4, 46.0], [2.5, 46.0], [2.6, 46.0], [2.7, 46.0], [2.8, 46.0], [2.9, 46.0], [3.0, 46.0], [3.1, 46.0], [3.2, 47.0], [3.3, 47.0], [3.4, 47.0], [3.5, 47.0], [3.6, 47.0], [3.7, 47.0], [3.8, 47.0], [3.9, 47.0], [4.0, 47.0], [4.1, 47.0], [4.2, 47.0], [4.3, 47.0], [4.4, 47.0], [4.5, 47.0], [4.6, 47.0], [4.7, 47.0], [4.8, 47.0], [4.9, 47.0], [5.0, 47.0], [5.1, 47.0], [5.2, 47.0], [5.3, 47.0], [5.4, 47.0], [5.5, 48.0], [5.6, 48.0], [5.7, 48.0], [5.8, 48.0], [5.9, 48.0], [6.0, 48.0], [6.1, 48.0], [6.2, 48.0], [6.3, 48.0], [6.4, 48.0], [6.5, 48.0], [6.6, 48.0], [6.7, 48.0], [6.8, 48.0], [6.9, 48.0], [7.0, 48.0], [7.1, 48.0], [7.2, 48.0], [7.3, 48.0], [7.4, 48.0], [7.5, 48.0], [7.6, 48.0], [7.7, 48.0], [7.8, 48.0], [7.9, 48.0], [8.0, 48.0], [8.1, 48.0], [8.2, 48.0], [8.3, 48.0], [8.4, 49.0], [8.5, 49.0], [8.6, 49.0], [8.7, 49.0], [8.8, 49.0], [8.9, 49.0], [9.0, 49.0], [9.1, 49.0], [9.2, 49.0], [9.3, 49.0], [9.4, 49.0], [9.5, 49.0], [9.6, 49.0], [9.7, 49.0], [9.8, 49.0], [9.9, 49.0], [10.0, 49.0], [10.1, 49.0], [10.2, 49.0], [10.3, 49.0], [10.4, 49.0], [10.5, 49.0], [10.6, 49.0], [10.7, 49.0], [10.8, 49.0], [10.9, 49.0], [11.0, 49.0], [11.1, 49.0], [11.2, 49.0], [11.3, 49.0], [11.4, 49.0], [11.5, 49.0], [11.6, 49.0], [11.7, 49.0], [11.8, 49.0], [11.9, 49.0], [12.0, 49.0], [12.1, 49.0], [12.2, 49.0], [12.3, 49.0], [12.4, 49.0], [12.5, 50.0], [12.6, 50.0], [12.7, 50.0], [12.8, 50.0], [12.9, 50.0], [13.0, 50.0], [13.1, 50.0], [13.2, 50.0], [13.3, 50.0], [13.4, 50.0], [13.5, 50.0], [13.6, 50.0], [13.7, 50.0], [13.8, 50.0], [13.9, 50.0], [14.0, 50.0], [14.1, 50.0], [14.2, 50.0], [14.3, 50.0], [14.4, 50.0], [14.5, 50.0], [14.6, 50.0], [14.7, 50.0], [14.8, 50.0], [14.9, 50.0], [15.0, 50.0], [15.1, 50.0], [15.2, 50.0], [15.3, 50.0], [15.4, 50.0], [15.5, 50.0], [15.6, 50.0], [15.7, 50.0], [15.8, 50.0], [15.9, 50.0], [16.0, 50.0], [16.1, 50.0], [16.2, 50.0], [16.3, 50.0], [16.4, 50.0], [16.5, 51.0], [16.6, 51.0], [16.7, 51.0], [16.8, 51.0], [16.9, 51.0], [17.0, 51.0], [17.1, 51.0], [17.2, 51.0], [17.3, 51.0], [17.4, 51.0], [17.5, 51.0], [17.6, 51.0], [17.7, 51.0], [17.8, 51.0], [17.9, 51.0], [18.0, 51.0], [18.1, 51.0], [18.2, 51.0], [18.3, 51.0], [18.4, 51.0], [18.5, 51.0], [18.6, 51.0], [18.7, 51.0], [18.8, 52.0], [18.9, 52.0], [19.0, 52.0], [19.1, 52.0], [19.2, 52.0], [19.3, 52.0], [19.4, 52.0], [19.5, 52.0], [19.6, 52.0], [19.7, 52.0], [19.8, 52.0], [19.9, 52.0], [20.0, 52.0], [20.1, 52.0], [20.2, 52.0], [20.3, 52.0], [20.4, 52.0], [20.5, 52.0], [20.6, 52.0], [20.7, 52.0], [20.8, 52.0], [20.9, 52.0], [21.0, 52.0], [21.1, 52.0], [21.2, 52.0], [21.3, 52.0], [21.4, 52.0], [21.5, 52.0], [21.6, 52.0], [21.7, 52.0], [21.8, 52.0], [21.9, 52.0], [22.0, 52.0], [22.1, 52.0], [22.2, 52.0], [22.3, 52.0], [22.4, 52.0], [22.5, 52.0], [22.6, 52.0], [22.7, 52.0], [22.8, 53.0], [22.9, 53.0], [23.0, 53.0], [23.1, 53.0], [23.2, 53.0], [23.3, 53.0], [23.4, 53.0], [23.5, 53.0], [23.6, 53.0], [23.7, 53.0], [23.8, 53.0], [23.9, 53.0], [24.0, 53.0], [24.1, 53.0], [24.2, 53.0], [24.3, 53.0], [24.4, 53.0], [24.5, 53.0], [24.6, 53.0], [24.7, 53.0], [24.8, 53.0], [24.9, 53.0], [25.0, 53.0], [25.1, 53.0], [25.2, 53.0], [25.3, 53.0], [25.4, 53.0], [25.5, 53.0], [25.6, 53.0], [25.7, 53.0], [25.8, 53.0], [25.9, 53.0], [26.0, 53.0], [26.1, 53.0], [26.2, 53.0], [26.3, 53.0], [26.4, 53.0], [26.5, 53.0], [26.6, 53.0], [26.7, 54.0], [26.8, 54.0], [26.9, 54.0], [27.0, 54.0], [27.1, 54.0], [27.2, 54.0], [27.3, 54.0], [27.4, 54.0], [27.5, 54.0], [27.6, 54.0], [27.7, 54.0], [27.8, 54.0], [27.9, 54.0], [28.0, 54.0], [28.1, 54.0], [28.2, 54.0], [28.3, 54.0], [28.4, 54.0], [28.5, 54.0], [28.6, 54.0], [28.7, 54.0], [28.8, 54.0], [28.9, 54.0], [29.0, 54.0], [29.1, 54.0], [29.2, 54.0], [29.3, 54.0], [29.4, 54.0], [29.5, 54.0], [29.6, 54.0], [29.7, 54.0], [29.8, 54.0], [29.9, 54.0], [30.0, 54.0], [30.1, 54.0], [30.2, 54.0], [30.3, 54.0], [30.4, 54.0], [30.5, 55.0], [30.6, 55.0], [30.7, 55.0], [30.8, 55.0], [30.9, 55.0], [31.0, 55.0], [31.1, 55.0], [31.2, 55.0], [31.3, 55.0], [31.4, 55.0], [31.5, 55.0], [31.6, 55.0], [31.7, 55.0], [31.8, 55.0], [31.9, 55.0], [32.0, 55.0], [32.1, 55.0], [32.2, 55.0], [32.3, 55.0], [32.4, 55.0], [32.5, 55.0], [32.6, 55.0], [32.7, 55.0], [32.8, 55.0], [32.9, 55.0], [33.0, 56.0], [33.1, 56.0], [33.2, 56.0], [33.3, 56.0], [33.4, 56.0], [33.5, 56.0], [33.6, 56.0], [33.7, 56.0], [33.8, 56.0], [33.9, 56.0], [34.0, 56.0], [34.1, 56.0], [34.2, 56.0], [34.3, 56.0], [34.4, 56.0], [34.5, 56.0], [34.6, 57.0], [34.7, 57.0], [34.8, 57.0], [34.9, 57.0], [35.0, 57.0], [35.1, 57.0], [35.2, 57.0], [35.3, 57.0], [35.4, 57.0], [35.5, 57.0], [35.6, 57.0], [35.7, 57.0], [35.8, 57.0], [35.9, 57.0], [36.0, 57.0], [36.1, 57.0], [36.2, 57.0], [36.3, 57.0], [36.4, 57.0], [36.5, 57.0], [36.6, 57.0], [36.7, 58.0], [36.8, 58.0], [36.9, 58.0], [37.0, 58.0], [37.1, 58.0], [37.2, 58.0], [37.3, 58.0], [37.4, 58.0], [37.5, 58.0], [37.6, 58.0], [37.7, 58.0], [37.8, 58.0], [37.9, 58.0], [38.0, 58.0], [38.1, 58.0], [38.2, 58.0], [38.3, 58.0], [38.4, 58.0], [38.5, 58.0], [38.6, 59.0], [38.7, 59.0], [38.8, 59.0], [38.9, 59.0], [39.0, 59.0], [39.1, 59.0], [39.2, 59.0], [39.3, 59.0], [39.4, 59.0], [39.5, 59.0], [39.6, 59.0], [39.7, 59.0], [39.8, 60.0], [39.9, 60.0], [40.0, 60.0], [40.1, 60.0], [40.2, 60.0], [40.3, 61.0], [40.4, 61.0], [40.5, 61.0], [40.6, 61.0], [40.7, 61.0], [40.8, 61.0], [40.9, 61.0], [41.0, 61.0], [41.1, 61.0], [41.2, 61.0], [41.3, 61.0], [41.4, 61.0], [41.5, 62.0], [41.6, 62.0], [41.7, 62.0], [41.8, 62.0], [41.9, 62.0], [42.0, 62.0], [42.1, 62.0], [42.2, 62.0], [42.3, 63.0], [42.4, 63.0], [42.5, 63.0], [42.6, 63.0], [42.7, 63.0], [42.8, 63.0], [42.9, 63.0], [43.0, 63.0], [43.1, 63.0], [43.2, 64.0], [43.3, 64.0], [43.4, 64.0], [43.5, 64.0], [43.6, 64.0], [43.7, 64.0], [43.8, 64.0], [43.9, 64.0], [44.0, 64.0], [44.1, 64.0], [44.2, 64.0], [44.3, 64.0], [44.4, 65.0], [44.5, 65.0], [44.6, 65.0], [44.7, 65.0], [44.8, 65.0], [44.9, 65.0], [45.0, 66.0], [45.1, 66.0], [45.2, 66.0], [45.3, 66.0], [45.4, 66.0], [45.5, 67.0], [45.6, 67.0], [45.7, 67.0], [45.8, 67.0], [45.9, 67.0], [46.0, 67.0], [46.1, 67.0], [46.2, 67.0], [46.3, 68.0], [46.4, 68.0], [46.5, 68.0], [46.6, 68.0], [46.7, 68.0], [46.8, 68.0], [46.9, 69.0], [47.0, 69.0], [47.1, 69.0], [47.2, 69.0], [47.3, 70.0], [47.4, 70.0], [47.5, 70.0], [47.6, 70.0], [47.7, 70.0], [47.8, 70.0], [47.9, 70.0], [48.0, 71.0], [48.1, 71.0], [48.2, 71.0], [48.3, 71.0], [48.4, 73.0], [48.5, 73.0], [48.6, 73.0], [48.7, 73.0], [48.8, 74.0], [48.9, 74.0], [49.0, 74.0], [49.1, 74.0], [49.2, 75.0], [49.3, 75.0], [49.4, 75.0], [49.5, 75.0], [49.6, 75.0], [49.7, 75.0], [49.8, 76.0], [49.9, 76.0], [50.0, 76.0], [50.1, 76.0], [50.2, 76.0], [50.3, 77.0], [50.4, 77.0], [50.5, 77.0], [50.6, 77.0], [50.7, 78.0], [50.8, 78.0], [50.9, 78.0], [51.0, 78.0], [51.1, 78.0], [51.2, 78.0], [51.3, 79.0], [51.4, 79.0], [51.5, 79.0], [51.6, 79.0], [51.7, 79.0], [51.8, 79.0], [51.9, 80.0], [52.0, 80.0], [52.1, 80.0], [52.2, 80.0], [52.3, 81.0], [52.4, 81.0], [52.5, 81.0], [52.6, 81.0], [52.7, 81.0], [52.8, 81.0], [52.9, 81.0], [53.0, 82.0], [53.1, 82.0], [53.2, 83.0], [53.3, 83.0], [53.4, 84.0], [53.5, 84.0], [53.6, 84.0], [53.7, 84.0], [53.8, 86.0], [53.9, 86.0], [54.0, 86.0], [54.1, 86.0], [54.2, 86.0], [54.3, 86.0], [54.4, 86.0], [54.5, 86.0], [54.6, 87.0], [54.7, 87.0], [54.8, 87.0], [54.9, 87.0], [55.0, 89.0], [55.1, 89.0], [55.2, 89.0], [55.3, 90.0], [55.4, 90.0], [55.5, 90.0], [55.6, 90.0], [55.7, 90.0], [55.8, 90.0], [55.9, 90.0], [56.0, 90.0], [56.1, 91.0], [56.2, 91.0], [56.3, 92.0], [56.4, 92.0], [56.5, 92.0], [56.6, 92.0], [56.7, 92.0], [56.8, 92.0], [56.9, 92.0], [57.0, 92.0], [57.1, 93.0], [57.2, 93.0], [57.3, 94.0], [57.4, 94.0], [57.5, 94.0], [57.6, 94.0], [57.7, 94.0], [57.8, 94.0], [57.9, 94.0], [58.0, 95.0], [58.1, 95.0], [58.2, 95.0], [58.3, 95.0], [58.4, 96.0], [58.5, 96.0], [58.6, 96.0], [58.7, 96.0], [58.8, 96.0], [58.9, 96.0], [59.0, 96.0], [59.1, 96.0], [59.2, 98.0], [59.3, 98.0], [59.4, 98.0], [59.5, 98.0], [59.6, 98.0], [59.7, 98.0], [59.8, 99.0], [59.9, 99.0], [60.0, 99.0], [60.1, 99.0], [60.2, 99.0], [60.3, 100.0], [60.4, 100.0], [60.5, 101.0], [60.6, 101.0], [60.7, 101.0], [60.8, 101.0], [60.9, 102.0], [61.0, 102.0], [61.1, 102.0], [61.2, 102.0], [61.3, 102.0], [61.4, 102.0], [61.5, 103.0], [61.6, 103.0], [61.7, 103.0], [61.8, 103.0], [61.9, 103.0], [62.0, 103.0], [62.1, 103.0], [62.2, 103.0], [62.3, 104.0], [62.4, 104.0], [62.5, 104.0], [62.6, 104.0], [62.7, 104.0], [62.8, 105.0], [62.9, 105.0], [63.0, 107.0], [63.1, 107.0], [63.2, 107.0], [63.3, 107.0], [63.4, 108.0], [63.5, 108.0], [63.6, 109.0], [63.7, 109.0], [63.8, 109.0], [63.9, 109.0], [64.0, 109.0], [64.1, 109.0], [64.2, 110.0], [64.3, 110.0], [64.4, 110.0], [64.5, 110.0], [64.6, 110.0], [64.7, 110.0], [64.8, 110.0], [64.9, 110.0], [65.0, 111.0], [65.1, 111.0], [65.2, 111.0], [65.3, 111.0], [65.4, 111.0], [65.5, 112.0], [65.6, 112.0], [65.7, 112.0], [65.8, 112.0], [65.9, 112.0], [66.0, 112.0], [66.1, 112.0], [66.2, 112.0], [66.3, 113.0], [66.4, 113.0], [66.5, 113.0], [66.6, 113.0], [66.7, 113.0], [66.8, 113.0], [66.9, 115.0], [67.0, 115.0], [67.1, 115.0], [67.2, 115.0], [67.3, 115.0], [67.4, 115.0], [67.5, 115.0], [67.6, 115.0], [67.7, 115.0], [67.8, 116.0], [67.9, 116.0], [68.0, 116.0], [68.1, 116.0], [68.2, 118.0], [68.3, 118.0], [68.4, 119.0], [68.5, 119.0], [68.6, 120.0], [68.7, 120.0], [68.8, 121.0], [68.9, 121.0], [69.0, 121.0], [69.1, 121.0], [69.2, 122.0], [69.3, 122.0], [69.4, 122.0], [69.5, 122.0], [69.6, 122.0], [69.7, 122.0], [69.8, 122.0], [69.9, 122.0], [70.0, 122.0], [70.1, 122.0], [70.2, 122.0], [70.3, 123.0], [70.4, 123.0], [70.5, 123.0], [70.6, 123.0], [70.7, 123.0], [70.8, 123.0], [70.9, 124.0], [71.0, 124.0], [71.1, 124.0], [71.2, 124.0], [71.3, 124.0], [71.4, 124.0], [71.5, 124.0], [71.6, 124.0], [71.7, 125.0], [71.8, 125.0], [71.9, 125.0], [72.0, 125.0], [72.1, 126.0], [72.2, 126.0], [72.3, 126.0], [72.4, 126.0], [72.5, 127.0], [72.6, 127.0], [72.7, 127.0], [72.8, 127.0], [72.9, 127.0], [73.0, 128.0], [73.1, 128.0], [73.2, 129.0], [73.3, 129.0], [73.4, 130.0], [73.5, 130.0], [73.6, 132.0], [73.7, 132.0], [73.8, 133.0], [73.9, 133.0], [74.0, 133.0], [74.1, 133.0], [74.2, 134.0], [74.3, 134.0], [74.4, 134.0], [74.5, 134.0], [74.6, 138.0], [74.7, 138.0], [74.8, 139.0], [74.9, 139.0], [75.0, 141.0], [75.1, 141.0], [75.2, 141.0], [75.3, 141.0], [75.4, 141.0], [75.5, 142.0], [75.6, 142.0], [75.7, 142.0], [75.8, 142.0], [75.9, 143.0], [76.0, 143.0], [76.1, 146.0], [76.2, 146.0], [76.3, 146.0], [76.4, 146.0], [76.5, 146.0], [76.6, 146.0], [76.7, 147.0], [76.8, 147.0], [76.9, 149.0], [77.0, 149.0], [77.1, 150.0], [77.2, 150.0], [77.3, 151.0], [77.4, 151.0], [77.5, 151.0], [77.6, 151.0], [77.7, 151.0], [77.8, 153.0], [77.9, 153.0], [78.0, 153.0], [78.1, 153.0], [78.2, 153.0], [78.3, 153.0], [78.4, 153.0], [78.5, 153.0], [78.6, 154.0], [78.7, 154.0], [78.8, 154.0], [78.9, 154.0], [79.0, 155.0], [79.1, 155.0], [79.2, 155.0], [79.3, 155.0], [79.4, 156.0], [79.5, 156.0], [79.6, 157.0], [79.7, 157.0], [79.8, 157.0], [79.9, 157.0], [80.0, 158.0], [80.1, 158.0], [80.2, 158.0], [80.3, 159.0], [80.4, 159.0], [80.5, 159.0], [80.6, 159.0], [80.7, 159.0], [80.8, 159.0], [80.9, 160.0], [81.0, 160.0], [81.1, 161.0], [81.2, 161.0], [81.3, 161.0], [81.4, 161.0], [81.5, 163.0], [81.6, 163.0], [81.7, 165.0], [81.8, 165.0], [81.9, 165.0], [82.0, 165.0], [82.1, 166.0], [82.2, 166.0], [82.3, 168.0], [82.4, 168.0], [82.5, 168.0], [82.6, 168.0], [82.7, 168.0], [82.8, 168.0], [82.9, 168.0], [83.0, 168.0], [83.1, 168.0], [83.2, 171.0], [83.3, 171.0], [83.4, 173.0], [83.5, 173.0], [83.6, 174.0], [83.7, 174.0], [83.8, 175.0], [83.9, 175.0], [84.0, 177.0], [84.1, 177.0], [84.2, 178.0], [84.3, 178.0], [84.4, 180.0], [84.5, 180.0], [84.6, 182.0], [84.7, 182.0], [84.8, 183.0], [84.9, 183.0], [85.0, 185.0], [85.1, 185.0], [85.2, 185.0], [85.3, 186.0], [85.4, 186.0], [85.5, 186.0], [85.6, 186.0], [85.7, 187.0], [85.8, 187.0], [85.9, 189.0], [86.0, 189.0], [86.1, 190.0], [86.2, 190.0], [86.3, 190.0], [86.4, 190.0], [86.5, 190.0], [86.6, 190.0], [86.7, 193.0], [86.8, 193.0], [86.9, 193.0], [87.0, 193.0], [87.1, 195.0], [87.2, 195.0], [87.3, 196.0], [87.4, 196.0], [87.5, 198.0], [87.6, 198.0], [87.7, 198.0], [87.8, 198.0], [87.9, 198.0], [88.0, 203.0], [88.1, 203.0], [88.2, 204.0], [88.3, 204.0], [88.4, 206.0], [88.5, 206.0], [88.6, 206.0], [88.7, 206.0], [88.8, 209.0], [88.9, 209.0], [89.0, 210.0], [89.1, 210.0], [89.2, 211.0], [89.3, 211.0], [89.4, 218.0], [89.5, 218.0], [89.6, 218.0], [89.7, 218.0], [89.8, 219.0], [89.9, 219.0], [90.0, 221.0], [90.1, 221.0], [90.2, 221.0], [90.3, 223.0], [90.4, 223.0], [90.5, 229.0], [90.6, 229.0], [90.7, 230.0], [90.8, 230.0], [90.9, 230.0], [91.0, 230.0], [91.1, 237.0], [91.2, 237.0], [91.3, 239.0], [91.4, 239.0], [91.5, 239.0], [91.6, 239.0], [91.7, 244.0], [91.8, 244.0], [91.9, 253.0], [92.0, 253.0], [92.1, 254.0], [92.2, 254.0], [92.3, 255.0], [92.4, 255.0], [92.5, 256.0], [92.6, 256.0], [92.7, 256.0], [92.8, 258.0], [92.9, 258.0], [93.0, 261.0], [93.1, 261.0], [93.2, 265.0], [93.3, 265.0], [93.4, 265.0], [93.5, 265.0], [93.6, 274.0], [93.7, 274.0], [93.8, 279.0], [93.9, 279.0], [94.0, 282.0], [94.1, 282.0], [94.2, 286.0], [94.3, 286.0], [94.4, 290.0], [94.5, 290.0], [94.6, 298.0], [94.7, 298.0], [94.8, 300.0], [94.9, 300.0], [95.0, 301.0], [95.1, 301.0], [95.2, 301.0], [95.3, 304.0], [95.4, 304.0], [95.5, 321.0], [95.6, 321.0], [95.7, 322.0], [95.8, 322.0], [95.9, 324.0], [96.0, 324.0], [96.1, 326.0], [96.2, 326.0], [96.3, 328.0], [96.4, 328.0], [96.5, 347.0], [96.6, 347.0], [96.7, 347.0], [96.8, 347.0], [96.9, 348.0], [97.0, 348.0], [97.1, 349.0], [97.2, 349.0], [97.3, 349.0], [97.4, 349.0], [97.5, 357.0], [97.6, 357.0], [97.7, 357.0], [97.8, 357.0], [97.9, 357.0], [98.0, 359.0], [98.1, 359.0], [98.2, 365.0], [98.3, 365.0], [98.4, 383.0], [98.5, 383.0], [98.6, 409.0], [98.7, 409.0], [98.8, 477.0], [98.9, 477.0], [99.0, 483.0], [99.1, 483.0], [99.2, 491.0], [99.3, 491.0], [99.4, 516.0], [99.5, 516.0], [99.6, 519.0], [99.7, 519.0], [99.8, 555.0], [99.9, 555.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 477.0, "series": [{"data": [[0.0, 289.0], [500.0, 153.0], [1000.0, 38.0]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[0.0, 471.0], [500.0, 1.0], [1000.0, 8.0]], "isOverall": false, "label": "WinnersList", "isController": false}, {"data": [[0.0, 455.0], [500.0, 1.0], [1000.0, 24.0]], "isOverall": false, "label": "Schedule", "isController": false}, {"data": [[0.0, 475.0], [500.0, 5.0]], "isOverall": false, "label": "Game Page", "isController": false}, {"data": [[0.0, 477.0], [500.0, 3.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 500, "maxX": 1000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 176.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1972.0, "series": [{"data": [[1.0, 176.0]], "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[3.0, 252.0]], "isOverall": false, "label": "Requests in error", "isController": false}, {"data": [[0.0, 1972.0]], "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                },
                colors: ["#9ACD32", "yellow", "orange", "#FF6347"]                
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 88.74285714285709, "minX": 1.60798206E12, "maxY": 272.5925619834709, "series": [{"data": [[1.60798212E12, 88.74285714285709], [1.60798206E12, 272.5925619834709]], "isOverall": false, "label": "Gemezz", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60798212E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 42.0, "minX": 1.0, "maxY": 1342.0, "series": [{"data": [[3.0, 94.66666666666667], [5.0, 97.2], [25.0, 127.91666666666666], [26.0, 99.0], [47.0, 97.0], [48.0, 95.5], [51.0, 96.5], [52.0, 108.0], [54.0, 106.33333333333333], [55.0, 126.0], [57.0, 101.0], [58.0, 128.5], [59.0, 128.0], [61.0, 144.0], [63.0, 132.0], [62.0, 155.0], [64.0, 149.0], [65.0, 146.0], [68.0, 125.44444444444447], [79.0, 297.5], [87.0, 208.5], [86.0, 1320.0], [85.0, 1342.0], [89.0, 757.5], [95.0, 125.125], [94.0, 127.0], [101.0, 1124.0666666666668], [106.0, 1171.0], [107.0, 1173.5], [108.0, 1165.7272727272725], [112.0, 1184.6666666666667], [113.0, 1194.0], [151.0, 106.0], [145.0, 107.0], [164.0, 94.0], [174.0, 120.0], [172.0, 222.0], [184.0, 183.0], [206.0, 406.3], [207.0, 343.5], [208.0, 427.75], [209.0, 326.25], [210.0, 446.61904761904765], [211.0, 467.57142857142856], [212.0, 413.7692307692307], [213.0, 397.0], [214.0, 505.0], [215.0, 513.0930232558139], [216.0, 619.0], [219.0, 114.33333333333333], [220.0, 123.0], [221.0, 117.5], [222.0, 94.0], [223.0, 370.0], [224.0, 458.25], [225.0, 570.0], [226.0, 615.0], [228.0, 677.0], [231.0, 572.0], [234.0, 502.37499999999994], [235.0, 414.71428571428567], [236.0, 685.375], [237.0, 666.1428571428571], [238.0, 712.5], [239.0, 706.5], [240.0, 699.0], [241.0, 750.0], [242.0, 751.0], [244.0, 244.33333333333331], [246.0, 810.0], [248.0, 815.3333333333334], [252.0, 797.0], [255.0, 547.8], [251.0, 822.0], [253.0, 829.0], [267.0, 203.0], [266.0, 247.0], [285.0, 619.0], [284.0, 717.8666666666668], [282.0, 281.0], [287.0, 130.75], [279.0, 240.0], [301.0, 354.1428571428571], [293.0, 285.0], [297.0, 318.3333333333333], [302.0, 314.5], [303.0, 322.75], [299.0, 210.28571428571428], [300.0, 217.0], [288.0, 133.0], [295.0, 167.5], [294.0, 175.5], [305.0, 183.25], [304.0, 195.0], [307.0, 194.0], [306.0, 187.33333333333334], [311.0, 340.5], [310.0, 607.75], [313.0, 292.0], [312.0, 251.06250000000003], [309.0, 203.5], [308.0, 253.5]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[192.07499999999982, 422.90833333333313]], "isOverall": false, "label": "HomePage-Aggregated", "isController": false}, {"data": [[3.0, 49.5], [5.0, 50.4], [8.0, 54.0], [10.0, 51.0], [16.0, 49.0], [25.0, 50.92], [35.0, 56.0], [34.0, 55.0], [41.0, 45.0], [43.0, 46.0], [45.0, 50.0], [51.0, 52.666666666666664], [53.0, 52.0], [52.0, 49.0], [55.0, 51.0], [54.0, 55.0], [57.0, 58.0], [56.0, 59.666666666666664], [59.0, 61.0], [61.0, 56.0], [60.0, 57.666666666666664], [62.0, 57.666666666666664], [67.0, 76.35714285714285], [66.0, 63.333333333333336], [65.0, 58.285714285714285], [64.0, 68.0], [71.0, 55.0], [70.0, 55.0], [69.0, 55.0], [68.0, 70.76190476190476], [75.0, 51.0], [74.0, 51.0], [72.0, 49.0], [79.0, 49.333333333333336], [78.0, 48.0], [77.0, 49.333333333333336], [80.0, 108.0], [84.0, 120.0], [91.0, 1259.0], [89.0, 121.22727272727269], [95.0, 64.0], [99.0, 49.0], [98.0, 49.0], [101.0, 96.78571428571426], [106.0, 678.2], [107.0, 48.0], [109.0, 1079.0], [110.0, 1105.0], [108.0, 479.0], [128.0, 102.0], [156.0, 73.0], [166.0, 108.0], [165.0, 62.0], [169.0, 135.0], [184.0, 123.0], [209.0, 69.0], [213.0, 92.75], [223.0, 45.888888888888886], [224.0, 48.199999999999996], [225.0, 47.5], [239.0, 63.0], [238.0, 47.0], [237.0, 48.0], [235.0, 47.5], [243.0, 74.5], [240.0, 51.0], [255.0, 47.5], [267.0, 208.33333333333334], [264.0, 62.0], [257.0, 83.36363636363636], [256.0, 53.0], [274.0, 322.0], [275.0, 319.0], [276.0, 313.0], [277.0, 308.0], [279.0, 147.2], [280.0, 310.0], [282.0, 248.0], [281.0, 188.70212765957444], [283.0, 265.0], [284.0, 250.15384615384613], [287.0, 210.5], [289.0, 114.71428571428572], [292.0, 119.2], [291.0, 113.2], [290.0, 109.0], [293.0, 153.0], [294.0, 130.7142857142857], [295.0, 119.66666666666666], [296.0, 162.0], [302.0, 187.0], [301.0, 154.2857142857143], [297.0, 185.99999999999997], [298.0, 116.0], [299.0, 169.0], [305.0, 142.0], [307.0, 132.0], [308.0, 134.33333333333334], [309.0, 175.88888888888889], [310.0, 391.3333333333333], [311.0, 384.16666666666663], [304.0, 158.0], [313.0, 361.0], [312.0, 181.0], [306.0, 150.0]], "isOverall": false, "label": "WinnersList", "isController": false}, {"data": [[192.5625, 141.41041666666675]], "isOverall": false, "label": "WinnersList-Aggregated", "isController": false}, {"data": [[3.0, 49.0], [5.0, 50.6], [19.0, 71.0], [25.0, 71.16000000000003], [30.0, 51.0], [55.0, 51.0], [66.0, 69.4], [65.0, 69.5], [64.0, 80.0], [67.0, 78.47368421052633], [71.0, 61.0], [68.0, 66.0232558139535], [78.0, 53.0], [83.0, 190.0], [87.0, 125.66666666666667], [86.0, 151.0], [85.0, 152.0], [84.0, 153.0], [91.0, 1250.0], [89.0, 164.43749999999997], [95.0, 57.625], [98.0, 48.0], [96.0, 54.0], [101.0, 65.125], [106.0, 1100.0], [107.0, 1116.3333333333333], [110.0, 1190.142857142857], [109.0, 1188.4285714285713], [108.0, 692.0], [112.0, 48.0], [122.0, 53.0], [126.0, 87.0], [125.0, 61.0], [207.0, 53.0], [215.0, 47.156249999999986], [208.0, 93.0], [213.0, 136.0], [216.0, 45.0], [217.0, 50.0], [218.0, 49.0], [219.0, 48.0], [224.0, 49.5], [226.0, 56.0], [227.0, 64.0], [228.0, 47.81818181818182], [229.0, 50.5], [231.0, 48.75], [232.0, 45.0], [234.0, 49.0], [235.0, 55.666666666666664], [236.0, 55.0], [238.0, 51.0], [237.0, 49.0], [233.0, 50.0], [247.0, 317.5], [246.0, 314.5], [248.0, 316.0], [249.0, 317.5], [250.0, 319.0], [251.0, 316.0], [255.0, 337.25], [270.0, 373.5], [256.0, 320.0], [263.0, 330.0], [265.0, 210.6], [266.0, 143.0], [269.0, 352.5], [271.0, 480.8571428571429], [262.0, 338.0], [257.0, 123.0], [275.0, 510.2], [273.0, 373.5], [272.0, 378.0], [278.0, 643.0], [274.0, 383.0], [276.0, 338.0], [277.0, 365.0], [281.0, 164.7142857142857], [283.0, 277.5], [284.0, 307.54166666666674], [280.0, 689.0], [291.0, 108.0], [292.0, 132.19999999999996], [293.0, 170.0], [294.0, 153.5], [295.0, 187.0], [290.0, 118.5], [289.0, 109.0], [288.0, 107.0], [298.0, 142.5], [299.0, 160.85714285714283], [300.0, 143.8], [301.0, 159.375], [303.0, 141.0], [297.0, 181.375], [296.0, 143.33333333333334], [302.0, 167.5], [311.0, 144.0], [306.0, 136.4], [308.0, 138.33333333333334], [310.0, 428.6], [313.0, 465.0], [312.0, 186.0], [309.0, 136.0], [305.0, 132.0], [307.0, 143.0]], "isOverall": false, "label": "Schedule", "isController": false}, {"data": [[195.41249999999994, 197.1958333333333]], "isOverall": false, "label": "Schedule-Aggregated", "isController": false}, {"data": [[2.0, 50.5], [3.0, 49.5], [4.0, 45.5], [5.0, 47.666666666666664], [6.0, 47.0], [7.0, 46.333333333333336], [8.0, 48.75], [9.0, 47.66666666666667], [10.0, 50.166666666666664], [11.0, 49.0], [12.0, 56.75], [13.0, 46.666666666666664], [14.0, 48.0], [15.0, 47.5], [16.0, 49.333333333333336], [17.0, 48.0], [18.0, 46.0], [19.0, 46.25], [20.0, 47.333333333333336], [21.0, 47.333333333333336], [22.0, 45.333333333333336], [23.0, 50.0], [24.0, 42.666666666666664], [25.0, 44.75], [26.0, 45.5], [27.0, 46.333333333333336], [28.0, 45.5], [29.0, 49.0], [30.0, 48.5], [31.0, 47.5], [33.0, 51.5], [32.0, 45.0], [35.0, 44.0], [34.0, 49.5], [37.0, 51.0], [36.0, 46.5], [39.0, 48.5], [38.0, 46.0], [41.0, 46.0], [40.0, 48.5], [43.0, 47.0], [42.0, 75.5], [45.0, 49.5], [44.0, 49.5], [47.0, 43.0], [46.0, 48.0], [49.0, 48.5], [48.0, 49.5], [51.0, 46.0], [50.0, 70.5], [53.0, 74.5], [52.0, 48.0], [55.0, 49.0], [54.0, 43.5], [57.0, 72.5], [56.0, 42.0], [59.0, 75.5], [58.0, 71.5], [61.0, 62.333333333333336], [60.0, 49.0], [63.0, 50.0], [62.0, 67.0], [67.0, 45.0], [66.0, 43.0], [65.0, 69.0], [64.0, 45.5], [71.0, 42.0], [70.0, 55.0], [69.0, 46.0], [68.0, 51.0], [75.0, 48.0], [74.0, 48.0], [73.0, 53.0], [72.0, 45.0], [79.0, 55.0], [78.0, 46.0], [77.0, 47.0], [76.0, 49.0], [87.0, 110.0], [85.0, 125.0], [89.0, 97.0], [88.0, 156.5], [91.0, 46.0], [95.0, 54.0], [94.0, 46.0], [93.0, 46.0], [92.0, 45.0], [99.0, 50.0], [96.0, 50.0], [101.0, 64.25], [107.0, 51.6], [106.0, 50.0], [111.0, 304.5], [110.0, 181.8], [109.0, 186.33333333333334], [108.0, 351.3], [115.0, 60.0], [114.0, 48.0], [113.0, 288.0], [112.0, 363.5], [119.0, 51.0], [118.0, 48.0], [116.0, 55.0], [121.0, 57.0], [120.0, 58.0], [127.0, 55.0], [135.0, 52.0], [134.0, 57.0], [133.0, 64.0], [132.0, 94.0], [131.0, 52.0], [130.0, 64.0], [129.0, 96.0], [143.0, 48.0], [142.0, 48.0], [141.0, 135.0], [140.0, 49.0], [139.0, 47.0], [138.0, 48.5], [137.0, 48.0], [136.0, 47.0], [151.0, 43.0], [150.0, 45.0], [149.0, 45.0], [148.0, 55.0], [147.0, 50.0], [146.0, 42.0], [145.0, 54.0], [144.0, 49.5], [159.0, 47.0], [158.0, 82.0], [156.0, 46.0], [155.0, 47.5], [154.0, 47.0], [153.0, 42.0], [152.0, 51.0], [167.0, 66.0], [166.0, 51.0], [165.0, 67.0], [164.0, 50.0], [163.0, 49.0], [162.0, 53.5], [161.0, 48.0], [160.0, 66.0], [173.0, 59.5], [172.0, 56.5], [171.0, 49.0], [170.0, 61.0], [169.0, 46.0], [168.0, 66.0], [205.0, 101.0], [213.0, 47.541666666666664], [212.0, 47.0], [211.0, 48.0], [210.0, 107.0], [208.0, 77.0], [231.0, 77.5], [230.0, 81.33333333333333], [229.0, 64.0], [239.0, 70.0], [238.0, 70.0], [237.0, 70.0], [236.0, 61.5], [235.0, 71.0], [234.0, 73.0], [233.0, 73.0], [232.0, 76.0], [247.0, 66.0], [246.0, 63.0], [245.0, 69.0], [244.0, 76.0], [243.0, 76.0], [242.0, 70.0], [241.0, 70.0], [240.0, 76.0], [256.0, 74.77777777777777], [267.0, 165.0], [265.0, 59.0], [257.0, 58.0], [280.0, 169.0], [284.0, 63.5], [283.0, 73.0], [282.0, 74.0], [281.0, 207.02325581395348], [279.0, 143.25], [278.0, 323.5], [287.0, 265.0], [275.0, 156.0], [273.0, 127.0], [302.0, 179.66666666666669], [290.0, 47.0], [292.0, 171.33333333333334], [293.0, 69.0], [291.0, 143.0], [303.0, 143.5], [297.0, 165.8125], [296.0, 51.0], [301.0, 50.0], [300.0, 135.33333333333331], [299.0, 216.0], [298.0, 46.0], [306.0, 152.5], [313.0, 47.0], [312.0, 48.0], [311.0, 47.0], [310.0, 229.0], [309.0, 187.0], [308.0, 150.0], [307.0, 179.0], [305.0, 83.0], [304.0, 248.0], [1.0, 50.0]], "isOverall": false, "label": "Game Page", "isController": false}, {"data": [[147.75208333333336, 97.40624999999996]], "isOverall": false, "label": "Game Page-Aggregated", "isController": false}, {"data": [[4.0, 57.0], [5.0, 50.8], [7.0, 53.0], [10.0, 53.666666666666664], [14.0, 52.0], [15.0, 46.5], [16.0, 45.0], [18.0, 50.666666666666664], [20.0, 53.0], [22.0, 52.25], [23.0, 54.0], [24.0, 50.57142857142857], [25.0, 48.58333333333332], [26.0, 50.0], [29.0, 52.0], [32.0, 49.0], [35.0, 52.0], [37.0, 48.0], [38.0, 53.8], [39.0, 51.900000000000006], [41.0, 49.75], [43.0, 48.0], [45.0, 48.5], [44.0, 52.5], [47.0, 55.5], [49.0, 51.0], [48.0, 52.666666666666664], [51.0, 48.0], [50.0, 49.0], [53.0, 50.5], [52.0, 55.0], [55.0, 51.0], [54.0, 51.5], [57.0, 54.75], [56.0, 74.0], [58.0, 49.5], [61.0, 75.0], [60.0, 52.0], [63.0, 76.0], [62.0, 61.25], [67.0, 68.07692307692307], [66.0, 60.833333333333336], [65.0, 63.75000000000001], [64.0, 55.5], [70.0, 53.333333333333336], [69.0, 54.5], [68.0, 66.66666666666667], [75.0, 49.0], [72.0, 53.0], [79.0, 50.0], [78.0, 72.33333333333333], [77.0, 57.0], [84.0, 156.0], [89.0, 100.17647058823528], [95.0, 55.0], [99.0, 48.0], [98.0, 50.5], [101.0, 96.44444444444444], [106.0, 50.0], [110.0, 53.0], [108.0, 491.0], [112.0, 356.1666666666667], [126.0, 79.0], [135.0, 143.0], [132.0, 93.0], [129.0, 91.0], [128.0, 68.0], [148.0, 50.0], [145.0, 53.0], [166.0, 116.0], [165.0, 86.0], [163.0, 61.0], [173.0, 105.25], [172.0, 56.0], [171.0, 108.0], [169.0, 110.0], [207.0, 126.0], [211.0, 52.0], [213.0, 74.25], [228.0, 48.0], [229.0, 47.5], [230.0, 46.0], [231.0, 49.16666666666667], [232.0, 48.0], [233.0, 50.0], [234.0, 49.0], [235.0, 53.5], [244.0, 86.0], [267.0, 165.0], [264.0, 183.0], [257.0, 66.83333333333333], [256.0, 66.92857142857143], [281.0, 213.78571428571433], [282.0, 279.0], [284.0, 222.0], [287.0, 261.0], [279.0, 119.84615384615383], [301.0, 192.07692307692307], [289.0, 107.5], [292.0, 133.3846153846154], [291.0, 113.5], [300.0, 166.5], [293.0, 120.0], [295.0, 191.44444444444446], [294.0, 132.77777777777777], [296.0, 151.5], [297.0, 263.2352941176471], [299.0, 217.375], [302.0, 188.0], [306.0, 177.44444444444446], [311.0, 246.5], [308.0, 156.0], [310.0, 396.0], [313.0, 519.0], [312.0, 175.0], [309.0, 141.0], [307.0, 170.0909090909091], [305.0, 177.60000000000002], [304.0, 204.5]], "isOverall": false, "label": "Detail Game Page", "isController": false}, {"data": [[179.3666666666665, 111.54583333333349]], "isOverall": false, "label": "Detail Game Page-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 313.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3816.266666666667, "minX": 1.60798206E12, "maxY": 34641.916666666664, "series": [{"data": [[1.60798212E12, 34641.916666666664], [1.60798206E12, 19328.783333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.60798212E12, 3998.5666666666666], [1.60798206E12, 3816.266666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60798212E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 74.06428571428572, "minX": 1.60798206E12, "maxY": 453.9874608150466, "series": [{"data": [[1.60798212E12, 361.32919254658395], [1.60798206E12, 453.9874608150466]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60798212E12, 118.76018099547503], [1.60798206E12, 160.73745173745164]], "isOverall": false, "label": "WinnersList", "isController": false}, {"data": [[1.60798212E12, 222.57142857142875], [1.60798206E12, 180.7147766323025]], "isOverall": false, "label": "Schedule", "isController": false}, {"data": [[1.60798212E12, 74.20648967551631], [1.60798206E12, 153.18439716312068]], "isOverall": false, "label": "Game Page", "isController": false}, {"data": [[1.60798212E12, 74.06428571428572], [1.60798206E12, 164.02000000000018]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60798212E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 73.62831858407083, "minX": 1.60798206E12, "maxY": 453.9749216300941, "series": [{"data": [[1.60798212E12, 361.32919254658395], [1.60798206E12, 453.9749216300941]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60798212E12, 118.76018099547503], [1.60798206E12, 160.72972972972974]], "isOverall": false, "label": "WinnersList", "isController": false}, {"data": [[1.60798212E12, 221.76719576719574], [1.60798206E12, 180.69759450171824]], "isOverall": false, "label": "Schedule", "isController": false}, {"data": [[1.60798212E12, 73.62831858407083], [1.60798206E12, 146.4468085106383]], "isOverall": false, "label": "Game Page", "isController": false}, {"data": [[1.60798212E12, 74.06428571428572], [1.60798206E12, 164.01500000000019]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60798212E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.60798206E12, "maxY": 229.61490683229806, "series": [{"data": [[1.60798212E12, 229.61490683229806], [1.60798206E12, 183.92789968652036]], "isOverall": false, "label": "HomePage", "isController": false}, {"data": [[1.60798212E12, 0.22624434389140283], [1.60798206E12, 0.0]], "isOverall": false, "label": "WinnersList", "isController": false}, {"data": [[1.60798212E12, 0.0], [1.60798206E12, 0.0]], "isOverall": false, "label": "Schedule", "isController": false}, {"data": [[1.60798212E12, 1.4218289085545741], [1.60798206E12, 0.0]], "isOverall": false, "label": "Game Page", "isController": false}, {"data": [[1.60798212E12, 0.8357142857142859], [1.60798206E12, 0.0]], "isOverall": false, "label": "Detail Game Page", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60798212E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 41.0, "minX": 1.60798206E12, "maxY": 1388.0, "series": [{"data": [[1.60798212E12, 1388.0], [1.60798206E12, 1069.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.60798212E12, 41.0], [1.60798206E12, 41.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.60798212E12, 469.3000000000004], [1.60798206E12, 569.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.60798212E12, 1211.0], [1.60798206E12, 989.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.60798212E12, 694.3999999999996], [1.60798206E12, 722.3999999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60798212E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 51.0, "minX": 19.0, "maxY": 1138.0, "series": [{"data": [[19.0, 59.0], [20.0, 186.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[19.0, 1138.0], [20.0, 51.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 20.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.create();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 51.0, "minX": 19.0, "maxY": 1123.0, "series": [{"data": [[19.0, 59.0], [20.0, 186.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[19.0, 1123.0], [20.0, 51.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 20.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency (ms)",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 18.033333333333335, "minX": 1.60798206E12, "maxY": 21.966666666666665, "series": [{"data": [[1.60798212E12, 18.033333333333335], [1.60798206E12, 21.966666666666665]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60798212E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.4166666666666667, "minX": 1.60798206E12, "maxY": 19.416666666666668, "series": [{"data": [[1.60798212E12, 19.416666666666668], [1.60798206E12, 16.383333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.60798212E12, 0.4166666666666667], [1.60798206E12, 3.783333333333333]], "isOverall": false, "label": "502", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.60798212E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses/sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.60798206E12, "maxY": 5.65, "series": [{"data": [[1.60798212E12, 5.65], [1.60798206E12, 2.35]], "isOverall": false, "label": "Game Page-success", "isController": false}, {"data": [[1.60798212E12, 0.13333333333333333], [1.60798206E12, 1.3166666666666667]], "isOverall": false, "label": "Schedule-failure", "isController": false}, {"data": [[1.60798206E12, 0.4166666666666667]], "isOverall": false, "label": "Detail Game Page-failure", "isController": false}, {"data": [[1.60798212E12, 3.55], [1.60798206E12, 3.683333333333333]], "isOverall": false, "label": "WinnersList-success", "isController": false}, {"data": [[1.60798212E12, 0.15], [1.60798206E12, 1.4166666666666667]], "isOverall": false, "label": "HomePage-failure", "isController": false}, {"data": [[1.60798212E12, 0.13333333333333333], [1.60798206E12, 0.6333333333333333]], "isOverall": false, "label": "WinnersList-failure", "isController": false}, {"data": [[1.60798212E12, 4.666666666666667], [1.60798206E12, 2.9166666666666665]], "isOverall": false, "label": "Detail Game Page-success", "isController": false}, {"data": [[1.60798212E12, 3.0166666666666666], [1.60798206E12, 3.533333333333333]], "isOverall": false, "label": "Schedule-success", "isController": false}, {"data": [[1.60798212E12, 2.533333333333333], [1.60798206E12, 3.9]], "isOverall": false, "label": "HomePage-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.60798212E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: "%H:%M:%S",
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

// Collapse
$(function() {
        $('.collapse').on('shown.bs.collapse', function(){
            collapse(this, false);
        }).on('hidden.bs.collapse', function(){
            collapse(this, true);
        });
});

$(function() {
    $(".glyphicon").mousedown( function(event){
        var tmp = $('.in:not(ul)');
        tmp.parent().parent().parent().find(".fa-chevron-up").removeClass("fa-chevron-down").addClass("fa-chevron-down");
        tmp.removeClass("in");
        tmp.addClass("out");
    });
});

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "responseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    choiceContainer.find("label").each(function(){
        this.style.color = color;
    });
}

// Unchecks all boxes for "Hide all samples" functionality
function uncheckAll(id){
    toggleAll(id, false);
}

// Checks all boxes for "Show all samples" functionality
function checkAll(id){
    toggleAll(id, true);
}

// Prepares data to be consumed by plot plugins
function prepareData(series, choiceContainer, customizeSeries){
    var datasets = [];

    // Add only selected series to the data set
    choiceContainer.find("input:checked").each(function (index, item) {
        var key = $(item).attr("name");
        var i = 0;
        var size = series.length;
        while(i < size && series[i].label != key)
            i++;
        if(i < size){
            var currentSeries = series[i];
            datasets.push(currentSeries);
            if(customizeSeries)
                customizeSeries(currentSeries);
        }
    });
    return datasets;
}

/*
 * Ignore case comparator
 */
function sortAlphaCaseless(a,b){
    return a.toLowerCase() > b.toLowerCase() ? 1 : -1;
};

/*
 * Creates a legend in the specified element with graph information
 */
function createLegend(choiceContainer, infos) {
    // Sort series by name
    var keys = [];
    $.each(infos.data.result.series, function(index, series){
        keys.push(series.label);
    });
    keys.sort(sortAlphaCaseless);

    // Create list of series with support of activation/deactivation
    $.each(keys, function(index, key) {
        var id = choiceContainer.attr('id') + index;
        $('<li />')
            .append($('<input id="' + id + '" name="' + key + '" type="checkbox" checked="checked" hidden />'))
            .append($('<label />', { 'text': key , 'for': id }))
            .appendTo(choiceContainer);
    });
    choiceContainer.find("label").click( function(){
        if (this.style.color !== "rgb(129, 129, 129)" ){
            this.style.color="#818181";
        }else {
            this.style.color="black";
        }
        $(this).parent().children().children().toggleClass("legend-disabled");
    });
    choiceContainer.find("label").mousedown( function(event){
        event.preventDefault();
    });
    choiceContainer.find("label").mouseenter(function(){
        this.style.cursor="pointer";
    });

    // Recreate graphe on series activation toggle
    choiceContainer.find("input").click(function(){
        infos.createGraph();
    });
}
